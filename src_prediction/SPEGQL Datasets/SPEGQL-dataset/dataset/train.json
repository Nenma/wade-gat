[
  {
    "query" : "query { faculty_aggregate { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "How many faculty do we have?"
  },
  {
    "query" : "query { faculty_aggregate { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "What is the total number of faculty members?"
  },
  {
    "query" : "query { faculty ( distinct_on : rank ) { rank } }",
    "schemaId" : "activity_1",
    "question" : "What ranks do we have for faculty?"
  },
  {
    "query" : "query { faculty ( distinct_on : rank ) { rank } }",
    "schemaId" : "activity_1",
    "question" : "Find the list of distinct ranks for faculty."
  },
  {
    "query" : "query { faculty ( distinct_on : building ) { building } }",
    "schemaId" : "activity_1",
    "question" : "Show all the distinct buildings that have faculty rooms."
  },
  {
    "query" : "query { faculty ( distinct_on : building ) { building } }",
    "schemaId" : "activity_1",
    "question" : "What buildings have faculty offices?"
  },
  {
    "query" : "query { faculty { rank fname lname } }",
    "schemaId" : "activity_1",
    "question" : "Show the rank, first name, and last name for all the faculty."
  },
  {
    "query" : "query { faculty { rank fname lname } }",
    "schemaId" : "activity_1",
    "question" : "What are the rank, first name, and last name of the faculty members?"
  },
  {
    "query" : "query { faculty ( where : { sex : { _eq : \"F\" } } ) { fname lname phone } }",
    "schemaId" : "activity_1",
    "question" : "Show the first name, last name, and phone number for all female faculty members."
  },
  {
    "query" : "query { faculty ( where : { sex : { _eq : \"F\" } } ) { fname lname phone } }",
    "schemaId" : "activity_1",
    "question" : "What are the first name, last name, and phone number of all the female faculty members?"
  },
  {
    "query" : "query { faculty ( where : { sex : { _eq : \"M\" } } ) { facid } }",
    "schemaId" : "activity_1",
    "question" : "Show ids for all the male faculty."
  },
  {
    "query" : "query { faculty ( where : { sex : { _eq : \"M\" } } ) { facid } }",
    "schemaId" : "activity_1",
    "question" : "What are the faculty ids of all the male faculty members?"
  },
  {
    "query" : "query { faculty_aggregate ( where : { _and : { rank : { _eq : \"Professor\" } , sex : { _eq : \"F\" } } } ) { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "How many female Professors do we have?"
  },
  {
    "query" : "query { faculty_aggregate ( where : { _and : { sex : { _eq : \"F\" } , rank : { _eq : \"Professor\" } } } ) { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "Count the number of female Professors we have."
  },
  {
    "query" : "query { faculty ( where : { _and : { fname : { _eq : \"Jerry\" } , lname : { _eq : \"Prince\" } } } ) { phone room building } }",
    "schemaId" : "activity_1",
    "question" : "Show the phone, room, and building for the faculty named Jerry Prince."
  },
  {
    "query" : "query { faculty ( where : { _and : { fname : { _eq : \"Jerry\" } , lname : { _eq : \"Prince\" } } } ) { phone room building } }",
    "schemaId" : "activity_1",
    "question" : "What are the phone, room, and building of the faculty member called Jerry Prince?"
  },
  {
    "query" : "query { faculty_aggregate ( where : { _and : { rank : { _eq : \"Professor\" } , building : { _eq : \"NEB\" } } } ) { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "How many Professors are in building NEB?"
  },
  {
    "query" : "query { faculty_aggregate ( where : { _and : { rank : { _eq : \"Professor\" } , building : { _eq : \"NEB\" } } } ) { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "Count the number of Professors who have office in building NEB."
  },
  {
    "query" : "query { faculty ( where : { rank : { _eq : \"Instructor\" } } ) { fname lname } }",
    "schemaId" : "activity_1",
    "question" : "Show the first name and last name for all the instructors."
  },
  {
    "query" : "query { faculty ( where : { rank : { _eq : \"Instructor\" } } ) { fname lname } }",
    "schemaId" : "activity_1",
    "question" : "What are the first name and last name of all the instructors?"
  },
  {
    "query" : "query { activity { activity_name } }",
    "schemaId" : "activity_1",
    "question" : "What activities do we have?"
  },
  {
    "query" : "query { activity { activity_name } }",
    "schemaId" : "activity_1",
    "question" : "List all the activities we have."
  },
  {
    "query" : "query { activity_aggregate { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "How many activities do we have?"
  },
  {
    "query" : "query { activity_aggregate { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "Find the number of activities available."
  },
  {
    "query" : "query { faculty_participates_in_aggregate { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "How many faculty members participate in an activity?"
  },
  {
    "query" : "query { faculty_participates_in_aggregate { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "Give me the number of faculty members who participate in an activity"
  },
  {
    "query" : "query { faculty_aggregate ( where : { _and : { fname : { _eq : \"Mark\" } , lname : { _eq : \"Giuliano\" } } } ) { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "How many activities does Mark Giuliano participate in?"
  },
  {
    "query" : "query { faculty_aggregate ( where : { _and : { fname : { _eq : \"Mark\" } , lname : { _eq : \"Giuliano\" } } } ) { aggregate { count } } }",
    "schemaId" : "activity_1",
    "question" : "Find the number of activities Mark Giuliano is involved in."
  },
  {
    "query" : "query { activity ( where : { _and : { faculty_participates_ins : { faculty : { lname : { _eq : \"Giuliano\" } , fname : { _eq : \"Mark\" } } } } } ) { activity_name } }",
    "schemaId" : "activity_1",
    "question" : "Show the names of all the activities Mark Giuliano participates in."
  },
  {
    "query" : "query { activity ( where : { _and : { faculty_participates_ins : { faculty : { fname : { _eq : \"Mark\" } , lname : { _eq : \"Giuliano\" } } } } } ) { activity_name } }",
    "schemaId" : "activity_1",
    "question" : "What are the names of the activities Mark Giuliano is involved in"
  },
  {
    "query" : "query { aircraft_aggregate { aggregate { count } } }",
    "schemaId" : "aircraft",
    "question" : "How many aircrafts are there?"
  },
  {
    "query" : "query { aircraft_aggregate { aggregate { count } } }",
    "schemaId" : "aircraft",
    "question" : "What is the number of aircraft?"
  },
  {
    "query" : "query { aircraft { Description } }",
    "schemaId" : "aircraft",
    "question" : "List the description of all aircrafts."
  },
  {
    "query" : "query { aircraft { Description } }",
    "schemaId" : "aircraft",
    "question" : "What are the descriptions for the aircrafts?"
  },
  {
    "query" : "query { airport_aggregate { aggregate { avg { International_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What is the average number of international passengers of all airports?"
  },
  {
    "query" : "query { airport_aggregate { aggregate { avg { International_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What is the average number of international passengers for an airport?"
  },
  {
    "query" : "query { airport ( where : { Airport_Name : { _eq : \"London Heathrow\" } } ) { International_Passengers Domestic_Passengers } }",
    "schemaId" : "aircraft",
    "question" : "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?"
  },
  {
    "query" : "query { airport ( where : { Airport_Name : { _eq : \"London Heathrow\" } } ) { International_Passengers Domestic_Passengers } }",
    "schemaId" : "aircraft",
    "question" : "How many international and domestic passengers are there in the airport London Heathrow?"
  },
  {
    "query" : "query { airport_aggregate ( where : { Airport_Name : { _like : \"%London%\" } } ) { aggregate { sum { Domestic_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What are the total number of Domestic Passengers of airports that contain the word \"London\"."
  },
  {
    "query" : "query { airport_aggregate ( where : { Airport_Name : { _like : \"%London%\" } } ) { aggregate { sum { Domestic_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What are the total number of domestic passengers at all London airports?"
  },
  {
    "query" : "query { airport_aggregate { aggregate { max { Transit_Passengers } min { Transit_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What are the maximum and minimum number of transit passengers of all aiports."
  },
  {
    "query" : "query { airport_aggregate { aggregate { max { Transit_Passengers } min { Transit_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What is the maximum and mininum number of transit passengers for all airports?"
  },
  {
    "query" : "query { pilot ( where : { Age : { _gte : 25 } } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "What are the name of pilots aged 25 or older?"
  },
  {
    "query" : "query { pilot ( where : { Age : { _gte : 25 } } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "what is the name of every pilot who is at least 25 years old?"
  },
  {
    "query" : "query { pilot ( order_by : { Name : asc } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "List all pilot names in ascending alphabetical order."
  },
  {
    "query" : "query { pilot ( order_by : { Name : asc } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "What are the names of the pilots in alphabetical order?"
  },
  {
    "query" : "query { pilot ( order_by : { Name : desc } , where : { Age : { _lte : 30 } } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "List names of all pilot aged 30 or younger in descending alphabetical order."
  },
  {
    "query" : "query { pilot ( order_by : { Name : desc } , where : { Age : { _lte : 30 } } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "What are the names of all pilots 30 years old or young in descending alphabetical order?"
  },
  {
    "query" : "query { airport_aggregate ( where : { airport_aircrafts : { aircraft : { Aircraft : { _eq : \"Robinson R-22\" } } } } ) { aggregate { avg { Total_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What is the average total number of passengers of airports that are associated with aircraft \"Robinson R-22\"?"
  },
  {
    "query" : "query { airport_aggregate ( where : { airport_aircrafts : { aircraft : { Aircraft : { _eq : \"Robinson R-22\" } } } } ) { aggregate { avg { Total_Passengers } } } }",
    "schemaId" : "aircraft",
    "question" : "What is the average total number of passengers for all airports that the aircraft \"Robinson R-22\" visits?"
  },
  {
    "query" : "query { match { Location aircraft { Aircraft } } }",
    "schemaId" : "aircraft",
    "question" : "Please list the location and the winning aircraft name."
  },
  {
    "query" : "query { match { Location aircraft { Aircraft } } }",
    "schemaId" : "aircraft",
    "question" : "What is the location and name of the winning aircraft?"
  },
  {
    "query" : "query { pilot ( order_by : { Age : desc } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "List names of all pilot in descending order of age."
  },
  {
    "query" : "query { pilot ( order_by : { Age : desc } ) { Name } }",
    "schemaId" : "aircraft",
    "question" : "What are the names of all pilots listed by descending age?"
  },
  {
    "query" : "query { airport ( limit : 1 , order_by : { International_Passengers : desc } ) { Aircraft_Movements Airport_ID Airport_Name Domestic_Passengers Freight_Metric_Tonnes International_Passengers Total_Passengers Transit_Passengers } }",
    "schemaId" : "aircraft",
    "question" : "Show all information on the airport that has the largest number of international passengers."
  },
  {
    "query" : "query { airport ( limit : 1 , order_by : { International_Passengers : desc } ) { Aircraft_Movements Airport_ID Airport_Name Domestic_Passengers Freight_Metric_Tonnes International_Passengers Total_Passengers Transit_Passengers } }",
    "schemaId" : "aircraft",
    "question" : "What is all the information on the airport with the largest number of international passengers?"
  },
  {
    "query" : "query { pilot ( limit : 1 , order_by : { Age : asc } ) { Name Age } }",
    "schemaId" : "aircraft",
    "question" : "what is the name and age of the youngest winning pilot?"
  },
  {
    "query" : "query { pilot ( limit : 1 , order_by : { Age : asc } ) { Name Age } }",
    "schemaId" : "aircraft",
    "question" : "How old is the youngest winning pilot and what is their name?"
  },
  {
    "query" : "query { allergy_type_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many allergies are there?"
  },
  {
    "query" : "query { allergy_type_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many allergy entries are there?"
  },
  {
    "query" : "query { allergy_type_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many different allergy types exist?"
  },
  {
    "query" : "query { allergy_type_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many distinct allergies are there?"
  },
  {
    "query" : "query { allergy_type ( distinct_on : allergytype ) { allergytype } }",
    "schemaId" : "allergy_1",
    "question" : "Show all allergy types."
  },
  {
    "query" : "query { allergy_type ( distinct_on : allergytype ) { allergytype } }",
    "schemaId" : "allergy_1",
    "question" : "What are the different allergy types?"
  },
  {
    "query" : "query { allergy_type { allergy allergytype } }",
    "schemaId" : "allergy_1",
    "question" : "Show all allergies and their types."
  },
  {
    "query" : "query { allergy_type { allergy allergytype } }",
    "schemaId" : "allergy_1",
    "question" : "What are the allergies and their types?"
  },
  {
    "query" : "query { allergy_type ( where : { allergytype : { _eq : \"food\" } } , distinct_on : allergy ) { allergy } }",
    "schemaId" : "allergy_1",
    "question" : "Show all allergies with type food."
  },
  {
    "query" : "query { allergy_type ( where : { allergytype : { _eq : \"food\" } } , distinct_on : allergy ) { allergy } }",
    "schemaId" : "allergy_1",
    "question" : "What are all the different food allergies?"
  },
  {
    "query" : "query { allergy_type ( where : { allergy : { _eq : \"Cat\" } } ) { allergytype } }",
    "schemaId" : "allergy_1",
    "question" : "What is the type of allergy Cat?"
  },
  {
    "query" : "query { allergy_type ( where : { allergy : { _eq : \"Cat\" } } ) { allergytype } }",
    "schemaId" : "allergy_1",
    "question" : "What is allergy type of a cat allergy?"
  },
  {
    "query" : "query { allergy_type_aggregate ( where : { allergytype : { _eq : \"animal\" } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many allergies have type animal?"
  },
  {
    "query" : "query { allergy_type_aggregate ( where : { allergytype : { _eq : \"animal\" } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many animal type allergies exist?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students are there?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "What is the total number of students?"
  },
  {
    "query" : "query { student { fname lname } }",
    "schemaId" : "allergy_1",
    "question" : "Show first name and last name for all students."
  },
  {
    "query" : "query { student { fname lname } }",
    "schemaId" : "allergy_1",
    "question" : "What are the full names of all students"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many different advisors are listed?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many advisors are there?"
  },
  {
    "query" : "query { student ( distinct_on : major ) { major } }",
    "schemaId" : "allergy_1",
    "question" : "Show all majors."
  },
  {
    "query" : "query { student ( distinct_on : major ) { major } }",
    "schemaId" : "allergy_1",
    "question" : "What are the different majors?"
  },
  {
    "query" : "query { student ( distinct_on : city_code ) { city_code } }",
    "schemaId" : "allergy_1",
    "question" : "Show all cities where students live."
  },
  {
    "query" : "query { student ( distinct_on : city_code ) { city_code } }",
    "schemaId" : "allergy_1",
    "question" : "What cities do students live in?"
  },
  {
    "query" : "query { student ( where : { sex : { _eq : \"F\" } } ) { fname lname age } }",
    "schemaId" : "allergy_1",
    "question" : "Show first name, last name, age for all female students. Their sex is F."
  },
  {
    "query" : "query { student ( where : { sex : { _eq : \"F\" } } ) { fname lname age } }",
    "schemaId" : "allergy_1",
    "question" : "What are the full names and ages for all female students whose sex is F?"
  },
  {
    "query" : "query { student ( where : { sex : { _eq : \"M\" } } ) { stuid } }",
    "schemaId" : "allergy_1",
    "question" : "Show student ids for all male students."
  },
  {
    "query" : "query { student ( where : { sex : { _eq : \"M\" } } ) { stuid } }",
    "schemaId" : "allergy_1",
    "question" : "What are the student ids for all male students?"
  },
  {
    "query" : "query { student_aggregate ( where : { age : { _eq : 18 } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students are age 18?"
  },
  {
    "query" : "query { student_aggregate ( where : { age : { _eq : 18 } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students are 18 years old?"
  },
  {
    "query" : "query { student ( where : { age : { _gt : 20 } } ) { stuid } }",
    "schemaId" : "allergy_1",
    "question" : "Show all student ids who are older than 20."
  },
  {
    "query" : "query { student ( where : { age : { _gt : 20 } } ) { stuid } }",
    "schemaId" : "allergy_1",
    "question" : "What are the student ids for students over 20 years old?"
  },
  {
    "query" : "query { student ( where : { lname : { _eq : \"Kim\" } } ) { city_code } }",
    "schemaId" : "allergy_1",
    "question" : "Which city does the student whose last name is \"Kim\" live in?"
  },
  {
    "query" : "query { student ( where : { lname : { _eq : \"Kim\" } } ) { city_code } }",
    "schemaId" : "allergy_1",
    "question" : "Give the city that the student whose family name is Kim lives in."
  },
  {
    "query" : "query { student ( where : { stuid : { _eq : 1004 } } ) { advisor } }",
    "schemaId" : "allergy_1",
    "question" : "Who is the advisor of student with ID 1004?"
  },
  {
    "query" : "query { student ( where : { stuid : { _eq : 1004 } } ) { advisor } }",
    "schemaId" : "allergy_1",
    "question" : "Who advises student 1004?"
  },
  {
    "query" : "query { student_aggregate ( where : { _or : [ { city_code : { _eq : \"HKG\" } } , { city_code : { _eq : \"CHI\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students live in HKG or CHI?"
  },
  {
    "query" : "query { student_aggregate ( where : { _or : [ { city_code : { _eq : \"HKG\" } } , { city_code : { _eq : \"CHI\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "Give the number of students living in either HKG or CHI."
  },
  {
    "query" : "query { student_aggregate { aggregate { min { age } avg { age } max { age } } } }",
    "schemaId" : "allergy_1",
    "question" : "Show the minimum, average, and maximum age of all students."
  },
  {
    "query" : "query { student_aggregate { aggregate { min { age } avg { age } max { age } } } }",
    "schemaId" : "allergy_1",
    "question" : "What is the minimum, mean, and maximum age across all students?"
  },
  {
    "query" : "query { has_allergy_aggregate ( where : { allergy : { _eq : \"Cat\" } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students have cat allergies?"
  },
  {
    "query" : "query { has_allergy_aggregate ( where : { allergy : { _eq : \"Cat\" } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students are affected by cat allergies?"
  },
  {
    "query" : "query { has_allergy_aggregate ( where : { _or : [ { _and : { student : { sex : { _eq : \"F\" } } , allergy : { _eq : \"Milk\" } } } , { allergy : { _eq : \"Eggs\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many female students have milk or egg allergies?"
  },
  {
    "query" : "query { has_allergy_aggregate ( where : { _or : [ { _and : { student : { sex : { _eq : \"F\" } } , allergy : { _eq : \"Milk\" } } } , { allergy : { _eq : \"Eggs\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students who are female are allergic to milk or eggs?"
  },
  {
    "query" : "query { has_allergy_aggregate ( where : { allergy_type : { allergytype : { _eq : \"food\" } } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students have a food allergy?"
  },
  {
    "query" : "query { has_allergy_aggregate ( where : { allergy_type : { allergytype : { _eq : \"food\" } } } ) { aggregate { count } } }",
    "schemaId" : "allergy_1",
    "question" : "How many students are affected by food related allergies?"
  },
  {
    "query" : "query { apartment_bookings_aggregate { aggregate { count } } }",
    "schemaId" : "apartment_rentals",
    "question" : "How many apartment bookings are there in total?"
  },
  {
    "query" : "query { apartment_bookings_aggregate { aggregate { count } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Count the total number of apartment bookings."
  },
  {
    "query" : "query { apartment_bookings { booking_start_date booking_end_date } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the start dates and end dates of all the apartment bookings."
  },
  {
    "query" : "query { apartment_bookings { booking_start_date booking_end_date } }",
    "schemaId" : "apartment_rentals",
    "question" : "What are the start date and end date of each apartment booking?"
  },
  {
    "query" : "query { apartment_buildings ( distinct_on : building_description ) { building_description } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show all distinct building descriptions."
  },
  {
    "query" : "query { apartment_buildings ( distinct_on : building_description ) { building_description } }",
    "schemaId" : "apartment_rentals",
    "question" : "Give me a list of all the distinct building descriptions."
  },
  {
    "query" : "query { apartment_buildings ( where : { building_manager : { _eq : \"Emma\" } } ) { building_short_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the short names of the buildings managed by \"Emma\"."
  },
  {
    "query" : "query { apartment_buildings ( where : { building_manager : { _eq : \"Emma\" } } ) { building_short_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "Which buildings does \"Emma\" manage? Give me the short names of the buildings."
  },
  {
    "query" : "query { apartment_buildings ( where : { building_manager : { _eq : \"Brenden\" } } ) { building_address building_phone } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the addresses and phones of all the buildings managed by \"Brenden\"."
  },
  {
    "query" : "query { apartment_buildings ( where : { building_manager : { _eq : \"Brenden\" } } ) { building_address building_phone } }",
    "schemaId" : "apartment_rentals",
    "question" : "What are the address and phone number of the buildings managed by \"Brenden\"?"
  },
  {
    "query" : "query { apartment_buildings ( where : { building_full_name : { _like : \"%court%\" } } ) { building_full_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "What are the building full names that contain the word \"court\"?"
  },
  {
    "query" : "query { apartment_buildings ( where : { building_full_name : { _like : \"%court%\" } } ) { building_full_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "Find all the building full names containing the word \"court\"."
  },
  {
    "query" : "query { apartments_aggregate { aggregate { min { bathroom_count } max { bathroom_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "What is the minimum and maximum number of bathrooms of all the apartments?"
  },
  {
    "query" : "query { apartments_aggregate { aggregate { min { bathroom_count } max { bathroom_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Give me the minimum and maximum bathroom count among all the apartments."
  },
  {
    "query" : "query { apartments_aggregate { aggregate { avg { bedroom_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "What is the average number of bedrooms of all apartments?"
  },
  {
    "query" : "query { apartments_aggregate { aggregate { avg { bedroom_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Find the average number of bedrooms of all the apartments."
  },
  {
    "query" : "query { apartments { apt_number room_count } }",
    "schemaId" : "apartment_rentals",
    "question" : "Return the apartment number and the number of rooms for each apartment."
  },
  {
    "query" : "query { apartments { apt_number room_count } }",
    "schemaId" : "apartment_rentals",
    "question" : "What are the apartment number and the room count of each apartment?"
  },
  {
    "query" : "query { apartments_aggregate ( where : { apt_type_code : { _eq : \"Studio\" } } ) { aggregate { avg { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "What is the average number of rooms of apartments with type code \"Studio\"?"
  },
  {
    "query" : "query { apartments_aggregate ( where : { apt_type_code : { _eq : \"Studio\" } } ) { aggregate { avg { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Find the average room count of the apartments that have the \"Studio\" type code."
  },
  {
    "query" : "query { apartments ( where : { apt_type_code : { _eq : \"Flat\" } } ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Return the apartment numbers of the apartments with type code \"Flat\"."
  },
  {
    "query" : "query { apartments ( where : { apt_type_code : { _eq : \"Flat\" } } ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Which apartments have type code \"Flat\"? Give me their apartment numbers."
  },
  {
    "query" : "query { guests { guest_first_name guest_last_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "Return the first names and last names of all guests"
  },
  {
    "query" : "query { guests { guest_first_name guest_last_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "What are the first names and last names of all the guests?"
  },
  {
    "query" : "query { guests ( where : { gender_code : { _eq : \"Male\" } } ) { date_of_birth } }",
    "schemaId" : "apartment_rentals",
    "question" : "Return the date of birth for all the guests with gender code \"Male\"."
  },
  {
    "query" : "query { guests ( where : { gender_code : { _eq : \"Male\" } } ) { date_of_birth } }",
    "schemaId" : "apartment_rentals",
    "question" : "What are dates of birth of all the guests whose gender is \"Male\"?"
  },
  {
    "query" : "query { apartment_bookings ( where : { apartment : { apt_number : { _eq : \"Suite 634\" } } } ) { booking_status_code } }",
    "schemaId" : "apartment_rentals",
    "question" : "What is the booking status code of the apartment with apartment number \"Suite 634\"?"
  },
  {
    "query" : "query { apartment_bookings ( where : { apartment : { apt_number : { _eq : \"Suite 634\" } } } ) { booking_status_code } }",
    "schemaId" : "apartment_rentals",
    "question" : "Tell me the booking status code for the apartment with number \"Suite 634\"."
  },
  {
    "query" : "query { apartments ( where : { apartment_bookings : { booking_status_code : { _eq : \"Confirmed\" } } } , distinct_on : apt_number ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the distinct apartment numbers of the apartments that have bookings with status code \"Confirmed\"."
  },
  {
    "query" : "query { apartments ( where : { apartment_bookings : { booking_status_code : { _eq : \"Confirmed\" } } } , distinct_on : apt_number ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Which apartments have bookings with status code \"Confirmed\"? Return their apartment numbers."
  },
  {
    "query" : "query { apartments_aggregate ( where : { apartment_bookings : { booking_status_code : { _eq : \"Provisional\" } } } ) { aggregate { avg { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the average room count of the apartments that have booking status code \"Provisional\"."
  },
  {
    "query" : "query { apartments_aggregate ( where : { apartment_bookings : { booking_status_code : { _eq : \"Provisional\" } } } ) { aggregate { avg { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "What is the average room count of the apartments whose booking status code is \"Provisional\"?"
  },
  {
    "query" : "query { guests ( where : { apartment_bookings : { booking_status_code : { _eq : \"Confirmed\" } } } ) { guest_first_name guest_last_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the first names and last names of all the guests that have apartment bookings with status code \"Confirmed\"."
  },
  {
    "query" : "query { guests ( where : { apartment_bookings : { booking_status_code : { _eq : \"Confirmed\" } } } ) { guest_first_name guest_last_name } }",
    "schemaId" : "apartment_rentals",
    "question" : "Which guests have apartment bookings with status code \"Confirmed\"? Return their first names and last names."
  },
  {
    "query" : "query { apartment_facilities ( where : { apartment : { bedroom_count : { _gt : 4 } } } ) { facility_code } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the facility codes of apartments with more than 4 bedrooms."
  },
  {
    "query" : "query { apartment_facilities ( where : { apartment : { bedroom_count : { _gt : 4 } } } ) { facility_code } }",
    "schemaId" : "apartment_rentals",
    "question" : "What are the facility codes of the apartments with more than four bedrooms?"
  },
  {
    "query" : "query { apartments_aggregate ( where : { apartment_facilities : { facility_code : { _eq : \"Gym\" } } } ) { aggregate { sum { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the total number of rooms of all apartments with facility code \"Gym\"."
  },
  {
    "query" : "query { apartments_aggregate ( where : { apartment_facilities : { facility_code : { _eq : \"Gym\" } } } ) { aggregate { sum { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Find the total number of rooms in the apartments that have facility code \"Gym\"."
  },
  {
    "query" : "query { apartments_aggregate ( where : { apartment_building : { building_short_name : { _eq : \"Columbus Square\" } } } ) { aggregate { sum { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the total number of rooms of the apartments in the building with short name \"Columbus Square\"."
  },
  {
    "query" : "query { apartments_aggregate ( where : { apartment_building : { building_short_name : { _eq : \"Columbus Square\" } } } ) { aggregate { sum { room_count } } } }",
    "schemaId" : "apartment_rentals",
    "question" : "How many rooms in total are there in the apartments in the building with short name \"Columbus Square\"?"
  },
  {
    "query" : "query { apartment_buildings ( where : { apartments : { bathroom_count : { _gt : 2 } } } ) { building_address } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the addresses of the buildings that have apartments with more than 2 bathrooms."
  },
  {
    "query" : "query { apartment_buildings ( where : { apartments : { bathroom_count : { _gt : 2 } } } ) { building_address } }",
    "schemaId" : "apartment_rentals",
    "question" : "Which buildings have apartments that have more than two bathrooms? Give me the addresses of the buildings."
  },
  {
    "query" : "query { apartments ( where : { apartment_building : { building_manager : { _eq : \"Kyle\" } } } ) { apt_type_code apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Show the apartment type codes and apartment numbers in the buildings managed by \"Kyle\"."
  },
  {
    "query" : "query { apartments ( where : { apartment_building : { building_manager : { _eq : \"Kyle\" } } } ) { apt_type_code apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "What apartment type codes and apartment numbers do the buildings managed by \"Kyle\" have?"
  },
  {
    "query" : "query { apartments ( order_by : { room_count : asc } ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Return all the apartment numbers sorted by the room count in ascending order."
  },
  {
    "query" : "query { apartments ( order_by : { room_count : asc } ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Sort the apartment numbers in ascending order of room count."
  },
  {
    "query" : "query { apartments ( limit : 1 , order_by : { bedroom_count : desc } ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "Return the apartment number with the largest number of bedrooms."
  },
  {
    "query" : "query { apartments ( limit : 1 , order_by : { bedroom_count : desc } ) { apt_number } }",
    "schemaId" : "apartment_rentals",
    "question" : "What is the apartment number of the apartment with the most beds?"
  },
  {
    "query" : "query { architect_aggregate ( where : { gender : { _eq : \"female\" } } ) { aggregate { count } } }",
    "schemaId" : "architecture",
    "question" : "How many architects are female?"
  },
  {
    "query" : "query { architect ( order_by : { name : asc } , where : { gender : { _eq : \"male\" } } ) { name nationality id } }",
    "schemaId" : "architecture",
    "question" : "List the name, nationality and id of all male architects ordered by their names lexicographically."
  },
  {
    "query" : "query { bridge_aggregate { nodes { architect { name } } aggregate { max { length_meters } } } }",
    "schemaId" : "architecture",
    "question" : "What is the maximum length in meters for the bridges and what are the architects' names?"
  },
  {
    "query" : "query { bridge_aggregate { aggregate { avg { length_feet } } } }",
    "schemaId" : "architecture",
    "question" : "What is the average length in feet of the bridges?"
  },
  {
    "query" : "query { mill ( where : { type : { _eq : \"Grondzeiler\" } } ) { name built_year } }",
    "schemaId" : "architecture",
    "question" : "What are the names and year of construction for the mills of 'Grondzeiler' type?"
  },
  {
    "query" : "query { mill ( where : { location : { _neq : \"Donceel\" } } ) { name } }",
    "schemaId" : "architecture",
    "question" : "What are the names of the mills which are not located in 'Donceel'?"
  },
  {
    "query" : "query { mill ( where : { _or : [ { architect : { nationality : { _eq : \"American\" } } } , { architect : { nationality : { _eq : \"Canadian\" } } } ] } , distinct_on : type ) { type } }",
    "schemaId" : "architecture",
    "question" : "What are the distinct types of mills that are built by American or Canadian architects?"
  },
  {
    "query" : "query { bridge ( where : { _or : [ { name : { _eq : \"Kolob Arch\" } } , { name : { _eq : \"Rainbow Bridge\" } } ] } ) { location } }",
    "schemaId" : "architecture",
    "question" : "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'?"
  },
  {
    "query" : "query { mill ( where : { name : { _like : \"%Moulin%\" } } ) { name } }",
    "schemaId" : "architecture",
    "question" : "Which of the mill names contains the french word 'Moulin'?"
  },
  {
    "query" : "query { bridge ( order_by : { length_feet : asc } , where : { architect : { nationality : { _eq : \"American\" } } } ) { name } }",
    "schemaId" : "architecture",
    "question" : "show the name of all bridges that was designed by american archtect, and sort the result by the bridge feet length."
  },
  {
    "query" : "query { fault_log { fault_description fault_log_parts { fault_status } } }",
    "schemaId" : "assets_maintenance",
    "question" : "What are all the fault descriptions and the fault status of all the faults recoreded in the logs?"
  },
  {
    "query" : "query { maintenance_engineers ( distinct_on : last_name ) { last_name } }",
    "schemaId" : "assets_maintenance",
    "question" : "What are all the distinct last names of all the engineers?"
  },
  {
    "query" : "query { fault_log_parts ( distinct_on : fault_status ) { fault_status } }",
    "schemaId" : "assets_maintenance",
    "question" : "How many fault status codes are recorded in the fault log parts table?"
  },
  {
    "query" : "query { assets { asset_id asset_details asset_make asset_model } }",
    "schemaId" : "assets_maintenance",
    "question" : "List the asset id, details, make and model for every asset."
  },
  {
    "query" : "query { assets ( limit : 1 , order_by : { asset_acquired_date : asc } ) { asset_acquired_date } }",
    "schemaId" : "assets_maintenance",
    "question" : "When was the first asset acquired?"
  },
  {
    "query" : "query { assets ( distinct_on : asset_model ) { asset_model } }",
    "schemaId" : "assets_maintenance",
    "question" : "What are all the distinct asset models?"
  },
  {
    "query" : "query { assets ( order_by : { asset_disposed_date : asc } ) { asset_make asset_model asset_details } }",
    "schemaId" : "assets_maintenance",
    "question" : "List the all the assets make, model, details by the disposed date ascendingly."
  },
  {
    "query" : "query { parts ( limit : 1 , order_by : { chargeable_amount : asc } ) { part_id chargeable_amount } }",
    "schemaId" : "assets_maintenance",
    "question" : "Which part has the least chargeable amount? List the part id and amount."
  },
  {
    "query" : "query { third_party_companies ( limit : 1 , order_by : { maintenance_contracts_aggregate : { min : { contract_start_date : asc } } } ) { company_name } }",
    "schemaId" : "assets_maintenance",
    "question" : "Which company started the earliest the maintenance contract? Show the company name."
  },
  {
    "query" : "query { third_party_companies ( limit : 1 , order_by : { maintenance_contracts_aggregate : { max : { contract_end_date : desc_nulls_last } } } ) { company_name } }",
    "schemaId" : "assets_maintenance",
    "question" : "What is the description of the type of the company who concluded its contracts most recently?"
  },
  {
    "query" : "query { salary_aggregate ( where : { team : { name : { _eq : \"Boston Red Stockings\" } } } ) { aggregate { avg { salary } } } }",
    "schemaId" : "baseball_1",
    "question" : "What is average salary of the players in the team named 'Boston Red Stockings' ?"
  },
  {
    "query" : "query { salary_aggregate ( where : { team : { name : { _eq : \"Boston Red Stockings\" } } } ) { aggregate { avg { salary } } } }",
    "schemaId" : "baseball_1",
    "question" : "Compute the average salary of the players in the team called 'Boston Red Stockings'."
  },
  {
    "query" : "query { player ( where : { all_stars : { year : { _eq : 1998 } } } ) { name_first name_last } }",
    "schemaId" : "baseball_1",
    "question" : "What are first and last names of players participating in all star game in 1998?"
  },
  {
    "query" : "query { player ( where : { all_stars : { year : { _eq : 1998 } } } ) { name_first name_last } }",
    "schemaId" : "baseball_1",
    "question" : "List the first and last name for players who participated in all star game in 1998."
  },
  {
    "query" : "query { park_aggregate ( where : { state : { _eq : \"NY\" } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many parks are there in the state of NY?"
  },
  {
    "query" : "query { park_aggregate ( where : { state : { _eq : \"NY\" } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "Show me the number of parks the state of NY has."
  },
  {
    "query" : "query { player ( where : { death_year : { _is_null : true } } ) { name_first name_last } }",
    "schemaId" : "baseball_1",
    "question" : "Find all the players' first name and last name who have empty death record."
  },
  {
    "query" : "query { player ( where : { death_year : { _is_null : true } } ) { name_first name_last } }",
    "schemaId" : "baseball_1",
    "question" : "What are the first name and last name of the players whose death record is empty?"
  },
  {
    "query" : "query { player_aggregate ( where : { _and : { bats : { _eq : \"R\" } , birth_country : { _eq : \"USA\" } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many players born in USA are right-handed batters? That is, have the batter value 'R'."
  },
  {
    "query" : "query { player_aggregate ( where : { _and : { birth_country : { _eq : \"USA\" } , bats : { _eq : \"R\" } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "Count the number of players who were born in USA and have bats information 'R'."
  },
  {
    "query" : "query { player ( where : { _or : [ { weight : { _gt : 220 } } , { height : { _lt : 75 } } ] } ) { name_first name_last } }",
    "schemaId" : "baseball_1",
    "question" : "List players' first name and last name who have weight greater than 220 or height shorter than 75."
  },
  {
    "query" : "query { player ( where : { _or : [ { weight : { _gt : 220 } } , { height : { _lt : 75 } } ] } ) { name_first name_last } }",
    "schemaId" : "baseball_1",
    "question" : "What are the first name and last name of the players who have weight above 220 or height below 75?"
  },
  {
    "query" : "query { postseason_aggregate ( where : { _and : { ties : { _eq : 1 } , year : { _eq : 1885 } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many games in 1885 postseason resulted in ties (that is, the value of \"ties\" is '1')?"
  },
  {
    "query" : "query { postseason_aggregate ( where : { _and : { year : { _eq : 1885 } , ties : { _eq : 1 } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "Find the number of tied games (the value of \"ties\" is '1') in 1885 postseason."
  },
  {
    "query" : "query { salary_aggregate ( where : { _and : { team : { name : { _eq : \"Boston Red Stockings\" } } , year : { _eq : 2010 } } } ) { aggregate { sum { salary } } } }",
    "schemaId" : "baseball_1",
    "question" : "What is the total salary paid by team Boston Red Stockings in 2010?"
  },
  {
    "query" : "query { salary_aggregate ( where : { _and : { year : { _eq : 2010 } , team : { name : { _eq : \"Boston Red Stockings\" } } } } ) { aggregate { sum { salary } } } }",
    "schemaId" : "baseball_1",
    "question" : "What is the total salary expenses of team Boston Red Stockings in 2010?"
  },
  {
    "query" : "query { salary_aggregate ( where : { _and : { year : { _eq : 2000 } , team : { name : { _eq : \"Boston Red Stockings\" } } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many players were in the team Boston Red Stockings in 2000?"
  },
  {
    "query" : "query { salary_aggregate ( where : { _and : { team : { name : { _eq : \"Boston Red Stockings\" } } , year : { _eq : 2000 } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many players did Boston Red Stockings have in 2000?"
  },
  {
    "query" : "query { salary ( limit : 3 , order_by : { salary : desc } , where : { year : { _eq : 2001 } } ) { salary } }",
    "schemaId" : "baseball_1",
    "question" : "List the 3 highest salaries of the players in 2001?"
  },
  {
    "query" : "query { salary ( limit : 3 , order_by : { salary : desc } , where : { year : { _eq : 2001 } } ) { salary } }",
    "schemaId" : "baseball_1",
    "question" : "How much salary did the top 3 well-paid players get in 2001?"
  },
  {
    "query" : "query { park_aggregate ( where : { city : { _eq : \"Atlanta\" } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many parks are there in Atlanta city?"
  },
  {
    "query" : "query { park_aggregate ( where : { city : { _eq : \"Atlanta\" } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many parks does Atlanta city have?"
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { year : { _eq : 1907 } , park : { park_name : { _eq : \"Columbia Park\" } } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many games were played in park \"Columbia Park\" in 1907?"
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { year : { _eq : 1907 } , park : { park_name : { _eq : \"Columbia Park\" } } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "Count the number of games taken place in park \"Columbia Park\" in 1907."
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { year : { _eq : 2000 } , park : { city : { _eq : \"Atlanta\" } } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many games were played in city Atlanta in 2000?"
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { park : { city : { _eq : \"Atlanta\" } } , year : { _eq : 2000 } } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "Find the number of games taken place in city Atlanta in 2000."
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { year : { _gte : 2000 , _lte : 2010 } , team : { name : { _eq : \"Boston Red Stockings\" } } } } ) { aggregate { sum { attendance } } } }",
    "schemaId" : "baseball_1",
    "question" : "What is the total home game attendance of team Boston Red Stockings from 2000 to 2010?"
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { team : { name : { _eq : \"Boston Red Stockings\" } } , year : { _gte : 2000 , _lte : 2010 } } } ) { aggregate { sum { attendance } } } }",
    "schemaId" : "baseball_1",
    "question" : "How many games in total did team Boston Red Stockings attend from 2000 to 2010?"
  },
  {
    "query" : "query { salary_aggregate ( where : { _and : { player : { name_first : { _eq : \"Len\" } , name_last : { _eq : \"Barker\" } } , year : { _gte : 1985 , _lte : 1990 } } } ) { aggregate { sum { salary } } } }",
    "schemaId" : "baseball_1",
    "question" : "How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?"
  },
  {
    "query" : "query { salary_aggregate ( where : { _and : { year : { _gte : 1985 , _lte : 1990 } , player : { name_last : { _eq : \"Barker\" } , name_first : { _eq : \"Len\" } } } } ) { aggregate { sum { salary } } } }",
    "schemaId" : "baseball_1",
    "question" : "Compute the total salary that the player with first name Len and last name Barker received between 1985 to 1990."
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { year : { _gte : 1990 , _lte : 2000 } , team : { name : { _eq : \"Boston Red Stockings\" } } } } ) { aggregate { sum { games } } } }",
    "schemaId" : "baseball_1",
    "question" : "How many home games did the team Boston Red Stockings play from 1990 to 2000 in total?"
  },
  {
    "query" : "query { home_game_aggregate ( where : { _and : { team : { name : { _eq : \"Boston Red Stockings\" } } , year : { _gte : 1990 , _lte : 2000 } } } ) { aggregate { sum { games } } } }",
    "schemaId" : "baseball_1",
    "question" : "Count the total number of games the team Boston Red Stockings attended from 1990 to 2000."
  },
  {
    "query" : "query { team ( limit : 1 , order_by : { home_games_aggregate : { min : { attendance : asc } } } , where : { home_games : { year : { _eq : 1980 } } } ) { name } }",
    "schemaId" : "baseball_1",
    "question" : "Which team had the least number of attendances in home games in 1980?"
  },
  {
    "query" : "query { team ( limit : 1 , order_by : { home_games_aggregate : { min : { attendance : asc } } } , where : { home_games : { year : { _eq : 1980 } } } ) { name } }",
    "schemaId" : "baseball_1",
    "question" : "Find the team that attended the least number of home games in 1980."
  },
  {
    "query" : "query { team_franchise_aggregate ( where : { active : { _eq : \"Y\" } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "How many team franchises are active, with active value 'Y'?"
  },
  {
    "query" : "query { team_franchise_aggregate ( where : { active : { _eq : \"Y\" } } ) { aggregate { count } } }",
    "schemaId" : "baseball_1",
    "question" : "Find the number of team franchises that are active (have 'Y' as \"active\" information)."
  },
  {
    "query" : "query { park ( limit : 1 , order_by : { home_games_aggregate : { max : { attendance : desc_nulls_last } } } , where : { home_games : { year : { _eq : 2008 } } } ) { park_name } }",
    "schemaId" : "baseball_1",
    "question" : "Which park had most attendances in 2008?"
  },
  {
    "query" : "query { park ( limit : 1 , order_by : { home_games_aggregate : { max : { attendance : desc_nulls_last } } } , where : { home_games : { year : { _eq : 2008 } } } ) { park_name } }",
    "schemaId" : "baseball_1",
    "question" : "Which park did the most people attend in 2008?"
  },
  {
    "query" : "query { assessment_notes_aggregate { aggregate { count } } }",
    "schemaId" : "behavior_monitoring",
    "question" : "How many assessment notes are there in total?"
  },
  {
    "query" : "query { assessment_notes { date_of_notes } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What are the dates of the assessment notes?"
  },
  {
    "query" : "query { addresses_aggregate ( where : { zip_postcode : { _eq : \"197\" } } ) { aggregate { count } } }",
    "schemaId" : "behavior_monitoring",
    "question" : "How many addresses have zip code 197?"
  },
  {
    "query" : "query { behavior_incident_aggregate { aggregate { count } } }",
    "schemaId" : "behavior_monitoring",
    "question" : "How many distinct incident type codes are there?"
  },
  {
    "query" : "query { detention ( distinct_on : detention_type_code ) { detention_type_code } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Return all distinct detention type codes."
  },
  {
    "query" : "query { behavior_incident ( where : { incident_type_code : { _eq : \"NOISE\" } } ) { date_incident_start date_incident_end } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What are the start and end dates for incidents with incident type code \"NOISE\"?"
  },
  {
    "query" : "query { detention { detention_summary } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Return all detention summaries."
  },
  {
    "query" : "query { students { cell_mobile_number email_address } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Return the cell phone number and email address for all students."
  },
  {
    "query" : "query { students ( where : { _and : { first_name : { _eq : \"Emma\" } , last_name : { _eq : \"Rohan\" } } } ) { email_address } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?"
  },
  {
    "query" : "query { students_in_detention_aggregate { aggregate { count } } }",
    "schemaId" : "behavior_monitoring",
    "question" : "How many distinct students have been in detention?"
  },
  {
    "query" : "query { teachers ( where : { last_name : { _eq : \"Medhurst\" } } ) { gender } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What is the gender of the teacher with last name \"Medhurst\"?"
  },
  {
    "query" : "query { ref_incident_type ( where : { incident_type_code : { _eq : \"VIOLENCE\" } } ) { incident_type_description } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What is the incident type description for the incident type with code \"VIOLENCE\"?"
  },
  {
    "query" : "query { student_addresses_aggregate { aggregate { max { monthly_rental } min { monthly_rental } } } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find the maximum and minimum monthly rental for all student addresses."
  },
  {
    "query" : "query { teachers ( where : { email_address : { _like : \"%man%\" } } ) { first_name } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find the first names of teachers whose email address contains the word \"man\"."
  },
  {
    "query" : "query { assessment_notes ( order_by : { date_of_notes : asc } ) { date_of_notes notes_id other_details student_id teacher_id text_of_notes } }",
    "schemaId" : "behavior_monitoring",
    "question" : "List all information about the assessment notes sorted by date in ascending order."
  },
  {
    "query" : "query { addresses ( order_by : { city : asc } ) { city } }",
    "schemaId" : "behavior_monitoring",
    "question" : "List all cities of addresses in alphabetical order."
  },
  {
    "query" : "query { teachers ( order_by : { last_name : asc } ) { first_name last_name } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find the first names and last names of teachers in alphabetical order of last name."
  },
  {
    "query" : "query { student_addresses ( order_by : { monthly_rental : desc } ) { address_id date_address_from date_address_to monthly_rental other_details student_id } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find all information about student addresses, and sort by monthly rental in descending order."
  },
  {
    "query" : "query { assessment_notes ( where : { student : { first_name : { _eq : \"Fanny\" } } } ) { date_of_notes } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find the dates of assessment notes for students with first name \"Fanny\"."
  },
  {
    "query" : "query { assessment_notes ( where : { teacher : { last_name : { _eq : \"Schuster\" } } } ) { text_of_notes } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find the texts of assessment notes for teachers with last name \"Schuster\"."
  },
  {
    "query" : "query { behavior_incident ( where : { student : { last_name : { _eq : \"Fahey\" } } } ) { date_incident_start date_incident_end } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find the start and end dates of behavior incidents of students with last name \"Fahey\"."
  },
  {
    "query" : "query { detention ( where : { teacher : { last_name : { _eq : \"Schultz\" } } } ) { datetime_detention_start datetime_detention_end } }",
    "schemaId" : "behavior_monitoring",
    "question" : "Find the start and end dates of detentions of teachers with last name \"Schultz\"."
  },
  {
    "query" : "query { student_addresses ( limit : 1 , order_by : { monthly_rental : desc } ) { address_id address { zip_postcode } } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What are the id and zip code of the address with the highest monthly rental?"
  },
  {
    "query" : "query { students ( limit : 1 , order_by : { student_addresses_aggregate : { min : { monthly_rental : asc } } } ) { cell_mobile_number } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What is the cell phone number of the student whose address has the lowest monthly rental?"
  },
  {
    "query" : "query { student_addresses ( where : { address : { state_province_county : { _eq : \"Texas\" } } } ) { monthly_rental } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What are the monthly rentals of student addresses in Texas state?"
  },
  {
    "query" : "query { students ( where : { address : { state_province_county : { _eq : \"Wisconsin\" } } } ) { first_name last_name } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What are the first names and last names of students with address in Wisconsin state?"
  },
  {
    "query" : "query { addresses ( where : { teachers : { first_name : { _eq : \"Lyla\" } } } ) { zip_postcode } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What is the zip code of the address where the teacher with first name \"Lyla\" lives?"
  },
  {
    "query" : "query { teachers ( where : { address : { zip_postcode : { _eq : \"918\" } } } ) { email_address } }",
    "schemaId" : "behavior_monitoring",
    "question" : "What are the email addresses of teachers whose address has zip code \"918\"?"
  },
  {
    "query" : "query { weather ( where : { max_temperature_f : { _gt : 85 } } ) { date } }",
    "schemaId" : "bike_1",
    "question" : "Give me the dates when the max temperature was higher than 85."
  },
  {
    "query" : "query { weather ( where : { max_temperature_f : { _gt : 85 } } ) { date } }",
    "schemaId" : "bike_1",
    "question" : "What are the dates with a maximum temperature higher than 85?"
  },
  {
    "query" : "query { station ( where : { lat : { _lt : 37.5 } } ) { name } }",
    "schemaId" : "bike_1",
    "question" : "What are the names of stations that have latitude lower than 37.5?"
  },
  {
    "query" : "query { station ( where : { lat : { _lt : 37.5 } } ) { name } }",
    "schemaId" : "bike_1",
    "question" : "What are the names of all stations with a latitude smaller than 37.5?"
  },
  {
    "query" : "query { trip ( limit : 3 , order_by : { id : asc } ) { start_station_name end_station_name } }",
    "schemaId" : "bike_1",
    "question" : "Give me the start station and end station for the trips with the three oldest id."
  },
  {
    "query" : "query { trip ( limit : 3 , order_by : { id : asc } ) { start_station_name end_station_name } }",
    "schemaId" : "bike_1",
    "question" : "What is the station station and end station for the trips with the three smallest ids?"
  },
  {
    "query" : "query { station_aggregate ( where : { city : { _eq : \"San Jose\" } } ) { aggregate { avg { lat } avg { long } } } }",
    "schemaId" : "bike_1",
    "question" : "What is the average latitude and longitude of stations located in San Jose city?"
  },
  {
    "query" : "query { station_aggregate ( where : { city : { _eq : \"San Jose\" } } ) { aggregate { avg { lat } avg { long } } } }",
    "schemaId" : "bike_1",
    "question" : "What is the average latitude and longitude in San Jose?"
  },
  {
    "query" : "query { trip ( limit : 1 , order_by : { duration : asc } ) { id } }",
    "schemaId" : "bike_1",
    "question" : "What is the id of the trip that has the shortest duration?"
  },
  {
    "query" : "query { trip ( limit : 1 , order_by : { duration : asc } ) { id } }",
    "schemaId" : "bike_1",
    "question" : "What is the id of the shortest trip?"
  },
  {
    "query" : "query { trip_aggregate ( where : { bike_id : { _eq : 636 } } ) { aggregate { sum { duration } max { duration } } } }",
    "schemaId" : "bike_1",
    "question" : "What is the total and maximum duration of trips with bike id 636?"
  },
  {
    "query" : "query { trip_aggregate ( where : { bike_id : { _eq : 636 } } ) { aggregate { sum { duration } max { duration } } } }",
    "schemaId" : "bike_1",
    "question" : "What is the total and maximum duration for all trips with the bike id 636?"
  },
  {
    "query" : "query { trip_aggregate { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "From the trip record, find the number of unique bikes."
  },
  {
    "query" : "query { trip_aggregate { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "How many different bike ids are there?"
  },
  {
    "query" : "query { station_aggregate { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "What is the number of distinct cities the stations are located at?"
  },
  {
    "query" : "query { station_aggregate { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "How many different cities have these stations?"
  },
  {
    "query" : "query { station_aggregate ( where : { city : { _eq : \"Mountain View\" } } ) { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "How many stations does Mountain View city has?"
  },
  {
    "query" : "query { station_aggregate ( where : { city : { _eq : \"Mountain View\" } } ) { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "How many stations are in Mountain View?"
  },
  {
    "query" : "query { station ( where : { statuses : { bikes_available : { _eq : 7 } } } , distinct_on : name ) { name } }",
    "schemaId" : "bike_1",
    "question" : "Return the unique name for stations that have ever had 7 bikes available."
  },
  {
    "query" : "query { station ( where : { statuses : { bikes_available : { _eq : 7 } } } , distinct_on : name ) { name } }",
    "schemaId" : "bike_1",
    "question" : "What are the different names for each station that has ever had 7 bikes available?"
  },
  {
    "query" : "query { weather_aggregate ( where : { _and : { mean_visibility_miles : { _gt : 8 } , mean_humidity : { _gt : 50 } } } ) { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "How many days had both mean humidity above 50 and mean visibility above 8?"
  },
  {
    "query" : "query { weather_aggregate ( where : { _and : { mean_visibility_miles : { _gt : 8 } , mean_humidity : { _gt : 50 } } } ) { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "What is the number of days that had an average humity above 50 and an average visibility above 8?"
  },
  {
    "query" : "query { weather ( where : { max_temperature_f : { _gte : 80 } } ) { date zip_code } }",
    "schemaId" : "bike_1",
    "question" : "When and in what zip code did max temperature reach 80?"
  },
  {
    "query" : "query { weather ( where : { max_temperature_f : { _gte : 80 } } ) { date zip_code } }",
    "schemaId" : "bike_1",
    "question" : "What zip codes have a station with a max temperature greater than or equal to 80 and when did it reach that temperature?"
  },
  {
    "query" : "query { weather ( where : { _and : { events : { _neq : \"Fog\" } , zip_code : { _eq : 94107 } , _and : { events : { _neq : \"Rain\" } } } } ) { date } }",
    "schemaId" : "bike_1",
    "question" : "In zip code 94107, on which day neither Fog nor Rain was not observed?"
  },
  {
    "query" : "query { weather ( where : { _and : { events : { _neq : \"Fog\" } , zip_code : { _eq : 94107 } , _and : { events : { _neq : \"Rain\" } } } } ) { date } }",
    "schemaId" : "bike_1",
    "question" : "On which day has it neither been foggy nor rained in the zip code of 94107?"
  },
  {
    "query" : "query { station ( limit : 1 , order_by : { lat : asc } ) { name lat city } }",
    "schemaId" : "bike_1",
    "question" : "What are the name, latitude, and city of the station with the lowest latitude?"
  },
  {
    "query" : "query { station ( limit : 1 , order_by : { lat : asc } ) { name lat city } }",
    "schemaId" : "bike_1",
    "question" : "What is the name, latitude, and city of the station that is located the furthest South?"
  },
  {
    "query" : "query { weather ( limit : 3 , order_by : { max_gust_speed_mph : desc } ) { date mean_temperature_f mean_humidity } }",
    "schemaId" : "bike_1",
    "question" : "What are the date, mean temperature and mean humidity for the top 3 days with the largest max gust speeds?"
  },
  {
    "query" : "query { weather ( limit : 3 , order_by : { max_gust_speed_mph : desc } ) { date mean_temperature_f mean_humidity } }",
    "schemaId" : "bike_1",
    "question" : "What is the date, average temperature and mean humidity for the days with the 3 largest maximum gust speeds?"
  },
  {
    "query" : "query { weather ( limit : 5 , order_by : { cloud_cover : desc } ) { date cloud_cover } }",
    "schemaId" : "bike_1",
    "question" : "What are the dates that had the top 5 cloud cover rates? Also tell me the cloud cover rate."
  },
  {
    "query" : "query { weather ( limit : 5 , order_by : { cloud_cover : desc } ) { date cloud_cover } }",
    "schemaId" : "bike_1",
    "question" : "What are the dates that have the 5 highest cloud cover rates and what are the rates?"
  },
  {
    "query" : "query { trip ( limit : 3 , order_by : { duration : desc } ) { id duration } }",
    "schemaId" : "bike_1",
    "question" : "What are the ids and durations of the trips with the top 3 durations?"
  },
  {
    "query" : "query { trip ( limit : 3 , order_by : { duration : desc } ) { id duration } }",
    "schemaId" : "bike_1",
    "question" : "What are the ids of the trips that lasted the longest and how long did they last?"
  },
  {
    "query" : "query { trip ( where : { duration : { _lt : 100 } } , distinct_on : start_station_name ) { start_station_name } }",
    "schemaId" : "bike_1",
    "question" : "List all the distinct stations from which a trip of duration below 100 started."
  },
  {
    "query" : "query { trip ( where : { duration : { _lt : 100 } } , distinct_on : start_station_name ) { start_station_name } }",
    "schemaId" : "bike_1",
    "question" : "What are all the different start station names for a trip that lasted less than 100?"
  },
  {
    "query" : "query { weather ( where : { mean_sea_level_pressure_inches : { _gte : 30.3 , _lte : 31 } } ) { date } }",
    "schemaId" : "bike_1",
    "question" : "What are the dates in which the mean sea level pressure was between 30.3 and 31?"
  },
  {
    "query" : "query { weather ( where : { mean_sea_level_pressure_inches : { _gte : 30.3 , _lte : 31 } } ) { date } }",
    "schemaId" : "bike_1",
    "question" : "What are the dates that have an average sea level pressure between 30.3 and 31?"
  },
  {
    "query" : "query { trip_aggregate ( where : { stationByEndStationId : { city : { _eq : \"Palo Alto\" } } , stationByStartStationId : { city : { _eq : \"Mountain View\" } } } ) { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "How many trips started from Mountain View city and ended at Palo Alto city?"
  },
  {
    "query" : "query { trip_aggregate ( where : { stationByEndStationId : { city : { _eq : \"Palo Alto\" } } , stationByStartStationId : { city : { _eq : \"Mountain View\" } } } ) { aggregate { count } } }",
    "schemaId" : "bike_1",
    "question" : "How many trips stated from  a station in Mountain View and ended at one in Palo Alto?"
  },
  {
    "query" : "query { station_aggregate { aggregate { avg { lat } avg { long } } } }",
    "schemaId" : "bike_1",
    "question" : "What is the average latitude and longitude of the starting points of all trips?"
  },
  {
    "query" : "query { station_aggregate { aggregate { avg { lat } avg { long } } } }",
    "schemaId" : "bike_1",
    "question" : "What is the average latitude and longitude of all starting stations for the trips?"
  },
  {
    "query" : "query { body_builder_aggregate { aggregate { count } } }",
    "schemaId" : "body_builder",
    "question" : "How many body builders are there?"
  },
  {
    "query" : "query { body_builder ( order_by : { total : asc } ) { total } }",
    "schemaId" : "body_builder",
    "question" : "List the total scores of body builders in ascending order."
  },
  {
    "query" : "query { body_builder ( order_by : { snatch : asc } ) { snatch clean_jerk } }",
    "schemaId" : "body_builder",
    "question" : "List the snatch score and clean jerk score of body builders in ascending order of snatch score."
  },
  {
    "query" : "query { body_builder_aggregate { aggregate { avg { snatch } } } }",
    "schemaId" : "body_builder",
    "question" : "What is the average snatch score of body builders?"
  },
  {
    "query" : "query { body_builder ( limit : 1 , order_by : { total : desc } ) { clean_jerk } }",
    "schemaId" : "body_builder",
    "question" : "What are the clean and jerk score of the body builder with the highest total score?"
  },
  {
    "query" : "query { people ( order_by : { height : asc } ) { birth_date } }",
    "schemaId" : "body_builder",
    "question" : "What are the birthdays of people in ascending order of height?"
  },
  {
    "query" : "query { people { name } }",
    "schemaId" : "body_builder",
    "question" : "What are the names of body builders?"
  },
  {
    "query" : "query { people ( where : { body_builders : { total : { _gt : 300.0 } } } ) { name } }",
    "schemaId" : "body_builder",
    "question" : "What are the names of body builders whose total score is higher than 300?"
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { weight : desc } ) { name } }",
    "schemaId" : "body_builder",
    "question" : "What is the name of the body builder with the greatest body weight?"
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { body_builders_aggregate : { max : { total : desc_nulls_last } } } ) { birth_date birth_place } }",
    "schemaId" : "body_builder",
    "question" : "What are the birth date and birth place of the body builder with the highest total points?"
  },
  {
    "query" : "query { people ( where : { body_builders : { total : { _lt : 315.0 } } } ) { height } }",
    "schemaId" : "body_builder",
    "question" : "What are the heights of body builders with total score smaller than 315?"
  },
  {
    "query" : "query { body_builder_aggregate ( where : { person : { height : { _gt : 200.0 } } } ) { aggregate { avg { total } } } }",
    "schemaId" : "body_builder",
    "question" : "What is the average total score of body builders with height bigger than 200?"
  },
  {
    "query" : "query { people ( order_by : { body_builders_aggregate : { max : { total : desc_nulls_last } } } ) { name } }",
    "schemaId" : "body_builder",
    "question" : "What are the names of body builders in descending order of total scores?"
  },
  {
    "query" : "query { people ( order_by : { height : desc } ) { height weight } }",
    "schemaId" : "body_builder",
    "question" : "List the height and weight of people in descending order of height."
  },
  {
    "query" : "query { body_builder { body_builder_id clean_jerk people_id snatch total } }",
    "schemaId" : "body_builder",
    "question" : "Show all information about each body builder."
  },
  {
    "query" : "query { people_aggregate { aggregate { count } } }",
    "schemaId" : "body_builder",
    "question" : "How many distinct birth places are there?"
  },
  {
    "query" : "query { people ( where : { _or : [ { body_builders : { snatch : { _gt : 140.0 } } } , { height : { _gt : 200.0 } } ] } ) { weight } }",
    "schemaId" : "body_builder",
    "question" : "List the weight of the body builders who have snatch score higher than 140 or have the height greater than 200."
  },
  {
    "query" : "query { body_builder ( where : { person : { birth_date : { _like : \"%January%\" } } } ) { total } }",
    "schemaId" : "body_builder",
    "question" : "What are the total scores of the body builders whose birthday contains the string \"January\" ?"
  },
  {
    "query" : "query { body_builder_aggregate { aggregate { min { snatch } } } }",
    "schemaId" : "body_builder",
    "question" : "What is the minimum snatch score?"
  },
  {
    "query" : "query { book_aggregate { aggregate { count } } }",
    "schemaId" : "book_2",
    "question" : "How many books are there?"
  },
  {
    "query" : "query { book ( order_by : { writer : asc } ) { writer } }",
    "schemaId" : "book_2",
    "question" : "List the writers of the books in ascending alphabetical order."
  },
  {
    "query" : "query { book ( order_by : { issues : asc } ) { title } }",
    "schemaId" : "book_2",
    "question" : "List the titles of the books in ascending order of issues."
  },
  {
    "query" : "query { book ( where : { writer : { _neq : \"Elaine Lee\" } } ) { title } }",
    "schemaId" : "book_2",
    "question" : "What are the titles of the books whose writer is not \"Elaine Lee\"?"
  },
  {
    "query" : "query { book { title issues } }",
    "schemaId" : "book_2",
    "question" : "What are the title and issues of the books?"
  },
  {
    "query" : "query { publication ( order_by : { price : desc } ) { publication_date } }",
    "schemaId" : "book_2",
    "question" : "What are the dates of publications in descending order of price?"
  },
  {
    "query" : "query { publication ( where : { price : { _gt : 5000000.0 } } , distinct_on : publisher ) { publisher } }",
    "schemaId" : "book_2",
    "question" : "What are the distinct publishers of publications with price higher than 5000000?"
  },
  {
    "query" : "query { publication ( limit : 1 , order_by : { price : desc } ) { publisher } }",
    "schemaId" : "book_2",
    "question" : "List the publisher of the publication with the highest price."
  },
  {
    "query" : "query { publication ( limit : 3 , order_by : { price : asc } ) { publication_date } }",
    "schemaId" : "book_2",
    "question" : "List the publication dates of publications with 3 lowest prices."
  },
  {
    "query" : "query { book { title publications { publication_date } } }",
    "schemaId" : "book_2",
    "question" : "Show the title and publication dates of books."
  },
  {
    "query" : "query { book ( where : { publications : { price : { _gt : 4000000.0 } } } ) { writer } }",
    "schemaId" : "book_2",
    "question" : "Show writers who have published a book with price more than 4000000."
  },
  {
    "query" : "query { book ( order_by : { publications_aggregate : { max : { price : desc_nulls_last } } } ) { title } }",
    "schemaId" : "book_2",
    "question" : "Show the titles of books in descending order of publication price."
  },
  {
    "query" : "query { publication_aggregate { aggregate { count } } }",
    "schemaId" : "book_2",
    "question" : "What is the number of distinct publication dates?"
  },
  {
    "query" : "query { publication_aggregate { aggregate { count } } }",
    "schemaId" : "book_2",
    "question" : "How many distinct publication dates are there in our record?"
  },
  {
    "query" : "query { publication ( where : { _or : [ { publisher : { _eq : \"Person\" } } , { publisher : { _eq : \"Wiley\" } } ] } ) { price } }",
    "schemaId" : "book_2",
    "question" : "Show the prices of publications whose publisher is either \"Person\" or \"Wiley\""
  },
  {
    "query" : "query { browser_aggregate ( where : { market_share : { _gte : 5.0 } } ) { aggregate { count } } }",
    "schemaId" : "browser_web",
    "question" : "How many main stream browsers whose market share is at least 5 exist?"
  },
  {
    "query" : "query { browser ( order_by : { market_share : desc } ) { name } }",
    "schemaId" : "browser_web",
    "question" : "List the name of browsers in descending order by market share."
  },
  {
    "query" : "query { browser { id name market_share } }",
    "schemaId" : "browser_web",
    "question" : "List the ids, names and market shares of all browsers."
  },
  {
    "query" : "query { browser_aggregate { aggregate { max { market_share } min { market_share } avg { market_share } } } }",
    "schemaId" : "browser_web",
    "question" : "What is the maximum, minimum and average market share of the listed browsers?"
  },
  {
    "query" : "query { browser ( where : { name : { _eq : \"Safari\" } } ) { id market_share } }",
    "schemaId" : "browser_web",
    "question" : "What is the id and market share of the browser Safari?"
  },
  {
    "query" : "query { web_client_accelerator ( where : { connection : { _neq : \"Broadband\" } } ) { name operating_system } }",
    "schemaId" : "browser_web",
    "question" : "What are the name and os of web client accelerators that do not work with only a 'Broadband' type connection?"
  },
  {
    "query" : "query { web_client_accelerator_aggregate { aggregate { count } } }",
    "schemaId" : "browser_web",
    "question" : "How many different kinds of clients are supported by the web clients accelerators?"
  },
  {
    "query" : "query { web_client_accelerator ( where : { name : { _like : \"%Opera%\" } } ) { name } }",
    "schemaId" : "browser_web",
    "question" : "Which accelerator name contains substring \"Opera\"?"
  },
  {
    "query" : "query { web_client_accelerator ( order_by : { accelerator_compatible_browsers_aggregate : { max : { compatible_since_year : desc_nulls_last } } } ) { name accelerator_compatible_browsers { browser { name } } } }",
    "schemaId" : "browser_web",
    "question" : "give me names of all compatible browsers and accelerators in the descending order of compatible year"
  },
  {
    "query" : "query { candidate_aggregate { aggregate { count } } }",
    "schemaId" : "candidate_poll",
    "question" : "How many candidates are there?"
  },
  {
    "query" : "query { candidate_aggregate { aggregate { count } } }",
    "schemaId" : "candidate_poll",
    "question" : "Count the number of candidates."
  },
  {
    "query" : "query { candidate ( limit : 3 , order_by : { support_rate : desc } ) { support_rate } }",
    "schemaId" : "candidate_poll",
    "question" : "what are the top 3 highest support rates?"
  },
  {
    "query" : "query { candidate ( limit : 3 , order_by : { support_rate : desc } ) { support_rate } }",
    "schemaId" : "candidate_poll",
    "question" : "Return the top 3 greatest support rates."
  },
  {
    "query" : "query { candidate ( limit : 1 , order_by : { oppose_rate : asc } ) { candidate_id } }",
    "schemaId" : "candidate_poll",
    "question" : "Find the id of the candidate who got the lowest oppose rate."
  },
  {
    "query" : "query { candidate ( limit : 1 , order_by : { oppose_rate : asc } ) { candidate_id } }",
    "schemaId" : "candidate_poll",
    "question" : "What is the id of the candidate with the lowest oppose rate?"
  },
  {
    "query" : "query { candidate ( order_by : { unsure_rate : asc } ) { support_rate consider_rate oppose_rate } }",
    "schemaId" : "candidate_poll",
    "question" : "Please list support, consider, and oppose rates for each candidate in ascending order by unsure rate."
  },
  {
    "query" : "query { candidate ( order_by : { unsure_rate : asc } ) { support_rate consider_rate oppose_rate } }",
    "schemaId" : "candidate_poll",
    "question" : "What are the support, consider, and oppose rates of each candidate, ordered ascending by their unsure rate?"
  },
  {
    "query" : "query { candidate ( limit : 1 , order_by : { oppose_rate : desc } ) { poll_source } }",
    "schemaId" : "candidate_poll",
    "question" : "which poll source does the highest oppose rate come from?"
  },
  {
    "query" : "query { candidate ( limit : 1 , order_by : { oppose_rate : desc } ) { poll_source } }",
    "schemaId" : "candidate_poll",
    "question" : "Return the poll source corresponding to the candidate who has the oppose rate."
  },
  {
    "query" : "query { people ( order_by : { date_of_birth : asc } ) { name } }",
    "schemaId" : "candidate_poll",
    "question" : "List all people names in the order of their date of birth from old to young."
  },
  {
    "query" : "query { people ( order_by : { date_of_birth : asc } ) { name } }",
    "schemaId" : "candidate_poll",
    "question" : "What are the names of all people, ordered by their date of birth?"
  },
  {
    "query" : "query { people_aggregate ( where : { sex : { _eq : \"M\" } } ) { aggregate { avg { height } avg { weight } } } }",
    "schemaId" : "candidate_poll",
    "question" : "Find the average height and weight for all males (sex is M)."
  },
  {
    "query" : "query { people_aggregate ( where : { sex : { _eq : \"M\" } } ) { aggregate { avg { height } avg { weight } } } }",
    "schemaId" : "candidate_poll",
    "question" : "What are the average height and weight across males (sex is M)?"
  },
  {
    "query" : "query { people ( where : { _or : [ { height : { _gt : 200.0 } } , { height : { _lt : 190.0 } } ] } ) { name } }",
    "schemaId" : "candidate_poll",
    "question" : "find the names of people who are taller than 200 or lower than 190."
  },
  {
    "query" : "query { people ( where : { _or : [ { height : { _gt : 200.0 } } , { height : { _lt : 190.0 } } ] } ) { name } }",
    "schemaId" : "candidate_poll",
    "question" : "What are the names of people who have a height greater than 200 or less than 190?"
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { candidates_aggregate : { max : { support_rate : desc_nulls_last } } } ) { name sex } }",
    "schemaId" : "candidate_poll",
    "question" : "Find the name and gender of the candidate who got the highest support rate."
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { candidates_aggregate : { max : { support_rate : desc_nulls_last } } } ) { name sex } }",
    "schemaId" : "candidate_poll",
    "question" : "What is the name and sex of the candidate with the highest support rate?"
  },
  {
    "query" : "query { candidate_aggregate { aggregate { max { support_rate } min { consider_rate } min { oppose_rate } } } }",
    "schemaId" : "candidate_poll",
    "question" : "find the highest support percentage, lowest consider rate and oppose rate of all candidates."
  },
  {
    "query" : "query { candidate_aggregate { aggregate { max { support_rate } min { consider_rate } min { oppose_rate } } } }",
    "schemaId" : "candidate_poll",
    "question" : "Return the maximum support rate, minimum consider rate, and minimum oppose rate across all candidates?"
  },
  {
    "query" : "query { people ( order_by : { name : asc } , where : { sex : { _eq : \"F\" } } ) { name } }",
    "schemaId" : "candidate_poll",
    "question" : "list all female (sex is F) candidate names in the alphabetical order."
  },
  {
    "query" : "query { people ( order_by : { name : asc } , where : { sex : { _eq : \"F\" } } ) { name } }",
    "schemaId" : "candidate_poll",
    "question" : "What are the names of all female candidates in alphabetical order (sex is F)?"
  },
  {
    "query" : "query { people { date_of_birth height name people_id sex weight } }",
    "schemaId" : "candidate_poll",
    "question" : "List all info about all people."
  },
  {
    "query" : "query { people { date_of_birth height name people_id sex weight } }",
    "schemaId" : "candidate_poll",
    "question" : "What is all the information about all people?"
  },
  {
    "query" : "query { album_aggregate { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "How many albums are there?"
  },
  {
    "query" : "query { album_aggregate { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the number of albums."
  },
  {
    "query" : "query { genre { name } }",
    "schemaId" : "chinook_1",
    "question" : "List the names of all music genres."
  },
  {
    "query" : "query { genre { name } }",
    "schemaId" : "chinook_1",
    "question" : "What are the names of different music genres?"
  },
  {
    "query" : "query { customer ( where : { state : { _eq : \"NY\" } } ) { address city company country email fax firstname lastname phone postalcode state supportrepid } }",
    "schemaId" : "chinook_1",
    "question" : "Find all the customer information in state NY."
  },
  {
    "query" : "query { customer ( where : { state : { _eq : \"NY\" } } ) { address city company country email fax firstname lastname phone postalcode state supportrepid } }",
    "schemaId" : "chinook_1",
    "question" : "What is all the customer information for customers in NY state?"
  },
  {
    "query" : "query { employee ( where : { city : { _eq : \"Calgary\" } } ) { firstname lastname } }",
    "schemaId" : "chinook_1",
    "question" : "What are the first names and last names of the employees who live in Calgary city."
  },
  {
    "query" : "query { employee ( where : { city : { _eq : \"Calgary\" } } ) { firstname lastname } }",
    "schemaId" : "chinook_1",
    "question" : "Find the full names of employees living in the city of Calgary."
  },
  {
    "query" : "query { invoice ( distinct_on : billingcountry ) { billingcountry } }",
    "schemaId" : "chinook_1",
    "question" : "What are the distinct billing countries of the invoices?"
  },
  {
    "query" : "query { invoice ( distinct_on : billingcountry ) { billingcountry } }",
    "schemaId" : "chinook_1",
    "question" : "Find the different billing countries for all invoices."
  },
  {
    "query" : "query { artist ( where : { name : { _like : \"%a%\" } } ) { name } }",
    "schemaId" : "chinook_1",
    "question" : "Find the names of all artists that have \"a\" in their names."
  },
  {
    "query" : "query { artist ( where : { name : { _like : \"%a%\" } } ) { name } }",
    "schemaId" : "chinook_1",
    "question" : "What are the names of artist who have the letter 'a' in their names?"
  },
  {
    "query" : "query { album ( where : { artist : { name : { _eq : \"AC\/DC\" } } } ) { title } }",
    "schemaId" : "chinook_1",
    "question" : "Find the title of all the albums of the artist \"AC\/DC\"."
  },
  {
    "query" : "query { album ( where : { artist : { name : { _eq : \"AC\/DC\" } } } ) { title } }",
    "schemaId" : "chinook_1",
    "question" : "What are the titles of albums by the artist \"AC\/DC\"?"
  },
  {
    "query" : "query { album_aggregate ( where : { artist : { name : { _eq : \"Metallica\" } } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "Hom many albums does the artist \"Metallica\" have?"
  },
  {
    "query" : "query { album_aggregate ( where : { artist : { name : { _eq : \"Metallica\" } } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the number of albums by the artist \"Metallica\"."
  },
  {
    "query" : "query { artist ( where : { albums : { title : { _eq : \"Balls to the Wall\" } } } ) { name } }",
    "schemaId" : "chinook_1",
    "question" : "Which artist does the album \"Balls to the Wall\" belong to?"
  },
  {
    "query" : "query { artist ( where : { albums : { title : { _eq : \"Balls to the Wall\" } } } ) { name } }",
    "schemaId" : "chinook_1",
    "question" : "Find the name of the artist who made the album \"Balls to the Wall\"."
  },
  {
    "query" : "query { track ( where : { name : { _like : \"%you%\" } } ) { name } }",
    "schemaId" : "chinook_1",
    "question" : "Find the names of all the tracks that contain the word \"you\"."
  },
  {
    "query" : "query { track ( where : { name : { _like : \"%you%\" } } ) { name } }",
    "schemaId" : "chinook_1",
    "question" : "What are the names of tracks that contain the the word you in them?"
  },
  {
    "query" : "query { track_aggregate { aggregate { avg { unitprice } } } }",
    "schemaId" : "chinook_1",
    "question" : "What is the average unit price of all the tracks?"
  },
  {
    "query" : "query { track_aggregate { aggregate { avg { unitprice } } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the average unit price for a track."
  },
  {
    "query" : "query { track_aggregate { aggregate { max { milliseconds } min { milliseconds } } } }",
    "schemaId" : "chinook_1",
    "question" : "What are the durations of the longest and the shortest tracks in milliseconds?"
  },
  {
    "query" : "query { track_aggregate { aggregate { max { milliseconds } min { milliseconds } } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the maximum and minimum durations of tracks in milliseconds."
  },
  {
    "query" : "query { genre_aggregate ( where : { name : { _eq : \"Rock\" } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "How many tracks belong to rock genre?"
  },
  {
    "query" : "query { genre_aggregate ( where : { name : { _eq : \"Rock\" } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "Count the number of tracks that are part of the rock genre."
  },
  {
    "query" : "query { track_aggregate ( where : { genre : { name : { _eq : \"Jazz\" } } } ) { aggregate { avg { unitprice } } } }",
    "schemaId" : "chinook_1",
    "question" : "What is the average unit price of tracks that belong to Jazz genre?"
  },
  {
    "query" : "query { track_aggregate ( where : { genre : { name : { _eq : \"Jazz\" } } } ) { aggregate { avg { unitprice } } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the average unit price of jazz tracks."
  },
  {
    "query" : "query { customer ( where : { email : { _eq : \"luisg@embraer.com.br\" } } ) { firstname lastname } }",
    "schemaId" : "chinook_1",
    "question" : "What is the first name and last name of the customer that has email \"luisg@embraer.com.br\"?"
  },
  {
    "query" : "query { customer ( where : { email : { _eq : \"luisg@embraer.com.br\" } } ) { firstname lastname } }",
    "schemaId" : "chinook_1",
    "question" : "Find the full name of the customer with the email \"luisg@embraer.com.br\"."
  },
  {
    "query" : "query { customer_aggregate ( where : { email : { _like : \"%gmail.com%\" } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "How many customers have email that contains \"gmail.com\"?"
  },
  {
    "query" : "query { customer_aggregate ( where : { email : { _like : \"%gmail.com%\" } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "Count the number of customers that have an email containing \"gmail.com\"."
  },
  {
    "query" : "query { employee ( where : { customers : { firstname : { _eq : \"Leonie\" } } } ) { firstname lastname } }",
    "schemaId" : "chinook_1",
    "question" : "What is the first name and last name employee helps the customer with first name Leonie?"
  },
  {
    "query" : "query { employee ( where : { customers : { firstname : { _eq : \"Leonie\" } } } ) { firstname lastname } }",
    "schemaId" : "chinook_1",
    "question" : "Find the full names of employees who help customers with the first name Leonie."
  },
  {
    "query" : "query { employee ( where : { customers : { postalcode : { _eq : \"70174\" } } } ) { city } }",
    "schemaId" : "chinook_1",
    "question" : "What city does the employee who helps the customer with postal code 70174 live in?"
  },
  {
    "query" : "query { employee ( where : { customers : { postalcode : { _eq : \"70174\" } } } ) { city } }",
    "schemaId" : "chinook_1",
    "question" : "Find the cities corresponding to employees who help customers with the postal code 70174."
  },
  {
    "query" : "query { employee_aggregate { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "How many distinct cities does the employees live in?"
  },
  {
    "query" : "query { employee_aggregate { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the number of different cities that employees live in."
  },
  {
    "query" : "query { invoice ( where : { _and : { customer : { firstname : { _eq : \"Astrid\" } , lastname : { _eq : \"Gruber\" } } } } ) { invoicedate } }",
    "schemaId" : "chinook_1",
    "question" : "Find all invoice dates corresponding to customers with first name Astrid and last name Gruber."
  },
  {
    "query" : "query { invoice ( where : { _and : { customer : { firstname : { _eq : \"Astrid\" } , lastname : { _eq : \"Gruber\" } } } } ) { invoicedate } }",
    "schemaId" : "chinook_1",
    "question" : "What are the invoice dates for customers with the first name Astrid and the last name Gruber?"
  },
  {
    "query" : "query { customer ( where : { country : { _eq : \"Brazil\" } } , distinct_on : firstname ) { firstname } }",
    "schemaId" : "chinook_1",
    "question" : "Find the first names of all customers that live in Brazil and have an invoice."
  },
  {
    "query" : "query { customer ( where : { country : { _eq : \"Brazil\" } } , distinct_on : firstname ) { firstname } }",
    "schemaId" : "chinook_1",
    "question" : "What are the different first names for customers from Brazil who have also had an invoice?"
  },
  {
    "query" : "query { customer ( where : { country : { _eq : \"Germany\" } } , distinct_on : address ) { address } }",
    "schemaId" : "chinook_1",
    "question" : "Find the address of all customers that live in Germany and have invoice."
  },
  {
    "query" : "query { customer ( where : { country : { _eq : \"Germany\" } } , distinct_on : address ) { address } }",
    "schemaId" : "chinook_1",
    "question" : "What are the addresses of customers living in Germany who have had an invoice?"
  },
  {
    "query" : "query { employee { phone } }",
    "schemaId" : "chinook_1",
    "question" : "List the phone numbers of all employees."
  },
  {
    "query" : "query { employee { phone } }",
    "schemaId" : "chinook_1",
    "question" : "What are the phone numbers for each employee?"
  },
  {
    "query" : "query { mediatype_aggregate ( where : { name : { _eq : \"AAC audio file\" } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "How many tracks are in the AAC audio file media type?"
  },
  {
    "query" : "query { mediatype_aggregate ( where : { name : { _eq : \"AAC audio file\" } } ) { aggregate { count } } }",
    "schemaId" : "chinook_1",
    "question" : "Count the number of tracks that are of the media type \"AAC audio file\"."
  },
  {
    "query" : "query { track_aggregate ( where : { _or : [ { genre : { name : { _eq : \"Latin\" } } } , { genre : { name : { _eq : \"Pop\" } } } ] } ) { aggregate { avg { milliseconds } } } }",
    "schemaId" : "chinook_1",
    "question" : "What is the average duration in milliseconds of tracks that belong to Latin or Pop genre?"
  },
  {
    "query" : "query { track_aggregate ( where : { _or : [ { genre : { name : { _eq : \"Latin\" } } } , { genre : { name : { _eq : \"Pop\" } } } ] } ) { aggregate { avg { milliseconds } } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the average millisecond length of Latin and Pop tracks."
  },
  {
    "query" : "query { album ( order_by : { title : asc } ) { title } }",
    "schemaId" : "chinook_1",
    "question" : "Please list all album titles in alphabetical order."
  },
  {
    "query" : "query { album ( order_by : { title : asc } ) { title } }",
    "schemaId" : "chinook_1",
    "question" : "What are all the album titles, in alphabetical order?"
  },
  {
    "query" : "query { track_aggregate ( where : { genre : { name : { _eq : \"Rock\" } } } ) { aggregate { avg { unitprice } } } }",
    "schemaId" : "chinook_1",
    "question" : "What is the average unit price of rock tracks?"
  },
  {
    "query" : "query { track_aggregate ( where : { genre : { name : { _eq : \"Rock\" } } } ) { aggregate { avg { unitprice } } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the average unit price of tracks from the Rock genre."
  },
  {
    "query" : "query { track_aggregate ( where : { genre : { name : { _eq : \"Pop\" } } } ) { aggregate { max { milliseconds } min { milliseconds } } } }",
    "schemaId" : "chinook_1",
    "question" : "What are the duration of the longest and shortest pop tracks in milliseconds?"
  },
  {
    "query" : "query { track_aggregate ( where : { genre : { name : { _eq : \"Pop\" } } } ) { aggregate { max { milliseconds } min { milliseconds } } } }",
    "schemaId" : "chinook_1",
    "question" : "Find the maximum and minimum millisecond lengths of pop tracks."
  },
  {
    "query" : "query { employee ( where : { city : { _eq : \"Edmonton\" } } ) { birthdate } }",
    "schemaId" : "chinook_1",
    "question" : "What are the birth dates of employees living in Edmonton?"
  },
  {
    "query" : "query { employee ( where : { city : { _eq : \"Edmonton\" } } ) { birthdate } }",
    "schemaId" : "chinook_1",
    "question" : "Find the birth dates corresponding to employees who live in the city of Edmonton."
  },
  {
    "query" : "query { track ( distinct_on : unitprice ) { unitprice } }",
    "schemaId" : "chinook_1",
    "question" : "What are the distinct unit prices of all tracks?"
  },
  {
    "query" : "query { track ( distinct_on : unitprice ) { unitprice } }",
    "schemaId" : "chinook_1",
    "question" : "Find the distinct unit prices for tracks."
  },
  {
    "query" : "query { cinema_aggregate { aggregate { count } } }",
    "schemaId" : "cinema",
    "question" : "How many cinema do we have?"
  },
  {
    "query" : "query { cinema_aggregate { aggregate { count } } }",
    "schemaId" : "cinema",
    "question" : "Count the number of cinemas."
  },
  {
    "query" : "query { cinema { name openning_year capacity } }",
    "schemaId" : "cinema",
    "question" : "Show name, opening year, and capacity for each cinema."
  },
  {
    "query" : "query { cinema ( distinct_on : location ) { location } }",
    "schemaId" : "cinema",
    "question" : "What are all the locations with a cinema?"
  },
  {
    "query" : "query { cinema ( distinct_on : location ) { location } }",
    "schemaId" : "cinema",
    "question" : "Find the distinct locations that has a cinema."
  },
  {
    "query" : "query { cinema ( order_by : { openning_year : desc } ) { name openning_year } }",
    "schemaId" : "cinema",
    "question" : "Show all the cinema names and opening years in descending order of opening year."
  },
  {
    "query" : "query { cinema ( limit : 1 , order_by : { capacity : desc } ) { name location } }",
    "schemaId" : "cinema",
    "question" : "What are the name and location of the cinema with the largest capacity?"
  },
  {
    "query" : "query { cinema_aggregate ( where : { openning_year : { _gte : 2011 } } ) { aggregate { avg { capacity } min { capacity } max { capacity } } } }",
    "schemaId" : "cinema",
    "question" : "Show the average, minimum, and maximum capacity for all the cinemas opened in year 2011 or later."
  },
  {
    "query" : "query { film { title directed_by } }",
    "schemaId" : "cinema",
    "question" : "Show the title and director for all films."
  },
  {
    "query" : "query { film { title directed_by } }",
    "schemaId" : "cinema",
    "question" : "What are the title and director of each film?"
  },
  {
    "query" : "query { film ( distinct_on : directed_by ) { directed_by } }",
    "schemaId" : "cinema",
    "question" : "Show all directors."
  },
  {
    "query" : "query { film ( distinct_on : directed_by ) { directed_by } }",
    "schemaId" : "cinema",
    "question" : "Who are all the directors?"
  },
  {
    "query" : "query { cinema { name schedules { film { title } } schedules { date price } } }",
    "schemaId" : "cinema",
    "question" : "Show cinema name, film title, date, and price for each record in schedule."
  },
  {
    "query" : "query { film_aggregate ( where : { title : { _like : \"%Dummy%\" } } ) { aggregate { count } } }",
    "schemaId" : "cinema",
    "question" : "How many films have the word 'Dummy' in their titles?"
  },
  {
    "query" : "query { film_aggregate ( where : { title : { _like : \"%Dummy%\" } } ) { aggregate { count } } }",
    "schemaId" : "cinema",
    "question" : "Count the number of films whose title contains the word 'Dummy'."
  },
  {
    "query" : "query { hosting_city ( limit : 1 , order_by : { year : desc } ) { host_city } }",
    "schemaId" : "city_record",
    "question" : "What is id of the city that hosted events in the most recent year?"
  },
  {
    "query" : "query { hosting_city ( limit : 1 , order_by : { year : desc } ) { host_city } }",
    "schemaId" : "city_record",
    "question" : "Find the city that hosted some events in the most recent year. What is the id of this city?"
  },
  {
    "query" : "query { match ( where : { competition : { _eq : \"1994 FIFA World Cup qualification\" } } ) { match_id } }",
    "schemaId" : "city_record",
    "question" : "Find the match ids of the cities that hosted competition \"1994 FIFA World Cup qualification\"?"
  },
  {
    "query" : "query { match ( where : { competition : { _eq : \"1994 FIFA World Cup qualification\" } } ) { match_id } }",
    "schemaId" : "city_record",
    "question" : "What is the match id of the competition called \"1994 FIFA World Cup qualification\"?"
  },
  {
    "query" : "query { city ( where : { hosting_cities : { year : { _gt : 2010 } } } ) { city } }",
    "schemaId" : "city_record",
    "question" : "Find the cities which were once a host city after 2010?"
  },
  {
    "query" : "query { city ( where : { hosting_cities : { year : { _gt : 2010 } } } ) { city } }",
    "schemaId" : "city_record",
    "question" : "Which cities served as a host city after 2010?"
  },
  {
    "query" : "query { temperature ( where : { city : { city : { _eq : \"Shanghai\" } } } ) { jan } }",
    "schemaId" : "city_record",
    "question" : "Give me the temperature of Shanghai in January."
  },
  {
    "query" : "query { temperature ( where : { city : { city : { _eq : \"Shanghai\" } } } ) { jan } }",
    "schemaId" : "city_record",
    "question" : "What is the temperature of \"Shanghai\" city in January?"
  },
  {
    "query" : "query { hosting_city ( where : { city : { city : { _eq : \"Taizhou ( Zhejiang )\" } } } ) { year } }",
    "schemaId" : "city_record",
    "question" : "What is the host year of city \"Taizhou ( Zhejiang )\"?"
  },
  {
    "query" : "query { hosting_city ( where : { city : { city : { _eq : \"Taizhou ( Zhejiang )\" } } } ) { year } }",
    "schemaId" : "city_record",
    "question" : "IN which year did city \"Taizhou ( Zhejiang )\" serve as a host city?"
  },
  {
    "query" : "query { city ( limit : 3 , order_by : { regional_population : desc } ) { city } }",
    "schemaId" : "city_record",
    "question" : "Which three cities have the largest regional population?"
  },
  {
    "query" : "query { city ( limit : 3 , order_by : { regional_population : desc } ) { city } }",
    "schemaId" : "city_record",
    "question" : "What are the three largest cities in terms of regional population?"
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { gdp : asc } ) { city gdp } }",
    "schemaId" : "city_record",
    "question" : "Which city has the lowest GDP? Please list the city name and its GDP."
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { gdp : asc } ) { city gdp } }",
    "schemaId" : "city_record",
    "question" : "What is the city with the smallest GDP? Return the city and its GDP."
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { temperatures_aggregate : { max : { feb : desc_nulls_last } } } ) { city } }",
    "schemaId" : "city_record",
    "question" : "Which city has the highest temperature in February?"
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { temperatures_aggregate : { max : { feb : desc_nulls_last } } } ) { city } }",
    "schemaId" : "city_record",
    "question" : "In February, which city marks the highest temperature?"
  },
  {
    "query" : "query { city ( where : { regional_population : { _gt : 10000000 } } ) { city } }",
    "schemaId" : "city_record",
    "question" : "Please give me a list of cities whose regional population is over 10000000."
  },
  {
    "query" : "query { city ( where : { regional_population : { _gt : 10000000 } } ) { city } }",
    "schemaId" : "city_record",
    "question" : "Which cities have regional population above 10000000?"
  },
  {
    "query" : "query { match ( order_by : { date : desc } ) { venue } }",
    "schemaId" : "city_record",
    "question" : "List venues of all matches in the order of their dates starting from the most recent one."
  },
  {
    "query" : "query { match ( order_by : { date : desc } ) { venue } }",
    "schemaId" : "city_record",
    "question" : "What are the venues of all the matches? Sort them in the descending order of match date."
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { regional_population : desc } ) { gdp } }",
    "schemaId" : "city_record",
    "question" : "what is the GDP of the city with the largest population."
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { regional_population : desc } ) { gdp } }",
    "schemaId" : "city_record",
    "question" : "Find the GDP of the city with the largest regional population."
  },
  {
    "query" : "query { climber_aggregate { aggregate { count } } }",
    "schemaId" : "climbing",
    "question" : "How many climbers are there?"
  },
  {
    "query" : "query { climber_aggregate { aggregate { count } } }",
    "schemaId" : "climbing",
    "question" : "Count the number of climbers."
  },
  {
    "query" : "query { climber ( order_by : { points : desc } ) { name } }",
    "schemaId" : "climbing",
    "question" : "List the names of climbers in descending order of points."
  },
  {
    "query" : "query { climber ( order_by : { points : desc } ) { name } }",
    "schemaId" : "climbing",
    "question" : "What are the names of the climbers, ordered by points descending?"
  },
  {
    "query" : "query { climber ( where : { country : { _neq : \"Switzerland\" } } ) { name } }",
    "schemaId" : "climbing",
    "question" : "List the names of climbers whose country is not Switzerland."
  },
  {
    "query" : "query { climber ( where : { country : { _neq : \"Switzerland\" } } ) { name } }",
    "schemaId" : "climbing",
    "question" : "What are the names of climbers who are not from the country of Switzerland?"
  },
  {
    "query" : "query { climber_aggregate ( where : { country : { _eq : \"United Kingdom\" } } ) { aggregate { max { points } } } }",
    "schemaId" : "climbing",
    "question" : "What is the maximum point for climbers whose country is United Kingdom?"
  },
  {
    "query" : "query { climber_aggregate ( where : { country : { _eq : \"United Kingdom\" } } ) { aggregate { max { points } } } }",
    "schemaId" : "climbing",
    "question" : "Return the maximum number of points for climbers from the United Kingdom."
  },
  {
    "query" : "query { climber_aggregate { aggregate { count } } }",
    "schemaId" : "climbing",
    "question" : "How many distinct countries are the climbers from?"
  },
  {
    "query" : "query { climber_aggregate { aggregate { count } } }",
    "schemaId" : "climbing",
    "question" : "Count the number of different countries that climbers are from."
  },
  {
    "query" : "query { mountain ( order_by : { name : asc } ) { name } }",
    "schemaId" : "climbing",
    "question" : "What are the names of mountains in ascending alphabetical order?"
  },
  {
    "query" : "query { mountain ( order_by : { name : asc } ) { name } }",
    "schemaId" : "climbing",
    "question" : "Give the names of mountains in alphabetical order."
  },
  {
    "query" : "query { mountain ( where : { height : { _gt : 5000.0 } } ) { country } }",
    "schemaId" : "climbing",
    "question" : "What are the countries of mountains with height bigger than 5000?"
  },
  {
    "query" : "query { mountain ( where : { height : { _gt : 5000.0 } } ) { country } }",
    "schemaId" : "climbing",
    "question" : "Return the countries of the mountains that have a height larger than 5000."
  },
  {
    "query" : "query { mountain ( limit : 1 , order_by : { height : desc } ) { name } }",
    "schemaId" : "climbing",
    "question" : "What is the name of the highest mountain?"
  },
  {
    "query" : "query { mountain ( limit : 1 , order_by : { height : desc } ) { name } }",
    "schemaId" : "climbing",
    "question" : "Return the name of the mountain with the greatest height."
  },
  {
    "query" : "query { mountain ( limit : 3 , order_by : { prominence : desc } , distinct_on : range ) { range } }",
    "schemaId" : "climbing",
    "question" : "List the distinct ranges of the mountains with the top 3 prominence."
  },
  {
    "query" : "query { mountain ( limit : 3 , order_by : { prominence : desc } , distinct_on : range ) { range } }",
    "schemaId" : "climbing",
    "question" : "What are the different ranges of the 3 mountains with the highest prominence?"
  },
  {
    "query" : "query { climber { name mountain { name } } }",
    "schemaId" : "climbing",
    "question" : "Show names of climbers and the names of mountains they climb."
  },
  {
    "query" : "query { climber { name mountain { name } } }",
    "schemaId" : "climbing",
    "question" : "What are the names of climbers and the corresponding names of mountains that they climb?"
  },
  {
    "query" : "query { climber { name mountain { height } } }",
    "schemaId" : "climbing",
    "question" : "Show the names of climbers and the heights of mountains they climb."
  },
  {
    "query" : "query { climber { name mountain { height } } }",
    "schemaId" : "climbing",
    "question" : "What are the names of climbers and the corresponding heights of the mountains that they climb?"
  },
  {
    "query" : "query { mountain ( limit : 1 , order_by : { climbers_aggregate : { max : { points : desc_nulls_last } } } ) { height } }",
    "schemaId" : "climbing",
    "question" : "Show the height of the mountain climbed by the climber with the maximum points."
  },
  {
    "query" : "query { mountain ( limit : 1 , order_by : { climbers_aggregate : { max : { points : desc_nulls_last } } } ) { height } }",
    "schemaId" : "climbing",
    "question" : "What is the height of the mountain climbined by the climbing who had the most points?"
  },
  {
    "query" : "query { mountain ( where : { climbers : { country : { _eq : \"West Germany\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "climbing",
    "question" : "Show the distinct names of mountains climbed by climbers from country \"West Germany\"."
  },
  {
    "query" : "query { mountain ( where : { climbers : { country : { _eq : \"West Germany\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "climbing",
    "question" : "What are the different names of mountains ascended by climbers from the country of West Germany?"
  },
  {
    "query" : "query { climber ( where : { mountain : { country : { _eq : \"Uganda\" } } } ) { time } }",
    "schemaId" : "climbing",
    "question" : "Show the times used by climbers to climb mountains in Country Uganda."
  },
  {
    "query" : "query { climber ( where : { mountain : { country : { _eq : \"Uganda\" } } } ) { time } }",
    "schemaId" : "climbing",
    "question" : "What are the times used by climbers who climbed mountains in the country of Uganda?"
  },
  {
    "query" : "query { mountain ( where : { _or : [ { height : { _gt : 5000.0 } } , { prominence : { _gt : 1000.0 } } ] } ) { name } }",
    "schemaId" : "climbing",
    "question" : "Show the names of mountains with height more than 5000 or prominence more than 1000."
  },
  {
    "query" : "query { mountain ( where : { _or : [ { height : { _gt : 5000.0 } } , { prominence : { _gt : 1000.0 } } ] } ) { name } }",
    "schemaId" : "climbing",
    "question" : "What are the names of mountains that have a height of over 5000 or a prominence of over 1000?"
  },
  {
    "query" : "query { club_aggregate { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "How many clubs are there?"
  },
  {
    "query" : "query { club_aggregate { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "Count the total number of clubs."
  },
  {
    "query" : "query { club { clubname } }",
    "schemaId" : "club_1",
    "question" : "What are the names of all clubs?"
  },
  {
    "query" : "query { club { clubname } }",
    "schemaId" : "club_1",
    "question" : "Give me the name of each club."
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "How many students are there?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "Count the total number of students."
  },
  {
    "query" : "query { student ( distinct_on : fname ) { fname } }",
    "schemaId" : "club_1",
    "question" : "What are the first names of all the students?"
  },
  {
    "query" : "query { student ( distinct_on : fname ) { fname } }",
    "schemaId" : "club_1",
    "question" : "Find each student's first name."
  },
  {
    "query" : "query { student ( where : { member_of_clubs : { club : { clubname : { _eq : \"Bootup Baltimore\" } } } } ) { lname } }",
    "schemaId" : "club_1",
    "question" : "Find the last names of the members of the club \"Bootup Baltimore\"."
  },
  {
    "query" : "query { student ( where : { member_of_clubs : { club : { clubname : { _eq : \"Bootup Baltimore\" } } } } ) { lname } }",
    "schemaId" : "club_1",
    "question" : "Who are the members of the club named \"Bootup Baltimore\"? Give me their last names."
  },
  {
    "query" : "query { student ( where : { member_of_clubs : { club : { clubname : { _eq : \"Hopkins Student Enterprises\" } } } } ) { lname } }",
    "schemaId" : "club_1",
    "question" : "Who are the members of the club named \"Hopkins Student Enterprises\"? Show the last name."
  },
  {
    "query" : "query { student ( where : { member_of_clubs : { club : { clubname : { _eq : \"Hopkins Student Enterprises\" } } } } ) { lname } }",
    "schemaId" : "club_1",
    "question" : "Return the last name for the members of the club named \"Hopkins Student Enterprises\"."
  },
  {
    "query" : "query { club_aggregate ( where : { clubname : { _eq : \"Tennis Club\" } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "How many members does the club \"Tennis Club\" has?"
  },
  {
    "query" : "query { club_aggregate ( where : { clubname : { _eq : \"Tennis Club\" } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "Count the members of the club \"Tennis Club\"."
  },
  {
    "query" : "query { club_aggregate ( where : { clubname : { _eq : \"Pen and Paper Gaming\" } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "Find the number of members of club \"Pen and Paper Gaming\"."
  },
  {
    "query" : "query { club_aggregate ( where : { clubname : { _eq : \"Pen and Paper Gaming\" } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "How many people have membership in the club \"Pen and Paper Gaming\"?"
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Tennis Club\" } } ) { clubdesc } }",
    "schemaId" : "club_1",
    "question" : "What is the description of the club named \"Tennis Club\"?"
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Tennis Club\" } } ) { clubdesc } }",
    "schemaId" : "club_1",
    "question" : "Find the description of the club called \"Tennis Club\"."
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Pen and Paper Gaming\" } } ) { clubdesc } }",
    "schemaId" : "club_1",
    "question" : "Find the description of the club \"Pen and Paper Gaming\"."
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Pen and Paper Gaming\" } } ) { clubdesc } }",
    "schemaId" : "club_1",
    "question" : "What is the description of the club \"Pen and Paper Gaming\"?"
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Tennis Club\" } } ) { clublocation } }",
    "schemaId" : "club_1",
    "question" : "What is the location of the club named \"Tennis Club\"?"
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Tennis Club\" } } ) { clublocation } }",
    "schemaId" : "club_1",
    "question" : "Where us the club named \"Tennis Club\" located?"
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Pen and Paper Gaming\" } } ) { clublocation } }",
    "schemaId" : "club_1",
    "question" : "Find the location of the club \"Pen and Paper Gaming\"."
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Pen and Paper Gaming\" } } ) { clublocation } }",
    "schemaId" : "club_1",
    "question" : "Where is the club \"Pen and Paper Gaming\" located?"
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Hopkins Student Enterprises\" } } ) { clublocation } }",
    "schemaId" : "club_1",
    "question" : "Where is the club \"Hopkins Student Enterprises\" located?"
  },
  {
    "query" : "query { club ( where : { clubname : { _eq : \"Hopkins Student Enterprises\" } } ) { clublocation } }",
    "schemaId" : "club_1",
    "question" : "Tell me the location of the club \"Hopkins Student Enterprises\"."
  },
  {
    "query" : "query { club ( where : { clublocation : { _eq : \"AKW\" } } ) { clubname } }",
    "schemaId" : "club_1",
    "question" : "Find the name of all the clubs at \"AKW\"."
  },
  {
    "query" : "query { club ( where : { clublocation : { _eq : \"AKW\" } } ) { clubname } }",
    "schemaId" : "club_1",
    "question" : "Which clubs are located at \"AKW\"? Return the club names."
  },
  {
    "query" : "query { club_aggregate ( where : { clublocation : { _eq : \"HHH\" } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "How many clubs are located at \"HHH\"?"
  },
  {
    "query" : "query { club_aggregate ( where : { clublocation : { _eq : \"HHH\" } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "Count the number of clubs located at \"HHH\"."
  },
  {
    "query" : "query { student ( where : { _and : { member_of_clubs : { position : { _eq : \"President\" } , club : { clubname : { _eq : \"Bootup Baltimore\" } } } } } ) { fname lname } }",
    "schemaId" : "club_1",
    "question" : "What are the first and last name of the president of the club \"Bootup Baltimore\"?"
  },
  {
    "query" : "query { student ( where : { _and : { member_of_clubs : { position : { _eq : \"President\" } , club : { clubname : { _eq : \"Bootup Baltimore\" } } } } } ) { fname lname } }",
    "schemaId" : "club_1",
    "question" : "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name."
  },
  {
    "query" : "query { student ( where : { _and : { member_of_clubs : { position : { _eq : \"CTO\" } , club : { clubname : { _eq : \"Hopkins Student Enterprises\" } } } } } ) { fname lname } }",
    "schemaId" : "club_1",
    "question" : "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? Show the first name and last name."
  },
  {
    "query" : "query { student ( where : { _and : { member_of_clubs : { position : { _eq : \"CTO\" } , club : { clubname : { _eq : \"Hopkins Student Enterprises\" } } } } } ) { fname lname } }",
    "schemaId" : "club_1",
    "question" : "Find the first name and last name for the \"CTO\" of the club \"Hopkins Student Enterprises\"?"
  },
  {
    "query" : "query { member_of_club_aggregate ( where : { club : { clubname : { _eq : \"Bootup Baltimore\" } } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "How many different roles are there in the club \"Bootup Baltimore\"?"
  },
  {
    "query" : "query { member_of_club_aggregate ( where : { club : { clubname : { _eq : \"Bootup Baltimore\" } } } ) { aggregate { count } } }",
    "schemaId" : "club_1",
    "question" : "Count the number of different positions in the club \"Bootup Baltimore\"."
  },
  {
    "query" : "query { student_aggregate ( where : { member_of_clubs : { club : { clubname : { _eq : \"Bootup Baltimore\" } } } } ) { aggregate { avg { age } } } }",
    "schemaId" : "club_1",
    "question" : "What is the average age of the members of the club \"Bootup Baltimore\"?"
  },
  {
    "query" : "query { student_aggregate ( where : { member_of_clubs : { club : { clubname : { _eq : \"Bootup Baltimore\" } } } } ) { aggregate { avg { age } } } }",
    "schemaId" : "club_1",
    "question" : "Find the average age of the members in the club \"Bootup Baltimore\"."
  },
  {
    "query" : "query { student_aggregate ( where : { member_of_clubs : { club : { clubname : { _eq : \"Hopkins Student Enterprises\" } } } } ) { aggregate { avg { age } } } }",
    "schemaId" : "club_1",
    "question" : "Find the average age of members of the club \"Hopkins Student Enterprises\"."
  },
  {
    "query" : "query { student_aggregate ( where : { member_of_clubs : { club : { clubname : { _eq : \"Hopkins Student Enterprises\" } } } } ) { aggregate { avg { age } } } }",
    "schemaId" : "club_1",
    "question" : "On average, how old are the members in the club \"Hopkins Student Enterprises\"?"
  },
  {
    "query" : "query { student_aggregate ( where : { member_of_clubs : { club : { clubname : { _eq : \"Tennis Club\" } } } } ) { aggregate { avg { age } } } }",
    "schemaId" : "club_1",
    "question" : "Retrieve the average age of members of the club \"Tennis Club\"."
  },
  {
    "query" : "query { student_aggregate ( where : { member_of_clubs : { club : { clubname : { _eq : \"Tennis Club\" } } } } ) { aggregate { avg { age } } } }",
    "schemaId" : "club_1",
    "question" : "Compute the average age of the members in the club \"Tennis Club\"."
  },
  {
    "query" : "query { member_aggregate ( where : { membership_card : { _eq : \"Black\" } } ) { aggregate { count } } }",
    "schemaId" : "coffee_shop",
    "question" : "How many members have the black membership card?"
  },
  {
    "query" : "query { member ( where : { _or : [ { address : { _eq : \"Harford\" } } , { address : { _eq : \"Waterbury\" } } ] } ) { name } }",
    "schemaId" : "coffee_shop",
    "question" : "Give me the names of members whose address is in Harford or Waterbury."
  },
  {
    "query" : "query { member ( where : { _or : [ { membership_card : { _eq : \"Black\" } } , { age : { _lt : 30 } } ] } ) { name member_id } }",
    "schemaId" : "coffee_shop",
    "question" : "Find the ids and names of members who are under age 30 or with black membership card."
  },
  {
    "query" : "query { member ( order_by : { time_of_purchase : asc } ) { time_of_purchase age address } }",
    "schemaId" : "coffee_shop",
    "question" : "Find the purchase time, age and address of each member, and show the results in the order of purchase time."
  },
  {
    "query" : "query { member_aggregate ( where : { address : { _neq : \"Hartford\" } } ) { aggregate { count } } }",
    "schemaId" : "coffee_shop",
    "question" : "How many members are not living in Hartford?"
  },
  {
    "query" : "query { shop ( order_by : { open_year : asc } ) { address } }",
    "schemaId" : "coffee_shop",
    "question" : "Show the shop addresses ordered by their opening year."
  },
  {
    "query" : "query { shop_aggregate { aggregate { avg { num_of_staff } avg { score } } } }",
    "schemaId" : "coffee_shop",
    "question" : "What are the average score and average staff number of all shops?"
  },
  {
    "query" : "query { shop ( where : { happy_hours : { month : { _eq : \"May\" } } } ) { address shop_id } }",
    "schemaId" : "coffee_shop",
    "question" : "What are the id and address of the shops which have a happy hour in May?"
  },
  {
    "query" : "query { professor_aggregate ( where : { department : { dept_name : { _eq : \"Accounting\" } } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "Find the number of professors in accounting department."
  },
  {
    "query" : "query { professor_aggregate ( where : { department : { dept_name : { _eq : \"Accounting\" } } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many professors are in the accounting dept?"
  },
  {
    "query" : "query { class_aggregate ( where : { crs_code : { _eq : \"ACCT-211\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many professors are teaching class with code ACCT-211?"
  },
  {
    "query" : "query { class_aggregate ( where : { crs_code : { _eq : \"ACCT-211\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many professors teach a class with the code ACCT-211?"
  },
  {
    "query" : "query { employee ( where : { professor : { department : { dept_name : { _eq : \"Biology\" } } } } ) { emp_fname emp_lname } }",
    "schemaId" : "college_1",
    "question" : "What is the first and last name of the professor in biology department?"
  },
  {
    "query" : "query { employee ( where : { professor : { department : { dept_name : { _eq : \"Biology\" } } } } ) { emp_fname emp_lname } }",
    "schemaId" : "college_1",
    "question" : "What are the first and last name of all biology professors?"
  },
  {
    "query" : "query { employee_aggregate ( where : { emp_lname : { _eq : \"Graztevski\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many classes are professor whose last name is Graztevski has?"
  },
  {
    "query" : "query { employee_aggregate ( where : { emp_lname : { _eq : \"Graztevski\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many classes does the professor whose last name is Graztevski teach?"
  },
  {
    "query" : "query { department ( where : { dept_name : { _eq : \"Accounting\" } } ) { school_code } }",
    "schemaId" : "college_1",
    "question" : "What is the code of the school where the accounting department belongs to?"
  },
  {
    "query" : "query { department ( where : { dept_name : { _eq : \"Accounting\" } } ) { school_code } }",
    "schemaId" : "college_1",
    "question" : "What is the school code of the accounting department?"
  },
  {
    "query" : "query { course ( where : { crs_code : { _eq : \"CIS-220\" } } ) { crs_credit crs_description } }",
    "schemaId" : "college_1",
    "question" : "How many credits does course CIS-220 have, and what its description?"
  },
  {
    "query" : "query { course ( where : { crs_code : { _eq : \"CIS-220\" } } ) { crs_credit crs_description } }",
    "schemaId" : "college_1",
    "question" : "What is the description for the CIS-220 and how many credits does it have?"
  },
  {
    "query" : "query { department ( where : { dept_name : { _eq : \"History\" } } ) { dept_address } }",
    "schemaId" : "college_1",
    "question" : "what is the address of history department?"
  },
  {
    "query" : "query { department ( where : { dept_name : { _eq : \"History\" } } ) { dept_address } }",
    "schemaId" : "college_1",
    "question" : "Where is the history department?"
  },
  {
    "query" : "query { department_aggregate ( where : { school_code : { _eq : \"BUS\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many different locations does the school with code BUS has?"
  },
  {
    "query" : "query { department_aggregate ( where : { school_code : { _eq : \"BUS\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "What are the different locations of the school with the code BUS?"
  },
  {
    "query" : "query { course ( where : { crs_code : { _eq : \"QM-261\" } } ) { crs_credit crs_description } }",
    "schemaId" : "college_1",
    "question" : "Find the description and credit for the course QM-261?"
  },
  {
    "query" : "query { course ( where : { crs_code : { _eq : \"QM-261\" } } ) { crs_credit crs_description } }",
    "schemaId" : "college_1",
    "question" : "What is the course description and number of credits for QM-261?"
  },
  {
    "query" : "query { department_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "how many schools exist in total?"
  },
  {
    "query" : "query { department_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many schools are there in the department?"
  },
  {
    "query" : "query { class_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many different classes are there?"
  },
  {
    "query" : "query { class_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many unique classes are offered?"
  },
  {
    "query" : "query { class_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many courses are offered?"
  },
  {
    "query" : "query { class_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "What are the number of different course codes?"
  },
  {
    "query" : "query { department_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many departments does the college has?"
  },
  {
    "query" : "query { department_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many different departments are there?"
  },
  {
    "query" : "query { department_aggregate ( where : { dept_name : { _eq : \"Computer Info. Systems\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many courses are offered by the Computer Info. Systems department?"
  },
  {
    "query" : "query { department_aggregate ( where : { dept_name : { _eq : \"Computer Info. Systems\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many courses does the department of Computer Information Systmes offer?"
  },
  {
    "query" : "query { class_aggregate ( where : { crs_code : { _eq : \"ACCT-211\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many sections does course ACCT-211 has?"
  },
  {
    "query" : "query { class_aggregate ( where : { crs_code : { _eq : \"ACCT-211\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "What is the number of different class sections offered in the course ACCT-211?"
  },
  {
    "query" : "query { class_aggregate ( where : { crs_code : { _eq : \"ACCT-211\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many students enrolled in class ACCT-211?"
  },
  {
    "query" : "query { class_aggregate ( where : { crs_code : { _eq : \"ACCT-211\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "What are the total number of students enrolled in ACCT-211?"
  },
  {
    "query" : "query { student ( where : { enrolls : { class : { crs_code : { _eq : \"ACCT-211\" } } } } ) { stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What is the first name of each student enrolled in class ACCT-211?"
  },
  {
    "query" : "query { student ( where : { enrolls : { class : { crs_code : { _eq : \"ACCT-211\" } } } } ) { stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What are the first names of all students in course ACCT-211?"
  },
  {
    "query" : "query { student ( where : { _and : { enrolls : { class : { crs_code : { _eq : \"ACCT-211\" } } , enroll_grade : { _eq : \"C\" } } } } ) { stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What is the first name of students enrolled in class ACCT-211 and got grade C?"
  },
  {
    "query" : "query { student ( where : { _and : { enrolls : { enroll_grade : { _eq : \"C\" } , class : { crs_code : { _eq : \"ACCT-211\" } } } } } ) { stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What are the first names of all students who took ACCT-211 and received a C?"
  },
  {
    "query" : "query { employee_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "Find the total number of employees."
  },
  {
    "query" : "query { employee_aggregate { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many employees are there all together?"
  },
  {
    "query" : "query { professor_aggregate ( where : { prof_high_degree : { _eq : \"Ph.D.\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many professors do have a Ph.D. degree?"
  },
  {
    "query" : "query { professor_aggregate ( where : { prof_high_degree : { _eq : \"Ph.D.\" } } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "What is the total number of professors with a Ph.D. ?"
  },
  {
    "query" : "query { department ( order_by : { dept_name : asc } ) { dept_name } }",
    "schemaId" : "college_1",
    "question" : "list names of all departments ordered by their names."
  },
  {
    "query" : "query { department ( order_by : { dept_name : asc } ) { dept_name } }",
    "schemaId" : "college_1",
    "question" : "What are the names of all departments in alphabetical order?"
  },
  {
    "query" : "query { class ( where : { class_room : { _eq : \"KLR209\" } } ) { class_code } }",
    "schemaId" : "college_1",
    "question" : "List the codes of all courses that take place in room KLR209."
  },
  {
    "query" : "query { class ( where : { class_room : { _eq : \"KLR209\" } } ) { class_code } }",
    "schemaId" : "college_1",
    "question" : "What are the codes of all the courses that are located in room KLR209?"
  },
  {
    "query" : "query { employee ( order_by : { emp_dob : asc } , where : { emp_jobcode : { _eq : \"PROF\" } } ) { emp_fname } }",
    "schemaId" : "college_1",
    "question" : "List the first name of all employees with job code PROF ordered by their date of birth."
  },
  {
    "query" : "query { employee ( order_by : { emp_dob : asc } , where : { emp_jobcode : { _eq : \"PROF\" } } ) { emp_fname } }",
    "schemaId" : "college_1",
    "question" : "What are the first names of all employees that are professors ordered by date of birth?"
  },
  {
    "query" : "query { employee ( order_by : { emp_fname : asc } ) { emp_fname professor { prof_office } } }",
    "schemaId" : "college_1",
    "question" : "Find the first names and offices of all professors sorted by alphabetical order of their first name."
  },
  {
    "query" : "query { employee ( order_by : { emp_fname : asc } ) { emp_fname professor { prof_office } } }",
    "schemaId" : "college_1",
    "question" : "What are the first names and office locations for all professors sorted alphabetically by first name?"
  },
  {
    "query" : "query { employee ( limit : 1 , order_by : { emp_dob : asc } ) { emp_fname emp_lname } }",
    "schemaId" : "college_1",
    "question" : "What is the first and last name of the oldest employee?"
  },
  {
    "query" : "query { employee ( limit : 1 , order_by : { emp_dob : asc } ) { emp_fname emp_lname } }",
    "schemaId" : "college_1",
    "question" : "What are the first and last names of the employee with the earliest date of birth?"
  },
  {
    "query" : "query { student ( limit : 1 , order_by : { stu_dob : desc } , where : { stu_gpa : { _gt : 3.0 } } ) { stu_fname stu_lname stu_gpa } }",
    "schemaId" : "college_1",
    "question" : "What is the first, last name, gpa of the youngest one among students whose GPA is above 3?"
  },
  {
    "query" : "query { student ( limit : 1 , order_by : { stu_dob : desc } , where : { stu_gpa : { _gt : 3.0 } } ) { stu_fname stu_lname stu_gpa } }",
    "schemaId" : "college_1",
    "question" : "What is the first and last name of the youngest student with a GPA above 3, and what is their GPA?"
  },
  {
    "query" : "query { student ( where : { enrolls : { enroll_grade : { _eq : \"C\" } } } , distinct_on : stu_fname ) { stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What is the first name of students who got grade C in any class?"
  },
  {
    "query" : "query { student ( where : { enrolls : { enroll_grade : { _eq : \"C\" } } } , distinct_on : stu_fname ) { stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What are the first names of all students who got a grade C in a class?"
  },
  {
    "query" : "query { department ( where : { professors : { employee : { emp_lname : { _eq : \"Heffington\" } } } } ) { dept_name professors { prof_office } } }",
    "schemaId" : "college_1",
    "question" : "What is department name and office for the professor whose last name is Heffington?"
  },
  {
    "query" : "query { department ( where : { professors : { employee : { emp_lname : { _eq : \"Heffington\" } } } } ) { dept_name professors { prof_office } } }",
    "schemaId" : "college_1",
    "question" : "What is the name of the department and office location for the professor with the last name of Heffington?"
  },
  {
    "query" : "query { employee ( where : { professor : { prof_office : { _eq : \"DRE 102\" } } } ) { emp_lname emp_hiredate } }",
    "schemaId" : "college_1",
    "question" : "Find the last name and hire date of the professor who is in office DRE 102."
  },
  {
    "query" : "query { employee ( where : { professor : { prof_office : { _eq : \"DRE 102\" } } } ) { emp_lname emp_hiredate } }",
    "schemaId" : "college_1",
    "question" : "What is the last name of the professor whose office is located in DRE 102, and when were they hired?"
  },
  {
    "query" : "query { professor_aggregate ( where : { _or : [ { prof_high_degree : { _eq : \"Ph.D.\" } } , { prof_high_degree : { _eq : \"MA\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many professors who has a either Ph.D. or MA degree?"
  },
  {
    "query" : "query { professor_aggregate ( where : { _or : [ { prof_high_degree : { _eq : \"Ph.D.\" } } , { prof_high_degree : { _eq : \"MA\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many professors attained either Ph.D. or Masters degrees?"
  },
  {
    "query" : "query { professor_aggregate ( where : { _or : [ { department : { dept_name : { _eq : \"Accounting\" } } } , { department : { dept_name : { _eq : \"Biology\" } } } ] } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "How many professors who are from either Accounting or Biology department?"
  },
  {
    "query" : "query { professor_aggregate ( where : { _or : [ { department : { dept_name : { _eq : \"Accounting\" } } } , { department : { dept_name : { _eq : \"Biology\" } } } ] } ) { aggregate { count } } }",
    "schemaId" : "college_1",
    "question" : "What is the number of professors who are in the Accounting or Biology departments?"
  },
  {
    "query" : "query { student ( limit : 5 , order_by : { stu_gpa : desc } ) { stu_gpa stu_phone stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What is the first name, gpa and phone number of the top 5 students with highest gpa?"
  },
  {
    "query" : "query { student ( limit : 5 , order_by : { stu_gpa : desc } ) { stu_gpa stu_phone stu_fname } }",
    "schemaId" : "college_1",
    "question" : "What is the first name, GPA, and phone number of the students with the top 5 GPAs?"
  },
  {
    "query" : "query { employee { emp_fname classes { crs_code } } }",
    "schemaId" : "college_1",
    "question" : "Find the first names of all instructors who have taught some course and the course code."
  },
  {
    "query" : "query { employee { emp_fname classes { crs_code } } }",
    "schemaId" : "college_1",
    "question" : "What are the first names of all teachers who have taught a course and the corresponding course codes?"
  },
  {
    "query" : "query { student ( where : { _or : [ { enrolls : { enroll_grade : { _eq : \"C\" } } } , { enrolls : { enroll_grade : { _eq : \"A\" } } } ] } ) { stu_fname stu_lname } }",
    "schemaId" : "college_1",
    "question" : "Find names of all students who took some course and got A or C."
  },
  {
    "query" : "query { student ( where : { _or : [ { enrolls : { enroll_grade : { _eq : \"C\" } } } , { enrolls : { enroll_grade : { _eq : \"A\" } } } ] } ) { stu_fname stu_lname } }",
    "schemaId" : "college_1",
    "question" : "What are the names of all students taking a course who received an A or C?"
  },
  {
    "query" : "query { student ( where : { _and : { enrolls : { enroll_grade : { _eq : \"A\" } , class_code : { _eq : \"10018\" } } } } ) { stu_lname } }",
    "schemaId" : "college_1",
    "question" : "What is the last name of the student who got a grade A in the class with code 10018."
  },
  {
    "query" : "query { student ( where : { _and : { enrolls : { class_code : { _eq : \"10018\" } , enroll_grade : { _eq : \"A\" } } } } ) { stu_lname } }",
    "schemaId" : "college_1",
    "question" : "What is the last name of the student who received an A in the class with the code 10018?"
  },
  {
    "query" : "query { department ( where : { courses : { crs_description : { _like : \"%Statistics%\" } } } ) { dept_name } }",
    "schemaId" : "college_1",
    "question" : "Find the name of department that offers the class whose description has the word \"Statistics\"."
  },
  {
    "query" : "query { department ( where : { courses : { crs_description : { _like : \"%Statistics%\" } } } ) { dept_name } }",
    "schemaId" : "college_1",
    "question" : "What is the name of the department that offers a course that has a description including the word \"Statistics\"?"
  },
  {
    "query" : "query { classroom ( where : { capacity : { _gt : 50 } } , distinct_on : building ) { building } }",
    "schemaId" : "college_2",
    "question" : "Find the buildings which have rooms with capacity more than 50."
  },
  {
    "query" : "query { classroom ( where : { capacity : { _gt : 50 } } , distinct_on : building ) { building } }",
    "schemaId" : "college_2",
    "question" : "What are the distinct buildings with capacities of greater than 50?"
  },
  {
    "query" : "query { classroom_aggregate ( where : { building : { _neq : \"Lamberton\" } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Count the number of rooms that are not in the Lamberton building."
  },
  {
    "query" : "query { classroom_aggregate ( where : { building : { _neq : \"Lamberton\" } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many classrooms are not in Lamberton?"
  },
  {
    "query" : "query { classroom ( where : { capacity : { _gte : 50 , _lte : 100 } } ) { building room_number } }",
    "schemaId" : "college_2",
    "question" : "Find the room number of the rooms which can sit 50 to 100 students and their buildings."
  },
  {
    "query" : "query { classroom ( where : { capacity : { _gte : 50 , _lte : 100 } } ) { building room_number } }",
    "schemaId" : "college_2",
    "question" : "What are the room numbers and corresponding buildings for classrooms which can seat between 50 to 100 students?"
  },
  {
    "query" : "query { department ( limit : 1 , order_by : { budget : desc } ) { dept_name building } }",
    "schemaId" : "college_2",
    "question" : "Find the name and building of the department with the highest budget."
  },
  {
    "query" : "query { department ( limit : 1 , order_by : { budget : desc } ) { dept_name building } }",
    "schemaId" : "college_2",
    "question" : "What is the department name and corresponding building for the department with the greatest budget?"
  },
  {
    "query" : "query { student ( limit : 1 , order_by : { tot_cred : desc } , where : { dept_name : { _eq : \"History\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "What is the name of the student who has the highest total credits in the History department."
  },
  {
    "query" : "query { student ( limit : 1 , order_by : { tot_cred : desc } , where : { dept_name : { _eq : \"History\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Give the name of the student in the History department with the most credits."
  },
  {
    "query" : "query { classroom_aggregate ( where : { building : { _eq : \"Lamberton\" } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many rooms does the Lamberton building have?"
  },
  {
    "query" : "query { classroom_aggregate ( where : { building : { _eq : \"Lamberton\" } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Count the number of classrooms in Lamberton."
  },
  {
    "query" : "query { advisor_aggregate { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many students have advisors?"
  },
  {
    "query" : "query { advisor_aggregate { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Count the number of students who have advisors."
  },
  {
    "query" : "query { course_aggregate { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many departments offer courses?"
  },
  {
    "query" : "query { course_aggregate { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Count the number of departments which offer courses."
  },
  {
    "query" : "query { course_aggregate ( where : { dept_name : { _eq : \"Physics\" } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many different courses offered by Physics department?"
  },
  {
    "query" : "query { course_aggregate ( where : { dept_name : { _eq : \"Physics\" } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Count the number of courses in the Physics department."
  },
  {
    "query" : "query { teaches_aggregate { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many different instructors have taught some course?"
  },
  {
    "query" : "query { teaches_aggregate { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Count the number of distinct instructors who have taught a course."
  },
  {
    "query" : "query { department_aggregate ( where : { _or : [ { dept_name : { _eq : \"Marketing\" } } , { dept_name : { _eq : \"Finance\" } } ] } ) { aggregate { sum { budget } } } }",
    "schemaId" : "college_2",
    "question" : "Find the total budgets of the Marketing or Finance department."
  },
  {
    "query" : "query { department_aggregate ( where : { _or : [ { dept_name : { _eq : \"Marketing\" } } , { dept_name : { _eq : \"Finance\" } } ] } ) { aggregate { sum { budget } } } }",
    "schemaId" : "college_2",
    "question" : "What is the sum of budgets of the Marketing and Finance departments?"
  },
  {
    "query" : "query { instructor ( where : { name : { _like : \"%Soisalon%\" } } ) { dept_name } }",
    "schemaId" : "college_2",
    "question" : "Find the department name of the instructor whose name contains 'Soisalon'."
  },
  {
    "query" : "query { instructor ( where : { name : { _like : \"%Soisalon%\" } } ) { dept_name } }",
    "schemaId" : "college_2",
    "question" : "What is the name of the department with an instructure who has a name like 'Soisalon'?"
  },
  {
    "query" : "query { classroom_aggregate ( where : { _and : { building : { _eq : \"Lamberton\" } , capacity : { _lt : 50 } } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many rooms whose capacity is less than 50 does the Lamberton building have?"
  },
  {
    "query" : "query { classroom_aggregate ( where : { _and : { building : { _eq : \"Lamberton\" } , capacity : { _lt : 50 } } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Count the number of rooms in Lamberton with capacity lower than 50."
  },
  {
    "query" : "query { instructor ( limit : 1 , order_by : { salary : asc } , where : { dept_name : { _eq : \"Statistics\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "what is the name of the instructor who is in Statistics department and earns the lowest salary?"
  },
  {
    "query" : "query { instructor ( limit : 1 , order_by : { salary : asc } , where : { dept_name : { _eq : \"Statistics\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Give the name of the lowest earning instructor in the Statistics department."
  },
  {
    "query" : "query { student ( where : { _or : [ { takes : { year : { _eq : 2009 } } } , { takes : { year : { _eq : 2010 } } } ] } , distinct_on : name ) { name } }",
    "schemaId" : "college_2",
    "question" : "Find the name of students who took any class in the years of 2009 and 2010."
  },
  {
    "query" : "query { student ( where : { _or : [ { takes : { year : { _eq : 2009 } } } , { takes : { year : { _eq : 2010 } } } ] } , distinct_on : name ) { name } }",
    "schemaId" : "college_2",
    "question" : "What are the names of the students who took classes in 2009 or 2010?"
  },
  {
    "query" : "query { course ( order_by : { title : asc , credits : asc } ) { title } }",
    "schemaId" : "college_2",
    "question" : "List the names of all courses ordered by their titles and credits."
  },
  {
    "query" : "query { course ( order_by : { title : asc , credits : asc } ) { title } }",
    "schemaId" : "college_2",
    "question" : "Given the titles of all courses, in order of titles and credits."
  },
  {
    "query" : "query { department ( limit : 1 , order_by : { budget : asc } ) { dept_name } }",
    "schemaId" : "college_2",
    "question" : "Which department has the lowest budget?"
  },
  {
    "query" : "query { department ( limit : 1 , order_by : { budget : asc } ) { dept_name } }",
    "schemaId" : "college_2",
    "question" : "Give the name of the department with the lowest budget."
  },
  {
    "query" : "query { department ( order_by : { budget : desc } ) { dept_name building } }",
    "schemaId" : "college_2",
    "question" : "List the names and buildings of all departments sorted by the budget from large to small."
  },
  {
    "query" : "query { department ( order_by : { budget : desc } ) { dept_name building } }",
    "schemaId" : "college_2",
    "question" : "What are the names and buildings of the deparments, sorted by budget descending?"
  },
  {
    "query" : "query { instructor ( limit : 1 , order_by : { salary : desc } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Who is the instructor with the highest salary?"
  },
  {
    "query" : "query { instructor ( limit : 1 , order_by : { salary : desc } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Give the name of the highest paid instructor."
  },
  {
    "query" : "query { instructor ( order_by : { salary : asc } ) { dept_name id name salary } }",
    "schemaId" : "college_2",
    "question" : "List the information of all instructors ordered by their salary in ascending order."
  },
  {
    "query" : "query { instructor ( order_by : { salary : asc } ) { dept_name id name salary } }",
    "schemaId" : "college_2",
    "question" : "Give all information regarding instructors, in order of salary from least to greatest."
  },
  {
    "query" : "query { student ( order_by : { tot_cred : asc } ) { name dept_name } }",
    "schemaId" : "college_2",
    "question" : "Find the name of the students and their department names sorted by their total credits in ascending order."
  },
  {
    "query" : "query { student ( order_by : { tot_cred : asc } ) { name dept_name } }",
    "schemaId" : "college_2",
    "question" : "What are the names of students and their respective departments, ordered by number of credits from least to greatest?"
  },
  {
    "query" : "query { advisor ( where : { student : { dept_name : { _eq : \"History\" } } } ) { i_id } }",
    "schemaId" : "college_2",
    "question" : "What is the id of the instructor who advises of all students from History department?"
  },
  {
    "query" : "query { advisor ( where : { student : { dept_name : { _eq : \"History\" } } } ) { i_id } }",
    "schemaId" : "college_2",
    "question" : "Give id of the instructor who advises students in the History department."
  },
  {
    "query" : "query { course ( where : { _and : { sections : { year : { _eq : 2010 } , building : { _eq : \"Chandler\" } , semester : { _eq : \"Fall\" } } } } ) { title } }",
    "schemaId" : "college_2",
    "question" : "What is the title of the course that was offered at building Chandler during the fall semester in the year of 2010?"
  },
  {
    "query" : "query { course ( where : { _and : { sections : { semester : { _eq : \"Fall\" } , year : { _eq : 2010 } , building : { _eq : \"Chandler\" } } } } ) { title } }",
    "schemaId" : "college_2",
    "question" : "Give the title of the course offered in Chandler during the Fall of 2010."
  },
  {
    "query" : "query { instructor_aggregate ( limit : 1 , order_by : { department : { budget : desc } } ) { aggregate { count avg { salary } } } }",
    "schemaId" : "college_2",
    "question" : "Find the number and averaged salary of all instructors who are in the department with the highest budget."
  },
  {
    "query" : "query { instructor_aggregate ( limit : 1 , order_by : { department : { budget : desc } } ) { aggregate { count avg { salary } } } }",
    "schemaId" : "college_2",
    "question" : "How many instructors are in the department with the highest budget, and what is their average salary?"
  },
  {
    "query" : "query { student ( where : { takes : { course : { dept_name : { _eq : \"Statistics\" } } } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Find the name of students who took some course offered by Statistics department."
  },
  {
    "query" : "query { student ( where : { takes : { course : { dept_name : { _eq : \"Statistics\" } } } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "What are the names of students who have taken Statistics courses?"
  },
  {
    "query" : "query { section ( order_by : { course : { title : asc } } , where : { course : { dept_name : { _eq : \"Psychology\" } } } ) { building room_number semester year } }",
    "schemaId" : "college_2",
    "question" : "Find the building, room number, semester and year of all courses offered by Psychology department sorted by course titles."
  },
  {
    "query" : "query { section ( order_by : { course : { title : asc } } , where : { course : { dept_name : { _eq : \"Psychology\" } } } ) { building room_number semester year } }",
    "schemaId" : "college_2",
    "question" : "What are the building, room number, semester and year of courses in the Psychology department, sorted using course title?"
  },
  {
    "query" : "query { instructor ( where : { dept_name : { _eq : \"Comp. Sci.\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Find the names of all instructors in computer science department"
  },
  {
    "query" : "query { instructor ( where : { dept_name : { _eq : \"Comp. Sci.\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "What are the names of all instructors in the Comp. Sci. department?"
  },
  {
    "query" : "query { instructor ( where : { _and : { dept_name : { _eq : \"Comp. Sci.\" } , salary : { _gt : 80000 } } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Find the names of all instructors in Comp. Sci. department with salary > 80000."
  },
  {
    "query" : "query { instructor ( where : { _and : { salary : { _gt : 80000 } , dept_name : { _eq : \"Comp. Sci.\" } } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?"
  },
  {
    "query" : "query { instructor { name teaches { course_id } } }",
    "schemaId" : "college_2",
    "question" : "Find the names of all instructors who have taught some course and the course_id."
  },
  {
    "query" : "query { instructor { name teaches { course_id } } }",
    "schemaId" : "college_2",
    "question" : "What are the names of all instructors who have taught a course, as well as the corresponding course id?"
  },
  {
    "query" : "query { instructor ( where : { dept_name : { _eq : \"Art\" } } ) { name teaches { course_id } } }",
    "schemaId" : "college_2",
    "question" : "Find the names of all instructors in the Art department who have taught some course and the course_id."
  },
  {
    "query" : "query { instructor ( where : { dept_name : { _eq : \"Art\" } } ) { name teaches { course_id } } }",
    "schemaId" : "college_2",
    "question" : "What are the names of Art instructors who have taught a course, and the corresponding course id?"
  },
  {
    "query" : "query { instructor ( where : { name : { _like : \"%dar%\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "Find the names of all instructors whose name includes the substring “dar”."
  },
  {
    "query" : "query { instructor ( where : { name : { _like : \"%dar%\" } } ) { name } }",
    "schemaId" : "college_2",
    "question" : "What are the names of all instructors with names that include \"dar\"?"
  },
  {
    "query" : "query { instructor ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "college_2",
    "question" : "List in alphabetic order the names of all distinct instructors."
  },
  {
    "query" : "query { instructor ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "college_2",
    "question" : "List the distinct names of the instructors, ordered by name."
  },
  {
    "query" : "query { teaches_aggregate ( where : { _and : { semester : { _eq : \"Spring\" } , year : { _eq : 2010 } } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "Find the total number of instructors who teach a course in the Spring 2010 semester."
  },
  {
    "query" : "query { teaches_aggregate ( where : { _and : { semester : { _eq : \"Spring\" } , year : { _eq : 2010 } } } ) { aggregate { count } } }",
    "schemaId" : "college_2",
    "question" : "How many instructors teach a course in the Spring of 2010?"
  },
  {
    "query" : "query { course_aggregate { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "How many courses are there in total?"
  },
  {
    "query" : "query { course_aggregate { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "Count the number of courses."
  },
  {
    "query" : "query { course_aggregate ( where : { credits : { _gt : 2 } } ) { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "How many courses have more than 2 credits?"
  },
  {
    "query" : "query { course_aggregate ( where : { credits : { _gt : 2 } } ) { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "Count the number of courses with more than 2 credits."
  },
  {
    "query" : "query { course ( where : { credits : { _eq : 1 } } ) { cname } }",
    "schemaId" : "college_3",
    "question" : "List all names of courses with 1 credit?"
  },
  {
    "query" : "query { course ( where : { credits : { _eq : 1 } } ) { cname } }",
    "schemaId" : "college_3",
    "question" : "What are the names of courses with 1 credit?"
  },
  {
    "query" : "query { course ( where : { days : { _eq : \"MTW\" } } ) { cname } }",
    "schemaId" : "college_3",
    "question" : "Which courses are taught on days MTW?"
  },
  {
    "query" : "query { course ( where : { days : { _eq : \"MTW\" } } ) { cname } }",
    "schemaId" : "college_3",
    "question" : "What are the course names for courses taught on MTW?"
  },
  {
    "query" : "query { department_aggregate ( where : { division : { _eq : \"AS\" } } ) { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "What is the number of departments in Division \"AS\"?"
  },
  {
    "query" : "query { department_aggregate ( where : { division : { _eq : \"AS\" } } ) { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "How many departments are in the division AS?"
  },
  {
    "query" : "query { department ( where : { room : { _eq : \"268\" } } ) { dphone } }",
    "schemaId" : "college_3",
    "question" : "What are the phones of departments in Room 268?"
  },
  {
    "query" : "query { department ( where : { room : { _eq : \"268\" } } ) { dphone } }",
    "schemaId" : "college_3",
    "question" : "Give the phones for departments in room 268."
  },
  {
    "query" : "query { enrolled_in_aggregate ( where : { grade : { _eq : \"B\" } } ) { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "Find the number of students that have at least one grade \"B\"."
  },
  {
    "query" : "query { enrolled_in_aggregate ( where : { grade : { _eq : \"B\" } } ) { aggregate { count } } }",
    "schemaId" : "college_3",
    "question" : "How many students have had at least one \"B\" grade?"
  },
  {
    "query" : "query { gradeconversion_aggregate { aggregate { max { gradepoint } min { gradepoint } } } }",
    "schemaId" : "college_3",
    "question" : "Find the max and min grade point for all letter grade."
  },
  {
    "query" : "query { gradeconversion_aggregate { aggregate { max { gradepoint } min { gradepoint } } } }",
    "schemaId" : "college_3",
    "question" : "What are the maximum and minumum grade points?"
  },
  {
    "query" : "query { student ( where : { fname : { _like : \"%a%\" } } , distinct_on : fname ) { fname } }",
    "schemaId" : "college_3",
    "question" : "Find the first names of students whose first names contain letter \"a\"."
  },
  {
    "query" : "query { student ( where : { fname : { _like : \"%a%\" } } , distinct_on : fname ) { fname } }",
    "schemaId" : "college_3",
    "question" : "What are the first names for students who have an \"a\" in their first name?"
  },
  {
    "query" : "query { faculty ( where : { _and : { sex : { _eq : \"M\" } , building : { _eq : \"NEB\" } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "Find the first names and last names of male (sex is M) faculties who live in building NEB."
  },
  {
    "query" : "query { faculty ( where : { _and : { sex : { _eq : \"M\" } , building : { _eq : \"NEB\" } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "What are the full names of faculties with sex M and who live in building NEB?"
  },
  {
    "query" : "query { faculty ( where : { _and : { rank : { _eq : \"Professor\" } , building : { _eq : \"NEB\" } } } ) { room } }",
    "schemaId" : "college_3",
    "question" : "Find the rooms of faculties with rank professor who live in building NEB."
  },
  {
    "query" : "query { faculty ( where : { _and : { building : { _eq : \"NEB\" } , rank : { _eq : \"Professor\" } } } ) { room } }",
    "schemaId" : "college_3",
    "question" : "What are the rooms for members of the faculty who are professors and who live in building NEB?"
  },
  {
    "query" : "query { department ( where : { building : { _eq : \"Mergenthaler\" } } ) { dname } }",
    "schemaId" : "college_3",
    "question" : "Find the department name that is in Building \"Mergenthaler\"."
  },
  {
    "query" : "query { department ( where : { building : { _eq : \"Mergenthaler\" } } ) { dname } }",
    "schemaId" : "college_3",
    "question" : "What is the name of the department in the Building Mergenthaler?"
  },
  {
    "query" : "query { course ( order_by : { credits : asc } ) { cid cname credits days dno hours instructor } }",
    "schemaId" : "college_3",
    "question" : "List all information about courses sorted by credits in the ascending order."
  },
  {
    "query" : "query { course ( order_by : { credits : asc } ) { cid cname credits days dno hours instructor } }",
    "schemaId" : "college_3",
    "question" : "What is all the information about courses, ordered by credits ascending?"
  },
  {
    "query" : "query { course ( order_by : { credits : asc } ) { cname } }",
    "schemaId" : "college_3",
    "question" : "List the course name of courses sorted by credits."
  },
  {
    "query" : "query { course ( order_by : { credits : asc } ) { cname } }",
    "schemaId" : "college_3",
    "question" : "What are the course names, ordered by credits?"
  },
  {
    "query" : "query { student ( order_by : { age : desc } ) { fname } }",
    "schemaId" : "college_3",
    "question" : "Find the first name of students in the descending order of age."
  },
  {
    "query" : "query { student ( order_by : { age : desc } ) { fname } }",
    "schemaId" : "college_3",
    "question" : "What are the first names of students, ordered by age from greatest to least?"
  },
  {
    "query" : "query { student ( order_by : { age : desc } , where : { sex : { _eq : \"F\" } } ) { lname } }",
    "schemaId" : "college_3",
    "question" : "Find the last name of female (sex is F) students in the descending order of age."
  },
  {
    "query" : "query { student ( order_by : { age : desc } , where : { sex : { _eq : \"F\" } } ) { lname } }",
    "schemaId" : "college_3",
    "question" : "What are the last names of female students, ordered by age descending?"
  },
  {
    "query" : "query { faculty ( order_by : { lname : asc } , where : { building : { _eq : \"Barton\" } } ) { lname } }",
    "schemaId" : "college_3",
    "question" : "Find the last names of faculties in building Barton in alphabetic order."
  },
  {
    "query" : "query { faculty ( order_by : { lname : asc } , where : { building : { _eq : \"Barton\" } } ) { lname } }",
    "schemaId" : "college_3",
    "question" : "What are the last names of faculty in building Barton, sorted by last name?"
  },
  {
    "query" : "query { faculty ( order_by : { fname : asc } , where : { rank : { _eq : \"Professor\" } } ) { fname } }",
    "schemaId" : "college_3",
    "question" : "Find the first names of faculties of rank Professor in alphabetic order."
  },
  {
    "query" : "query { faculty ( order_by : { fname : asc } , where : { rank : { _eq : \"Professor\" } } ) { fname } }",
    "schemaId" : "college_3",
    "question" : "What are the first names for all faculty professors, ordered by first name?"
  },
  {
    "query" : "query { faculty ( where : { courses : { cname : { _eq : \"COMPUTER LITERACY\" } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "Find the first name and last name of the instructor of course that has course name"
  },
  {
    "query" : "query { faculty ( where : { courses : { cname : { _eq : \"COMPUTER LITERACY\" } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "What is the full name of the instructor who has a course named COMPUTER LITERACY?"
  },
  {
    "query" : "query { department ( where : { courses : { cname : { _eq : \"INTRODUCTION TO COMPUTER SCIENCE\" } } } ) { dname room } }",
    "schemaId" : "college_3",
    "question" : "Find the department name and room of the course INTRODUCTION TO COMPUTER SCIENCE."
  },
  {
    "query" : "query { department ( where : { courses : { cname : { _eq : \"INTRODUCTION TO COMPUTER SCIENCE\" } } } ) { dname room } }",
    "schemaId" : "college_3",
    "question" : "What are the department name and room for the course INTRODUCTION TO COMPUTER SCIENCE?"
  },
  {
    "query" : "query { student ( where : { enrolled_ins : { gradeconversion : { gradepoint : { _gte : 3.8 } } } } , distinct_on : fname ) { fname } }",
    "schemaId" : "college_3",
    "question" : "Find the distinct student first names of all students that have grade point at least 3.8 in one course."
  },
  {
    "query" : "query { student ( where : { enrolled_ins : { gradeconversion : { gradepoint : { _gte : 3.8 } } } } , distinct_on : fname ) { fname } }",
    "schemaId" : "college_3",
    "question" : "What are the distinct first names for students with a grade point of 3.8 or above in at least one course?"
  },
  {
    "query" : "query { faculty ( where : { member_ofs : { dno : { _eq : 520 } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "Find the full names of faculties who are members of department with department number 520."
  },
  {
    "query" : "query { faculty ( where : { member_ofs : { dno : { _eq : 520 } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "What are the full names of faculty members who are a part of department 520?"
  },
  {
    "query" : "query { student ( where : { minor_ins : { dno : { _eq : 140 } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "What are the first names and last names of the students that minor in the department with DNO 140."
  },
  {
    "query" : "query { student ( where : { minor_ins : { dno : { _eq : 140 } } } ) { fname lname } }",
    "schemaId" : "college_3",
    "question" : "What are the full names of students minoring in department 140?"
  },
  {
    "query" : "query { faculty ( where : { member_ofs : { department : { dname : { _eq : \"Computer Science\" } } } } ) { lname } }",
    "schemaId" : "college_3",
    "question" : "Find the last names of faculties who are members of computer science department."
  },
  {
    "query" : "query { faculty ( where : { member_ofs : { department : { dname : { _eq : \"Computer Science\" } } } } ) { lname } }",
    "schemaId" : "college_3",
    "question" : "What are the last names of faculty who are part of the computer science department?"
  },
  {
    "query" : "query { gradeconversion_aggregate ( where : { enrolled_ins : { student : { lname : { _eq : \"Smith\" } } } } ) { aggregate { avg { gradepoint } } } }",
    "schemaId" : "college_3",
    "question" : "Find the average grade point of student whose last name is Smith."
  },
  {
    "query" : "query { gradeconversion_aggregate ( where : { enrolled_ins : { student : { lname : { _eq : \"Smith\" } } } } ) { aggregate { avg { gradepoint } } } }",
    "schemaId" : "college_3",
    "question" : "What is the average gradepoint for students with the last name Smith?"
  },
  {
    "query" : "query { gradeconversion_aggregate ( where : { enrolled_ins : { student : { city_code : { _eq : \"NYC\" } } } } ) { aggregate { max { gradepoint } min { gradepoint } } } }",
    "schemaId" : "college_3",
    "question" : "What is the maximum and minimum grade point of students who live in NYC?"
  },
  {
    "query" : "query { gradeconversion_aggregate ( where : { enrolled_ins : { student : { city_code : { _eq : \"NYC\" } } } } ) { aggregate { max { gradepoint } min { gradepoint } } } }",
    "schemaId" : "college_3",
    "question" : "Give the maximum and minimum gradepoints for students living in NYC?"
  },
  {
    "query" : "query { department ( order_by : { mgr_start_date : asc } ) { dname } }",
    "schemaId" : "company_1",
    "question" : "List all department names ordered by their starting date."
  },
  {
    "query" : "query { dependent ( where : { relationship : { _eq : \"Spouse\" } } ) { dependent_name } }",
    "schemaId" : "company_1",
    "question" : "find all dependent names who have a spouse relation with some employee."
  },
  {
    "query" : "query { dependent_aggregate ( where : { sex : { _eq : \"F\" } } ) { aggregate { count } } }",
    "schemaId" : "company_1",
    "question" : "how many female dependents are there?"
  },
  {
    "query" : "query { department ( where : { dept_locations : { dlocation : { _eq : \"Houston\" } } } ) { dname } }",
    "schemaId" : "company_1",
    "question" : "Find the names of departments that are located in Houston."
  },
  {
    "query" : "query { employee ( where : { salary : { _gt : 30000 } } ) { fname lname } }",
    "schemaId" : "company_1",
    "question" : "Return the first names and last names of employees who earn more than 30000 in salary."
  },
  {
    "query" : "query { employee ( order_by : { bdate : asc } ) { fname lname address } }",
    "schemaId" : "company_1",
    "question" : "list the first and last names, and the addresses of all employees in the ascending order of their birth date."
  },
  {
    "query" : "query { company_aggregate ( where : { headquarters : { _eq : \"USA\" } } ) { aggregate { count } } }",
    "schemaId" : "company_employee",
    "question" : "How many companies are headquartered in the US?"
  },
  {
    "query" : "query { company ( order_by : { sales_in_billion : asc } ) { name } }",
    "schemaId" : "company_employee",
    "question" : "List the names of companies by ascending number of sales."
  },
  {
    "query" : "query { company { headquarters industry } }",
    "schemaId" : "company_employee",
    "question" : "What are the headquarters and industries of all companies?"
  },
  {
    "query" : "query { company ( where : { _or : [ { industry : { _eq : \"Banking\" } } , { industry : { _eq : \"Retailing\" } } ] } ) { name } }",
    "schemaId" : "company_employee",
    "question" : "Show the names of companies in the banking or retailing industry?"
  },
  {
    "query" : "query { company_aggregate { aggregate { max { market_value_in_billion } min { market_value_in_billion } } } }",
    "schemaId" : "company_employee",
    "question" : "What is the maximum and minimum market value of companies?"
  },
  {
    "query" : "query { company ( limit : 1 , order_by : { sales_in_billion : desc } ) { headquarters } }",
    "schemaId" : "company_employee",
    "question" : "What is the headquarter of the company with the largest sales?"
  },
  {
    "query" : "query { company { name employments { person { name } } } }",
    "schemaId" : "company_employee",
    "question" : "Show the names of companies and of employees."
  },
  {
    "query" : "query { company ( order_by : { employments_aggregate : { min : { year_working : asc } } } ) { name employments { person { name } } } }",
    "schemaId" : "company_employee",
    "question" : "Show names of companies and that of employees in descending order of number of years working for that employee."
  },
  {
    "query" : "query { company ( order_by : { sales_in_billion : desc , profits_in_billion : desc } , where : { sales_in_billion : { _gt : 200.0 } } ) { name } }",
    "schemaId" : "company_employee",
    "question" : "list the names of the companies with more than 200 sales in the descending order of sales and profits."
  },
  {
    "query" : "query { companies_aggregate { aggregate { count } } }",
    "schemaId" : "company_office",
    "question" : "How many companies are there?"
  },
  {
    "query" : "query { companies_aggregate { aggregate { count } } }",
    "schemaId" : "company_office",
    "question" : "Count the number of companies."
  },
  {
    "query" : "query { companies ( order_by : { market_value_billion : desc } ) { name } }",
    "schemaId" : "company_office",
    "question" : "List the names of companies in descending order of market value."
  },
  {
    "query" : "query { companies ( order_by : { market_value_billion : desc } ) { name } }",
    "schemaId" : "company_office",
    "question" : "Sort the company names in descending order of the company's market value."
  },
  {
    "query" : "query { companies ( where : { headquarters : { _neq : \"USA\" } } ) { name } }",
    "schemaId" : "company_office",
    "question" : "What are the names of companies whose headquarters are not \"USA\"?"
  },
  {
    "query" : "query { companies ( where : { headquarters : { _neq : \"USA\" } } ) { name } }",
    "schemaId" : "company_office",
    "question" : "Find the names of the companies whose headquarters are not located in \"USA\"."
  },
  {
    "query" : "query { companies ( order_by : { name : asc } ) { name assets_billion } }",
    "schemaId" : "company_office",
    "question" : "What are the name and assets of each company, sorted in ascending order of company name?"
  },
  {
    "query" : "query { companies ( order_by : { name : asc } ) { name assets_billion } }",
    "schemaId" : "company_office",
    "question" : "List the name and assets of each company in ascending order of company name."
  },
  {
    "query" : "query { companies_aggregate { aggregate { avg { profits_billion } } } }",
    "schemaId" : "company_office",
    "question" : "What are the average profits of companies?"
  },
  {
    "query" : "query { companies_aggregate { aggregate { avg { profits_billion } } } }",
    "schemaId" : "company_office",
    "question" : "Compute the average profits companies make."
  },
  {
    "query" : "query { companies_aggregate ( where : { industry : { _neq : \"Banking\" } } ) { aggregate { max { sales_billion } min { sales_billion } } } }",
    "schemaId" : "company_office",
    "question" : "What are the maximum and minimum sales of the companies whose industries are not \"Banking\"."
  },
  {
    "query" : "query { companies_aggregate ( where : { industry : { _neq : \"Banking\" } } ) { aggregate { max { sales_billion } min { sales_billion } } } }",
    "schemaId" : "company_office",
    "question" : "Find the maximum and minimum sales of the companies that are not in the \"Banking\" industry."
  },
  {
    "query" : "query { companies_aggregate { aggregate { count } } }",
    "schemaId" : "company_office",
    "question" : "How many different industries are the companies in?"
  },
  {
    "query" : "query { companies_aggregate { aggregate { count } } }",
    "schemaId" : "company_office",
    "question" : "Count the number of distinct company industries."
  },
  {
    "query" : "query { buildings ( order_by : { height : desc } ) { name } }",
    "schemaId" : "company_office",
    "question" : "List the names of buildings in descending order of building height."
  },
  {
    "query" : "query { buildings ( order_by : { height : desc } ) { name } }",
    "schemaId" : "company_office",
    "question" : "What are the names of buildings sorted in descending order of building height?"
  },
  {
    "query" : "query { buildings ( limit : 1 , order_by : { height : desc } ) { stories } }",
    "schemaId" : "company_office",
    "question" : "Find the stories of the building with the largest height."
  },
  {
    "query" : "query { buildings ( limit : 1 , order_by : { height : desc } ) { stories } }",
    "schemaId" : "company_office",
    "question" : "What is the stories of highest building?"
  },
  {
    "query" : "query { companies { name office_locations { building { name } } } }",
    "schemaId" : "company_office",
    "question" : "List the name of a building along with the name of a company whose office is in the building."
  },
  {
    "query" : "query { companies { name office_locations { building { name } } } }",
    "schemaId" : "company_office",
    "question" : "For each company, return the company name and the name of the building its office is located in."
  },
  {
    "query" : "query { buildings ( order_by : { stories : asc } , where : { status : { _eq : \"on-hold\" } } ) { name } }",
    "schemaId" : "company_office",
    "question" : "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories."
  },
  {
    "query" : "query { buildings ( order_by : { stories : asc } , where : { status : { _eq : \"on-hold\" } } ) { name } }",
    "schemaId" : "company_office",
    "question" : "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories."
  },
  {
    "query" : "query { companies_aggregate ( where : { _or : [ { industry : { _eq : \"Banking\" } } , { industry : { _eq : \"Conglomerate\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "company_office",
    "question" : "Find the number of companies whose industry is \"Banking\" or \"Conglomerate\","
  },
  {
    "query" : "query { companies_aggregate ( where : { _or : [ { industry : { _eq : \"Banking\" } } , { industry : { _eq : \"Conglomerate\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "company_office",
    "question" : "How many companies are in either \"Banking\" industry or \"Conglomerate\" industry?"
  },
  {
    "query" : "query { county_public_safety_aggregate { aggregate { count } } }",
    "schemaId" : "county_public_safety",
    "question" : "How many counties are there?"
  },
  {
    "query" : "query { county_public_safety_aggregate { aggregate { count } } }",
    "schemaId" : "county_public_safety",
    "question" : "Count the number of countries."
  },
  {
    "query" : "query { county_public_safety ( order_by : { population : desc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "List the names of counties in descending order of population."
  },
  {
    "query" : "query { county_public_safety ( order_by : { population : desc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the names of the counties of public safety, ordered by population descending?"
  },
  {
    "query" : "query { county_public_safety ( where : { location : { _neq : \"East\" } } , distinct_on : police_force ) { police_force } }",
    "schemaId" : "county_public_safety",
    "question" : "List the distinct police forces of counties whose location is not on east side."
  },
  {
    "query" : "query { county_public_safety ( where : { location : { _neq : \"East\" } } , distinct_on : police_force ) { police_force } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the different police forces of counties that are not located in the East?"
  },
  {
    "query" : "query { county_public_safety_aggregate { aggregate { min { crime_rate } max { crime_rate } } } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the minimum and maximum crime rate of counties?"
  },
  {
    "query" : "query { county_public_safety_aggregate { aggregate { min { crime_rate } max { crime_rate } } } }",
    "schemaId" : "county_public_safety",
    "question" : "Return the minimum and maximum crime rates across all counties."
  },
  {
    "query" : "query { county_public_safety ( order_by : { police_officers : asc } ) { crime_rate } }",
    "schemaId" : "county_public_safety",
    "question" : "Show the crime rates of counties in ascending order of number of police officers."
  },
  {
    "query" : "query { county_public_safety ( order_by : { police_officers : asc } ) { crime_rate } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the crime rates of counties sorted by number of offices ascending?"
  },
  {
    "query" : "query { city ( order_by : { name : asc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the names of cities in ascending alphabetical order?"
  },
  {
    "query" : "query { city ( order_by : { name : asc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "Return the names of cities, ordered alphabetically."
  },
  {
    "query" : "query { city ( where : { black : { _gt : 10.0 } } ) { hispanic } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the percentage of hispanics in cities with the black percentage higher than 10?"
  },
  {
    "query" : "query { city ( where : { black : { _gt : 10.0 } } ) { hispanic } }",
    "schemaId" : "county_public_safety",
    "question" : "Return the hispanic percentage for cities in which the black percentage is greater than 10."
  },
  {
    "query" : "query { county_public_safety ( limit : 1 , order_by : { population : desc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "List the name of the county with the largest population."
  },
  {
    "query" : "query { county_public_safety ( limit : 1 , order_by : { population : desc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "What is the name of the county with the greatest population?"
  },
  {
    "query" : "query { city ( limit : 5 , order_by : { white : desc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "List the names of the city with the top 5 white percentages."
  },
  {
    "query" : "query { city ( limit : 5 , order_by : { white : desc } ) { name } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the names of the five cities with the greatest proportion of white people?"
  },
  {
    "query" : "query { city { name county_public_safety { name } } }",
    "schemaId" : "county_public_safety",
    "question" : "Show names of cities and names of counties they are in."
  },
  {
    "query" : "query { city { name county_public_safety { name } } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the names of cities, as well as the names of the counties they correspond to?"
  },
  {
    "query" : "query { city { white county_public_safety { crime_rate } } }",
    "schemaId" : "county_public_safety",
    "question" : "Show white percentages of cities and the crime rates of counties they are in."
  },
  {
    "query" : "query { city { white county_public_safety { crime_rate } } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?"
  },
  {
    "query" : "query { county_public_safety ( where : { cities : { white : { _gt : 90.0 } } } ) { crime_rate } }",
    "schemaId" : "county_public_safety",
    "question" : "Show the crime rate of counties with a city having white percentage more than 90."
  },
  {
    "query" : "query { county_public_safety ( where : { cities : { white : { _gt : 90.0 } } } ) { crime_rate } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the crime rates of counties that contain cities that have white percentages of over 90?"
  },
  {
    "query" : "query { county_public_safety ( order_by : { population : desc } ) { case_burden } }",
    "schemaId" : "county_public_safety",
    "question" : "Show the case burden of counties in descending order of population."
  },
  {
    "query" : "query { county_public_safety ( order_by : { population : desc } ) { case_burden } }",
    "schemaId" : "county_public_safety",
    "question" : "What are the case burdens of counties, ordered descending by population?"
  },
  {
    "query" : "query { ref_document_status { document_status_code } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What document status codes do we have?"
  },
  {
    "query" : "query { ref_document_status ( where : { document_status_code : { _eq : \"working\" } } ) { document_status_description } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the description of document status code 'working'?"
  },
  {
    "query" : "query { ref_document_types { document_type_code } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What document type codes do we have?"
  },
  {
    "query" : "query { ref_document_types ( where : { document_type_code : { _eq : \"Paper\" } } ) { document_type_description } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the description of document type 'Paper'?"
  },
  {
    "query" : "query { ref_shipping_agents { shipping_agent_name } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What are the shipping agent names?"
  },
  {
    "query" : "query { ref_shipping_agents ( where : { shipping_agent_name : { _eq : \"UPS\" } } ) { shipping_agent_code } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the shipping agent code of shipping agent UPS?"
  },
  {
    "query" : "query { roles { role_code } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What are all role codes?"
  },
  {
    "query" : "query { roles ( where : { role_code : { _eq : \"ED\" } } ) { role_description } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the description of role code ED?"
  },
  {
    "query" : "query { employees_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "How many employees do we have?"
  },
  {
    "query" : "query { roles ( where : { employees : { employee_name : { _eq : \"Koby\" } } } ) { role_description } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the role of the employee named Koby?"
  },
  {
    "query" : "query { documents { document_id receipt_date } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "List all document ids and receipt dates of documents."
  },
  {
    "query" : "query { ref_document_status ( where : { documents : { document_id : { _eq : 1 } } } ) { document_status_description } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the document status description of the document with id 1?"
  },
  {
    "query" : "query { documents_aggregate ( where : { document_status_code : { _eq : \"done\" } } ) { aggregate { count } } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "How many documents have the status code done?"
  },
  {
    "query" : "query { documents ( where : { document_id : { _eq : 2 } } ) { document_type_code } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "List the document type code for the document with the id 2."
  },
  {
    "query" : "query { documents ( where : { _and : { document_type_code : { _eq : \"Paper\" } , document_status_code : { _eq : \"done\" } } } ) { document_id } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "List the document ids for any documents with the status code done and the type code paper."
  },
  {
    "query" : "query { ref_shipping_agents ( where : { documents : { document_id : { _eq : 2 } } } ) { shipping_agent_name } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the name of the shipping agent of the document with id 2?"
  },
  {
    "query" : "query { ref_shipping_agents_aggregate ( where : { shipping_agent_name : { _eq : \"USPS\" } } ) { aggregate { count } } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "How many documents were shipped by USPS?"
  },
  {
    "query" : "query { documents ( where : { document_id : { _eq : 3 } } ) { receipt_date } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the receipt date of the document with id 3?"
  },
  {
    "query" : "query { addresses ( where : { documents_maileds : { document_id : { _eq : 4 } } } ) { address_details } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What address was the document with id 4 mailed to?"
  },
  {
    "query" : "query { documents_mailed ( where : { document_id : { _eq : 7 } } ) { mailing_date } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is the mail date of the document with id 7?"
  },
  {
    "query" : "query { document_drafts ( where : { document_id : { _eq : 7 } } ) { draft_details } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "What is draft detail of the document with id 7?"
  },
  {
    "query" : "query { draft_copies_aggregate ( where : { document_id : { _eq : 2 } } ) { aggregate { count } } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "How many draft copies does the document with id 2 have?"
  },
  {
    "query" : "query { employees ( where : { circulation_histories : { document_id : { _eq : 1 } } } ) { employee_name } }",
    "schemaId" : "cre_Doc_Control_Systems",
    "question" : "List all employees in the circulation history of the document with id 1. List the employee's name."
  },
  {
    "query" : "query { ref_calendar_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "How many calendar items do we have?"
  },
  {
    "query" : "query { ref_calendar_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Count the number of all the calendar items."
  },
  {
    "query" : "query { ref_calendar { calendar_date day_number } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show all calendar dates and day Numbers."
  },
  {
    "query" : "query { ref_calendar { calendar_date day_number } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are all the calendar dates and day Numbers?"
  },
  {
    "query" : "query { ref_document_types_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the number of document types."
  },
  {
    "query" : "query { ref_document_types_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "How many document types are there?"
  },
  {
    "query" : "query { ref_document_types { document_type_code document_type_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "List all document type codes and document type names."
  },
  {
    "query" : "query { ref_document_types { document_type_code document_type_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are all the document type codes and document type names?"
  },
  {
    "query" : "query { ref_document_types ( where : { document_type_code : { _eq : \"RV\" } } ) { document_type_name document_type_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the name and description for document type code RV?"
  },
  {
    "query" : "query { ref_document_types ( where : { document_type_code : { _eq : \"RV\" } } ) { document_type_name document_type_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Give me the name and description of the document type code RV."
  },
  {
    "query" : "query { ref_document_types ( where : { document_type_name : { _eq : \"Paper\" } } ) { document_type_code } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the document type code for document type \"Paper\"?"
  },
  {
    "query" : "query { ref_document_types ( where : { document_type_name : { _eq : \"Paper\" } } ) { document_type_code } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Find the code of the document type \"Paper\"."
  },
  {
    "query" : "query { all_documents_aggregate ( where : { _or : [ { document_type_code : { _eq : \"CV\" } } , { document_type_code : { _eq : \"BK\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the number of documents with document type code CV or BK."
  },
  {
    "query" : "query { all_documents_aggregate ( where : { _or : [ { document_type_code : { _eq : \"CV\" } } , { document_type_code : { _eq : \"BK\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "How many documents have document type code CV or BK?"
  },
  {
    "query" : "query { all_documents ( where : { document_name : { _eq : \"Marry CV\" } } ) { date_stored } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the date when the document \"Marry CV\" was stored?"
  },
  {
    "query" : "query { all_documents ( where : { document_name : { _eq : \"Marry CV\" } } ) { date_stored } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "When was the document named \"Marry CV\" stored? Give me the date."
  },
  {
    "query" : "query { ref_calendar { day_number all_documents { date_stored } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the day Number and date of all the documents?"
  },
  {
    "query" : "query { ref_calendar { day_number all_documents { date_stored } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Return the day Number and stored date for all the documents."
  },
  {
    "query" : "query { ref_document_types ( where : { all_documents : { document_name : { _eq : \"How to read a book\" } } } ) { document_type_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the document type name for the document with name \"How to read a book\"?"
  },
  {
    "query" : "query { ref_document_types ( where : { all_documents : { document_name : { _eq : \"How to read a book\" } } } ) { document_type_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Find the document type name of the document named \"How to read a book\"."
  },
  {
    "query" : "query { ref_locations_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the number of locations."
  },
  {
    "query" : "query { ref_locations_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "How many locations are listed in the database?"
  },
  {
    "query" : "query { ref_locations { location_code location_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "List all location codes and location names."
  },
  {
    "query" : "query { ref_locations { location_code location_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are all the location codes and location names?"
  },
  {
    "query" : "query { ref_locations ( where : { location_code : { _eq : \"x\" } } ) { location_name location_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are the name and description for location code x?"
  },
  {
    "query" : "query { ref_locations ( where : { location_code : { _eq : \"x\" } } ) { location_name location_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Give me the name and description of the location with code x."
  },
  {
    "query" : "query { ref_locations ( where : { location_name : { _eq : \"Canada\" } } ) { location_code } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the location code for the country \"Canada\"?"
  },
  {
    "query" : "query { ref_locations ( where : { location_name : { _eq : \"Canada\" } } ) { location_code } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the location code of the country \"Canada\"."
  },
  {
    "query" : "query { roles_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "How many roles are there?"
  },
  {
    "query" : "query { roles_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Count the total number of roles listed."
  },
  {
    "query" : "query { roles { role_code role_name role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "List all role codes, role names, and role descriptions."
  },
  {
    "query" : "query { roles { role_code role_name role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are all the role codes, role names, and role descriptions?"
  },
  {
    "query" : "query { roles ( where : { role_code : { _eq : \"MG\" } } ) { role_name role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are the name and description for role code \"MG\"?"
  },
  {
    "query" : "query { roles ( where : { role_code : { _eq : \"MG\" } } ) { role_name role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Find the name and description of the role with code \"MG\"."
  },
  {
    "query" : "query { roles ( where : { role_name : { _eq : \"Proof Reader\" } } ) { role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the description for role name \"Proof Reader\"."
  },
  {
    "query" : "query { roles ( where : { role_name : { _eq : \"Proof Reader\" } } ) { role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the description of the role named \"Proof Reader\"?"
  },
  {
    "query" : "query { employees_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "How many employees do we have?"
  },
  {
    "query" : "query { employees_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Find the number of employees we have."
  },
  {
    "query" : "query { employees ( where : { employee_name : { _eq : \"Armani\" } } ) { employee_name role_code date_of_birth } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the name, role code, and date of birth for the employee with name 'Armani'."
  },
  {
    "query" : "query { employees ( where : { employee_name : { _eq : \"Armani\" } } ) { employee_name role_code date_of_birth } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are the name, role code, and date of birth of the employee named 'Armani'?"
  },
  {
    "query" : "query { employees ( where : { employee_name : { _eq : \"Ebba\" } } ) { employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the id for the employee called Ebba?"
  },
  {
    "query" : "query { employees ( where : { employee_name : { _eq : \"Ebba\" } } ) { employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the id of the employee named Ebba."
  },
  {
    "query" : "query { employees ( where : { role_code : { _eq : \"HR\" } } ) { employee_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the names of all the employees with role \"HR\"."
  },
  {
    "query" : "query { employees ( where : { role_code : { _eq : \"HR\" } } ) { employee_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Which employees have the role with code \"HR\"? Find their names."
  },
  {
    "query" : "query { roles ( where : { employees : { employee_name : { _eq : \"Ebba\" } } } ) { role_name role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the role name and role description for employee called Ebba?"
  },
  {
    "query" : "query { roles ( where : { employees : { employee_name : { _eq : \"Ebba\" } } } ) { role_name role_description } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the name and description of the role played by the employee named Ebba."
  },
  {
    "query" : "query { employees ( where : { role : { role_name : { _eq : \"Editor\" } } } ) { employee_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the names of employees with role name Editor."
  },
  {
    "query" : "query { employees ( where : { role : { role_name : { _eq : \"Editor\" } } } ) { employee_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Find the names of all the employees whose the role name is \"Editor\"."
  },
  {
    "query" : "query { employees ( where : { _or : [ { role : { role_name : { _eq : \"Human Resource\" } } } , { role : { role_name : { _eq : \"Manager\" } } } ] } ) { employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the employee ids for all employees with role name \"Human Resource\" or \"Manager\"."
  },
  {
    "query" : "query { employees ( where : { _or : [ { role : { role_name : { _eq : \"Human Resource\" } } } , { role : { role_name : { _eq : \"Manager\" } } } ] } ) { employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are the employee ids of the employees whose role name is \"Human Resource\" or \"Manager\"?"
  },
  {
    "query" : "query { document_locations ( distinct_on : location_code ) { location_code } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are the different location codes for documents?"
  },
  {
    "query" : "query { document_locations ( distinct_on : location_code ) { location_code } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Give me all the distinct location codes for documents."
  },
  {
    "query" : "query { ref_locations ( where : { document_locations : { all_document : { document_name : { _eq : \"Robin CV\" } } } } ) { location_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the location name for document \"Robin CV\"."
  },
  {
    "query" : "query { ref_locations ( where : { document_locations : { all_document : { document_name : { _eq : \"Robin CV\" } } } } ) { location_name } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is the location name of the document \"Robin CV\"?"
  },
  {
    "query" : "query { document_locations { location_code date_in_location_from date_in_locaton_to } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the location code, the starting date and ending data in that location for all the documents."
  },
  {
    "query" : "query { document_locations { location_code date_in_location_from date_in_locaton_to } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are each document's location code, and starting date and ending data in that location?"
  },
  {
    "query" : "query { document_locations ( where : { all_document : { document_name : { _eq : \"Robin CV\" } } } ) { date_in_location_from date_in_locaton_to } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?"
  },
  {
    "query" : "query { document_locations ( where : { all_document : { document_name : { _eq : \"Robin CV\" } } } ) { date_in_location_from date_in_locaton_to } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Find the starting date and ending data in location for the document named \"Robin CV\"."
  },
  {
    "query" : "query { documents_to_be_destroyed ( distinct_on : destruction_authorised_by_employee_id ) { destruction_authorised_by_employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the ids of all employees who have authorized destruction."
  },
  {
    "query" : "query { documents_to_be_destroyed ( distinct_on : destruction_authorised_by_employee_id ) { destruction_authorised_by_employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are the ids of all the employees who authorize document destruction?"
  },
  {
    "query" : "query { documents_to_be_destroyed ( distinct_on : destroyed_by_employee_id ) { destroyed_by_employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "Show the ids of all employees who have destroyed a document."
  },
  {
    "query" : "query { documents_to_be_destroyed ( distinct_on : destroyed_by_employee_id ) { destroyed_by_employee_id } }",
    "schemaId" : "cre_Doc_Tracking_DB",
    "question" : "What are the ids of all the employees who have destroyed documents?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "How many accounts do we have?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Count the number of accounts."
  },
  {
    "query" : "query { accounts { account_id account_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show all account ids and account details."
  },
  {
    "query" : "query { accounts { account_id account_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the ids and details of all accounts?"
  },
  {
    "query" : "query { statements_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "How many statements do we have?"
  },
  {
    "query" : "query { statements_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Count the number of statements."
  },
  {
    "query" : "query { statements { statement_id statement_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "List all statement ids and statement details."
  },
  {
    "query" : "query { statements { statement_id statement_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the ids and details of all statements?"
  },
  {
    "query" : "query { accounts { statement_id account_details statement { statement_details } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show statement id, statement detail, account detail for accounts."
  },
  {
    "query" : "query { accounts { statement_id account_details statement { statement_details } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the statement ids, statement details, and account details, for all accounts?"
  },
  {
    "query" : "query { documents_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show the number of documents."
  },
  {
    "query" : "query { documents_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Count the number of documents."
  },
  {
    "query" : "query { documents ( where : { _or : [ { document_name : { _eq : \"Noel CV\" } } , { document_name : { _eq : \"King Book\" } } ] } ) { document_type_code document_name document_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "List the document type code, document name, and document description for the document with name 'Noel CV' or name 'King Book'."
  },
  {
    "query" : "query { documents ( where : { _or : [ { document_name : { _eq : \"Noel CV\" } } , { document_name : { _eq : \"King Book\" } } ] } ) { document_type_code document_name document_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the type come, name, and description of the document that has either the name 'Noel CV' or 'King Book'?"
  },
  {
    "query" : "query { documents { document_id document_name } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show the ids and names of all documents."
  },
  {
    "query" : "query { documents { document_id document_name } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the ids and names for each of the documents?"
  },
  {
    "query" : "query { documents ( where : { document_type_code : { _eq : \"BK\" } } ) { document_name document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Find names and ids of all documents with document type code BK."
  },
  {
    "query" : "query { documents ( where : { document_type_code : { _eq : \"BK\" } } ) { document_name document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the names and ids of documents that have the type code BK?"
  },
  {
    "query" : "query { documents ( where : { project : { project_details : { _eq : \"Graph Database project\" } } } ) { document_name document_date } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show the document name and the document date for all documents on project with details 'Graph Database project'."
  },
  {
    "query" : "query { documents ( where : { project : { project_details : { _eq : \"Graph Database project\" } } } ) { document_name document_date } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the names and dates for documents corresponding to project that has the details 'Graph Database project'?"
  },
  {
    "query" : "query { statements ( where : { statement_details : { _eq : \"Private Project\" } } ) { statement_details document { document_name } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show the statement detail and the corresponding document name for the statement with detail 'Private Project'."
  },
  {
    "query" : "query { statements ( where : { statement_details : { _eq : \"Private Project\" } } ) { statement_details document { document_name } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?"
  },
  {
    "query" : "query { ref_document_types { document_type_code document_type_name document_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show all document type codes, document type names, document type descriptions."
  },
  {
    "query" : "query { ref_document_types { document_type_code document_type_name document_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the codes, names, and descriptions of the different document types?"
  },
  {
    "query" : "query { ref_document_types ( where : { document_type_name : { _eq : \"Film\" } } ) { document_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What is the document type description for document type named Film?"
  },
  {
    "query" : "query { ref_document_types ( where : { document_type_name : { _eq : \"Film\" } } ) { document_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Return the description of the document type name 'Film'."
  },
  {
    "query" : "query { ref_document_types { document_type_name document_type_description documents { document_date } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What is the document type name and the document type description and creation date for all the documents?"
  },
  {
    "query" : "query { ref_document_types { document_type_name document_type_description documents { document_date } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Return the type name, type description, and date of creation for each document."
  },
  {
    "query" : "query { projects_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show the number of projects."
  },
  {
    "query" : "query { projects_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "How many projects are there?"
  },
  {
    "query" : "query { projects { project_id project_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "List ids and details for all projects."
  },
  {
    "query" : "query { projects { project_id project_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the ids and details for each project?"
  },
  {
    "query" : "query { projects ( where : { documents : { document_name : { _eq : \"King Book\" } } } ) { project_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What is the project detail for the project with document \"King Book\"?"
  },
  {
    "query" : "query { projects ( where : { documents : { document_name : { _eq : \"King Book\" } } } ) { project_details } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Give the details of the project with the document name 'King Book'."
  },
  {
    "query" : "query { ref_budget_codes_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "How many budget types do we have?"
  },
  {
    "query" : "query { ref_budget_codes_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Count the number of budget codes."
  },
  {
    "query" : "query { ref_budget_codes { budget_type_code budget_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "List all budget type codes and descriptions."
  },
  {
    "query" : "query { ref_budget_codes { budget_type_code budget_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the type codes and descriptions of each budget type?"
  },
  {
    "query" : "query { ref_budget_codes ( where : { budget_type_code : { _eq : \"ORG\" } } ) { budget_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What is the description for the budget type with code ORG?"
  },
  {
    "query" : "query { ref_budget_codes ( where : { budget_type_code : { _eq : \"ORG\" } } ) { budget_type_description } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Return the description of the budget type that has the code ORG."
  },
  {
    "query" : "query { documents_with_expenses_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "How many documents have expenses?"
  },
  {
    "query" : "query { documents_with_expenses_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Count the number of documents with expenses."
  },
  {
    "query" : "query { documents_with_expenses ( where : { budget_type_code : { _eq : \"SF\" } } ) { document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the document ids for the budget type code 'SF'?"
  },
  {
    "query" : "query { documents_with_expenses ( where : { budget_type_code : { _eq : \"SF\" } } ) { document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Give the ids of documents with expenses that have the budget code 'SF'."
  },
  {
    "query" : "query { ref_budget_codes { budget_type_code budget_type_description documents_with_expenses { document_id } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show the budget type code and description and the corresponding document id."
  },
  {
    "query" : "query { ref_budget_codes { budget_type_code budget_type_description documents_with_expenses { document_id } } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Return the budget type codes, budget type descriptions and document ids for documents with expenses."
  },
  {
    "query" : "query { documents_with_expenses ( where : { ref_budget_code : { budget_type_description : { _eq : \"Government\" } } } ) { document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Show ids for all documents with budget types described as 'Government'."
  },
  {
    "query" : "query { documents_with_expenses ( where : { ref_budget_code : { budget_type_description : { _eq : \"Government\" } } } ) { document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Give the ids for documents that have the budget description 'Government'."
  },
  {
    "query" : "query { documents ( where : { document_name : { _like : \"%s%\" } } ) { document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "What are the ids of documents with letter 's' in the name with any expense budgets."
  },
  {
    "query" : "query { documents ( where : { document_name : { _like : \"%s%\" } } ) { document_id } }",
    "schemaId" : "cre_Docs_and_Epenses",
    "question" : "Give the ids of documents that have expenses and contain the letter s in their names."
  },
  {
    "query" : "query { bookings_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "How many bookings do we have?"
  },
  {
    "query" : "query { bookings_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Count the total number of bookings made."
  },
  {
    "query" : "query { bookings { order_date } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "List the order dates of all the bookings."
  },
  {
    "query" : "query { bookings { order_date } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What is the order date of each booking?"
  },
  {
    "query" : "query { bookings { planned_delivery_date actual_delivery_date } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Show all the planned delivery dates and actual delivery dates of bookings."
  },
  {
    "query" : "query { bookings { planned_delivery_date actual_delivery_date } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the planned delivery date and actual delivery date for each booking?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "How many customers do we have?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Count the number of customers recorded."
  },
  {
    "query" : "query { customers ( where : { customer_name : { _eq : \"Harold\" } } ) { customer_phone customer_email_address } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the phone and email for customer Harold?"
  },
  {
    "query" : "query { customers ( where : { customer_name : { _eq : \"Harold\" } } ) { customer_phone customer_email_address } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Find the phone number and email address of customer \"Harold\"."
  },
  {
    "query" : "query { drama_workshop_groups { store_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Show all the Store_Name of drama workshop groups."
  },
  {
    "query" : "query { drama_workshop_groups { store_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the store names of drama workshop groups?"
  },
  {
    "query" : "query { invoices_aggregate { aggregate { min { order_quantity } avg { order_quantity } max { order_quantity } } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Show the minimum, average, maximum order quantity of all invoices."
  },
  {
    "query" : "query { invoices_aggregate { aggregate { min { order_quantity } avg { order_quantity } max { order_quantity } } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the minimum, average, and maximum quantities ordered? Check all the invoices."
  },
  {
    "query" : "query { invoices ( distinct_on : payment_method_code ) { payment_method_code } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the distinct payment method codes in all the invoices?"
  },
  {
    "query" : "query { invoices ( distinct_on : payment_method_code ) { payment_method_code } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Show me the distinct payment method codes from the invoice record."
  },
  {
    "query" : "query { marketing_regions ( where : { marketing_region_name : { _eq : \"China\" } } ) { marketing_region_descriptrion } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What is the description of the marketing region China?"
  },
  {
    "query" : "query { marketing_regions ( where : { marketing_region_name : { _eq : \"China\" } } ) { marketing_region_descriptrion } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Find the marketing region description of China?"
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } ) { product_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What is the name of the most expensive product?"
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } ) { product_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Tell me the name of the most pricy product."
  },
  {
    "query" : "query { products ( order_by : { product_price : asc } ) { product_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "List all product names in ascending order of price."
  },
  {
    "query" : "query { products ( order_by : { product_price : asc } ) { product_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Sort the names of products in ascending order of their price."
  },
  {
    "query" : "query { performers ( where : { customer_name : { _eq : \"Ashley\" } } ) { customer_phone } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What is the phone number of the performer Ashley?"
  },
  {
    "query" : "query { performers ( where : { customer_name : { _eq : \"Ashley\" } } ) { customer_phone } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Find the phone number of performer \"Ashley\"."
  },
  {
    "query" : "query { marketing_regions ( where : { stores : { store_name : { _eq : \"Rob Dinning\" } } } ) { marketing_region_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What is the name of the marketing region that the store Rob Dinning belongs to?"
  },
  {
    "query" : "query { marketing_regions ( where : { stores : { store_name : { _eq : \"Rob Dinning\" } } } ) { marketing_region_name } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Return the name of the marketing region the store Rob Dinning is located in."
  },
  {
    "query" : "query { ref_service_types ( where : { services : { product_price : { _gt : 100 } } } ) { service_type_description } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the descriptions of the service types with product price above 100?"
  },
  {
    "query" : "query { ref_service_types ( where : { services : { product_price : { _gt : 100 } } } ) { service_type_description } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Give me the descriptions of the service types that cost more than 100."
  },
  {
    "query" : "query { drama_workshop_groups { store_phone store_email_address } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the phones and emails of workshop groups in which services are performed?"
  },
  {
    "query" : "query { drama_workshop_groups { store_phone store_email_address } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Give me all the phone numbers and email addresses of the workshop groups where services are performed."
  },
  {
    "query" : "query { drama_workshop_groups ( where : { services : { product_name : { _eq : \"film\" } } } ) { store_phone store_email_address } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the names of workshop groups in which services with product name \"film\" are performed?"
  },
  {
    "query" : "query { drama_workshop_groups ( where : { services : { product_name : { _eq : \"film\" } } } ) { store_phone store_email_address } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Find the names of the workshop groups where services with product name \"film\" are performed."
  },
  {
    "query" : "query { customer_orders ( where : { order_items : { order_quantity : { _eq : \"1\" } } } ) { actual_delivery_date } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What are the actual delivery dates of orders with quantity 1?"
  },
  {
    "query" : "query { customer_orders ( where : { order_items : { order_quantity : { _eq : \"1\" } } } ) { actual_delivery_date } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "List the actual delivery date for all the orders with quantity 1"
  },
  {
    "query" : "query { drama_workshop_groups_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "How many distinct currency codes are there for all drama workshop groups?"
  },
  {
    "query" : "query { drama_workshop_groups_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Find the number of distinct currency codes used in drama workshop groups."
  },
  {
    "query" : "query { invoices_aggregate ( where : { payment_method_code : { _eq : \"MasterCard\" } } ) { aggregate { avg { order_quantity } } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "What is the average quantities ordered with payment method code \"MasterCard\" on invoices?"
  },
  {
    "query" : "query { invoices_aggregate ( where : { payment_method_code : { _eq : \"MasterCard\" } } ) { aggregate { avg { order_quantity } } } }",
    "schemaId" : "cre_Drama_Workshop_Groups",
    "question" : "Check the invoices record and compute the average quantities ordered with the payment method \"MasterCard\"."
  },
  {
    "query" : "query { hotels_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "How many available hotels are there in total?"
  },
  {
    "query" : "query { hotels_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the total number of available hotels."
  },
  {
    "query" : "query { hotels { price_range } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the price ranges of hotels?"
  },
  {
    "query" : "query { hotels { price_range } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Tell me the price ranges for all the hotels."
  },
  {
    "query" : "query { locations ( distinct_on : location_name ) { location_name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show all distinct location names."
  },
  {
    "query" : "query { locations ( distinct_on : location_name ) { location_name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the distinct location names?"
  },
  {
    "query" : "query { staff { name other_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show the names and details of all the staff members."
  },
  {
    "query" : "query { staff { name other_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What is the name and detail of each staff member?"
  },
  {
    "query" : "query { visitors { tourist_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show details of all visitors."
  },
  {
    "query" : "query { visitors { tourist_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What is the detail of each visitor?"
  },
  {
    "query" : "query { hotels ( where : { star_rating_code : { _eq : \"5\" } } ) { price_range } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show the price ranges of hotels with 5 star ratings."
  },
  {
    "query" : "query { hotels ( where : { star_rating_code : { _eq : \"5\" } } ) { price_range } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the price ranges of five star hotels?"
  },
  {
    "query" : "query { hotels_aggregate ( where : { _and : { pets_allowed_yn : { _eq : \"1\" } , star_rating_code : { _eq : \"5\" } } } ) { aggregate { avg { price_range } } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show the average price range of hotels that have 5 star ratings and allow pets."
  },
  {
    "query" : "query { hotels_aggregate ( where : { _and : { star_rating_code : { _eq : \"5\" } , pets_allowed_yn : { _eq : \"1\" } } } ) { aggregate { avg { price_range } } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What is the average price range of five star hotels that allow pets?"
  },
  {
    "query" : "query { locations ( where : { location_name : { _eq : \"UK Gallery\" } } ) { address } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What is the address of the location \"UK Gallery\"?"
  },
  {
    "query" : "query { locations ( where : { location_name : { _eq : \"UK Gallery\" } } ) { address } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the address of the location named \"UK Gallery\"."
  },
  {
    "query" : "query { locations ( where : { location_name : { _eq : \"UK Gallery\" } } ) { other_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What is the detail of the location UK Gallery?"
  },
  {
    "query" : "query { locations ( where : { location_name : { _eq : \"UK Gallery\" } } ) { other_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Return the detail of the location named \"UK Gallery\"."
  },
  {
    "query" : "query { locations ( where : { location_name : { _like : \"%film%\" } } ) { location_name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Which location names contain the word \"film\"?"
  },
  {
    "query" : "query { locations ( where : { location_name : { _like : \"%film%\" } } ) { location_name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find all the locations whose names contain the word \"film\"."
  },
  {
    "query" : "query { photos_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "How many distinct names are associated with all the photos?"
  },
  {
    "query" : "query { photos_aggregate { aggregate { count } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Count the number of distinct names associated with the photos."
  },
  {
    "query" : "query { visits ( distinct_on : visit_date ) { visit_date } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the distinct visit dates?"
  },
  {
    "query" : "query { visits ( distinct_on : visit_date ) { visit_date } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find all the distinct visit dates."
  },
  {
    "query" : "query { tourist_attractions ( where : { how_to_get_there : { _eq : \"bus\" } } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the names of the tourist attractions that can be accessed by bus?"
  },
  {
    "query" : "query { tourist_attractions ( where : { how_to_get_there : { _eq : \"bus\" } } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Which tourist attractions can we get to by bus? Tell me the names of the attractions."
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { how_to_get_there : { _eq : \"bus\" } } , { how_to_get_there : { _eq : \"walk\" } } ] } ) { name opening_hours } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the names and opening hours of the tourist attractions that can be accessed by bus or walk?"
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { how_to_get_there : { _eq : \"bus\" } } , { how_to_get_there : { _eq : \"walk\" } } ] } ) { name opening_hours } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the names and opening hours of the tourist attractions that we get to by bus or walk."
  },
  {
    "query" : "query { ref_hotel_star_ratings ( where : { hotels : { price_range : { _gt : 10000.0 } } } ) { star_rating_description } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the star rating descriptions of the hotels with price above 10000?"
  },
  {
    "query" : "query { ref_hotel_star_ratings ( where : { hotels : { price_range : { _gt : 10000.0 } } } ) { star_rating_description } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Give me the star rating descriptions of the hotels that cost more than 10000."
  },
  {
    "query" : "query { museums { museum_details tourist_attraction { opening_hours } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the details and opening hours of the museums?"
  },
  {
    "query" : "query { museums { museum_details tourist_attraction { opening_hours } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Give me the detail and opening hour for each museum."
  },
  {
    "query" : "query { tourist_attractions ( where : { photos : { name : { _eq : \"game1\" } } } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What is the name of the tourist attraction that is associated with the photo \"game1\"?"
  },
  {
    "query" : "query { tourist_attractions ( where : { photos : { name : { _eq : \"game1\" } } } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Which tourist attraction is associated with the photo \"game1\"? Return its name."
  },
  {
    "query" : "query { photos ( where : { tourist_attraction : { name : { _eq : \"film festival\" } } } ) { name description } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the names and descriptions of the photos taken at the tourist attraction \"film festival\"?"
  },
  {
    "query" : "query { photos ( where : { tourist_attraction : { name : { _eq : \"film festival\" } } } ) { name description } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the names and descriptions of the photos taken at the tourist attraction called \"film festival\"."
  },
  {
    "query" : "query { royal_family { royal_family_details tourist_attraction { how_to_get_there } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the details and ways to get to tourist attractions related to royal family?"
  },
  {
    "query" : "query { royal_family { royal_family_details tourist_attraction { how_to_get_there } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Which tourist attractions are related to royal family? Tell me their details and how we can get there."
  },
  {
    "query" : "query { shops ( where : { tourist_attraction : { how_to_get_there : { _eq : \"walk\" } } } ) { shop_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the details of the shops that can be accessed by walk?"
  },
  {
    "query" : "query { shops ( where : { tourist_attraction : { how_to_get_there : { _eq : \"walk\" } } } ) { shop_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the details of the shops that can be reached by walk."
  },
  {
    "query" : "query { staff ( where : { tourist_attraction : { name : { _eq : \"US museum\" } } } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What is the name of the staff that is in charge of the attraction named \"US museum\"?"
  },
  {
    "query" : "query { staff ( where : { tourist_attraction : { name : { _eq : \"US museum\" } } } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Tell me the name of the staff in charge of the attraction called \"US museum\"."
  },
  {
    "query" : "query { street_markets ( where : { _or : [ { tourist_attraction : { how_to_get_there : { _eq : \"walk\" } } } , { tourist_attraction : { how_to_get_there : { _eq : \"bus\" } } } ] } ) { market_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the details of the markets that can be accessed by walk or bus?"
  },
  {
    "query" : "query { street_markets ( where : { _or : [ { tourist_attraction : { how_to_get_there : { _eq : \"walk\" } } } , { tourist_attraction : { how_to_get_there : { _eq : \"bus\" } } } ] } ) { market_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the details of all the markets that are accessible by walk or bus."
  },
  {
    "query" : "query { visits ( where : { visitor : { tourist_details : { _eq : \"Vincent\" } } } ) { visit_date visit_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the visit date and details of the visitor whose detail is 'Vincent'?"
  },
  {
    "query" : "query { visits ( where : { visitor : { tourist_details : { _eq : \"Vincent\" } } } ) { visit_date visit_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the visit date and details of the tourist whose detail is 'Vincent'"
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { visits : { tourist_attraction : { visits : { visitor : { tourist_details : { _eq : \"Vincent\" } } } } } } , { visits : { tourist_attraction : { visits : { visitor : { tourist_details : { _eq : \"Vivian\" } } } } } } ] } ) { name visits { visit_date } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?"
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { visits : { tourist_attraction : { visits : { visitor : { tourist_details : { _eq : \"Vincent\" } } } } } } , { visits : { tourist_attraction : { visits : { visitor : { tourist_details : { _eq : \"Vivian\" } } } } } } ] } ) { name visits { visit_date } } }",
    "schemaId" : "cre_Theme_park",
    "question" : "For each tourist attraction, return its name and the date when the tourists named Vincent or Vivian visited there."
  },
  {
    "query" : "query { hotels ( order_by : { price_range : asc } ) { hotel_id star_rating_code } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show the id and star rating of each hotel, ordered by its price from low to high."
  },
  {
    "query" : "query { hotels ( order_by : { price_range : asc } ) { hotel_id star_rating_code } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the id and star rating of each hotel and sort them in increasing order of price."
  },
  {
    "query" : "query { hotels ( limit : 3 , order_by : { price_range : desc } ) { other_hotel_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show the details of the top 3 most expensive hotels."
  },
  {
    "query" : "query { hotels ( limit : 3 , order_by : { price_range : desc } ) { other_hotel_details } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the details of the three most expensive hotels?"
  },
  {
    "query" : "query { hotels ( limit : 3 , order_by : { price_range : asc } ) { other_hotel_details star_rating_code } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Show the details and star ratings of the 3 least expensive hotels."
  },
  {
    "query" : "query { hotels ( limit : 3 , order_by : { price_range : asc } ) { other_hotel_details star_rating_code } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the details and star ratings of the three hotels with the lowest price ranges?"
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { location : { address : { _eq : \"660 Shea Crescent\" } } } , { how_to_get_there : { _eq : \"walk\" } } ] } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the names of tourist attractions that can be reached by walk or is at address 660 Shea Crescent?"
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { location : { address : { _eq : \"660 Shea Crescent\" } } } , { how_to_get_there : { _eq : \"walk\" } } ] } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the names of the tourist attractions that is either accessible by walk or at address 660 Shea Crescent."
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { location : { address : { _eq : \"254 Ottilie Junction\" } } } , { how_to_get_there : { _eq : \"bus\" } } ] } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "What are the names of tourist attractions that can be reached by bus or is at address 254 Ottilie Junction?"
  },
  {
    "query" : "query { tourist_attractions ( where : { _or : [ { location : { address : { _eq : \"254 Ottilie Junction\" } } } , { how_to_get_there : { _eq : \"bus\" } } ] } ) { name } }",
    "schemaId" : "cre_Theme_park",
    "question" : "Find the names of the tourist attractions that is either accessible by bus or at address 254 Ottilie Junction."
  },
  {
    "query" : "query { campuses ( where : { county : { _eq : \"Los Angeles\" } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "Report the name of all campuses in Los Angeles county."
  },
  {
    "query" : "query { campuses ( where : { county : { _eq : \"Los Angeles\" } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campuses are located in the county of Los Angeles?"
  },
  {
    "query" : "query { campuses ( where : { location : { _eq : \"Chico\" } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What are the names of all campuses located at Chico?"
  },
  {
    "query" : "query { campuses ( where : { location : { _eq : \"Chico\" } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campuses are located in Chico?"
  },
  {
    "query" : "query { campuses ( where : { year : { _eq : 1958 } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "Find all the campuses opened in 1958."
  },
  {
    "query" : "query { campuses ( where : { year : { _eq : 1958 } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What are the campuses that opened in 1958?"
  },
  {
    "query" : "query { campuses ( where : { year : { _lt : 1800 } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "Find the name of the campuses opened before 1800."
  },
  {
    "query" : "query { campuses ( where : { year : { _lt : 1800 } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campuses opened before 1800?"
  },
  {
    "query" : "query { campuses ( where : { _and : { year : { _gte : 1935 , _lte : 1939 } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "Which campus was opened between 1935 and 1939?"
  },
  {
    "query" : "query { campuses ( where : { _and : { year : { _gte : 1935 , _lte : 1939 } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campuses opened between 1935 and 1939?"
  },
  {
    "query" : "query { csu_fees ( where : { _and : { campusByCampus : { campus : { _eq : \"San Jose State University\" } } , year : { _eq : 1996 } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "What is the campus fee of \"San Jose State University\" in year 1996?"
  },
  {
    "query" : "query { csu_fees ( where : { _and : { year : { _eq : 1996 } , campusByCampus : { campus : { _eq : \"San Jose State University\" } } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "What is the campus fee for San Jose State University in 1996?"
  },
  {
    "query" : "query { csu_fees ( where : { _and : { year : { _eq : 1996 } , campusByCampus : { campus : { _eq : \"San Francisco State University\" } } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "What is the campus fee of \"San Francisco State University\" in year 1996?"
  },
  {
    "query" : "query { csu_fees ( where : { _and : { year : { _eq : 1996 } , campusByCampus : { campus : { _eq : \"San Francisco State University\" } } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "What is the campus fee for San Francisco State University in 1996?"
  },
  {
    "query" : "query { campuses ( where : { _and : { year : { _gt : 1950 } , county : { _eq : \"Los Angeles\" } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "Which university is in Los Angeles county and opened after 1950?"
  },
  {
    "query" : "query { campuses ( where : { _and : { county : { _eq : \"Los Angeles\" } , year : { _gt : 1950 } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campuses are located in Los Angeles county and opened after 1950?"
  },
  {
    "query" : "query { campuses ( limit : 1 , order_by : { faculties_aggregate : { max : { faculty : desc } } } , where : { faculties : { year : { _eq : 2003 } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "Which campus has the most faculties in year 2003?"
  },
  {
    "query" : "query { campuses ( limit : 1 , order_by : { faculties_aggregate : { max : { faculty : desc } } } , where : { faculties : { year : { _eq : 2003 } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campus has the most faculties in 2003?"
  },
  {
    "query" : "query { csu_fees_aggregate ( where : { year : { _eq : 1996 } } ) { aggregate { avg { campusfee } } } }",
    "schemaId" : "csu_1",
    "question" : "Find the average fee on a CSU campus in 1996"
  },
  {
    "query" : "query { csu_fees_aggregate ( where : { year : { _eq : 1996 } } ) { aggregate { avg { campusfee } } } }",
    "schemaId" : "csu_1",
    "question" : "What is the average fee for a CSU campus in the year of 1996?"
  },
  {
    "query" : "query { csu_fees_aggregate ( where : { year : { _eq : 2005 } } ) { aggregate { avg { campusfee } } } }",
    "schemaId" : "csu_1",
    "question" : "What is the average fee on a CSU campus in 2005?"
  },
  {
    "query" : "query { csu_fees_aggregate ( where : { year : { _eq : 2005 } } ) { aggregate { avg { campusfee } } } }",
    "schemaId" : "csu_1",
    "question" : "What is the average fee for a CSU campus in the year of 2005?"
  },
  {
    "query" : "query { campuses ( where : { _and : { enrollments : { year : { _eq : 1956 } , fte_ay : { _gt : 200 } , totalenrollment_ay : { _gt : 400 } } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?"
  },
  {
    "query" : "query { campuses ( where : { _and : { enrollments : { year : { _eq : 1956 } , totalenrollment_ay : { _gt : 400 } , fte_ay : { _gt : 200 } } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campus started in year 1956, has more than 200 full time students, and more than 400 students enrolled?"
  },
  {
    "query" : "query { campuses_aggregate ( where : { county : { _eq : \"Los Angeles\" } } ) { aggregate { count } } }",
    "schemaId" : "csu_1",
    "question" : "How many campuses are there in Los Angeles county?"
  },
  {
    "query" : "query { campuses_aggregate ( where : { county : { _eq : \"Los Angeles\" } } ) { aggregate { count } } }",
    "schemaId" : "csu_1",
    "question" : "How many campuses exist are in the county of LA?"
  },
  {
    "query" : "query { campuses ( where : { county : { _eq : \"Los Angeles\" } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "List the campuses in Los Angeles county."
  },
  {
    "query" : "query { campuses ( where : { county : { _eq : \"Los Angeles\" } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What campuses are in Los Angeles county?"
  },
  {
    "query" : "query { degrees ( where : { _and : { year : { _eq : 2000 } , campusByCampus : { campus : { _eq : \"San Jose State University\" } } } } ) { degrees } }",
    "schemaId" : "csu_1",
    "question" : "How many degrees were conferred in \"San Jose State University\" in 2000?"
  },
  {
    "query" : "query { degrees ( where : { _and : { campusByCampus : { campus : { _eq : \"San Jose State University\" } } , year : { _eq : 2000 } } } ) { degrees } }",
    "schemaId" : "csu_1",
    "question" : "How many degrees were conferred at San Jose State University in 2000?"
  },
  {
    "query" : "query { degrees ( where : { _and : { campusByCampus : { campus : { _eq : \"San Francisco State University\" } } , year : { _eq : 2001 } } } ) { degrees } }",
    "schemaId" : "csu_1",
    "question" : "What are the degrees conferred in \"San Francisco State University\" in 2001."
  },
  {
    "query" : "query { degrees ( where : { _and : { campusByCampus : { campus : { _eq : \"San Francisco State University\" } } , year : { _eq : 2001 } } } ) { degrees } }",
    "schemaId" : "csu_1",
    "question" : "What degrees were conferred in San Francisco State University in the year 2001?"
  },
  {
    "query" : "query { faculty_aggregate ( where : { year : { _eq : 2002 } } ) { aggregate { sum { faculty } } } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty is there in total in the year of 2002?"
  },
  {
    "query" : "query { faculty_aggregate ( where : { year : { _eq : 2002 } } ) { aggregate { sum { faculty } } } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty, in total, are there in the year 2002?"
  },
  {
    "query" : "query { faculty ( where : { _and : { year : { _eq : 2002 } , campusByCampus : { campus : { _eq : \"Long Beach State University\" } } } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "What is the number of faculty lines in campus \"Long Beach State University\" in 2002?"
  },
  {
    "query" : "query { faculty ( where : { _and : { year : { _eq : 2002 } , campusByCampus : { campus : { _eq : \"Long Beach State University\" } } } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "What is the number of faculty at Long Beach State University in 2002?"
  },
  {
    "query" : "query { faculty ( where : { _and : { campusByCampus : { campus : { _eq : \"San Francisco State University\" } } , year : { _eq : 2004 } } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty lines are there in \"San Francisco State University\" in year 2004?"
  },
  {
    "query" : "query { faculty ( where : { _and : { year : { _eq : 2004 } , campusByCampus : { campus : { _eq : \"San Francisco State University\" } } } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty lines are there at San Francisco State University in 2004?"
  },
  {
    "query" : "query { campuses ( where : { _and : { faculties : { faculty : { _gte : 600.0 , _lte : 1000.0 } } , year : { _eq : 2004 } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "List the campus that have between 600 and 1000 faculty lines in year 2004."
  },
  {
    "query" : "query { campuses ( where : { _and : { year : { _eq : 2004 } , faculties : { faculty : { _gte : 600.0 , _lte : 1000.0 } } } } ) { campus } }",
    "schemaId" : "csu_1",
    "question" : "What are the campuses that had between 600 and 1000 faculty members in 2004?"
  },
  {
    "query" : "query { faculty ( limit : 1 , order_by : { campusByCampus : { degrees_aggregate : { max : { degrees : desc_nulls_last } } } } , where : { year : { _eq : 2002 } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty lines are there in the university that conferred the most number of degrees in year 2002?"
  },
  {
    "query" : "query { faculty ( limit : 1 , order_by : { campusByCampus : { degrees_aggregate : { max : { degrees : desc_nulls_last } } } } , where : { year : { _eq : 2002 } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty members did the university that conferred the most degrees in 2002 have?"
  },
  {
    "query" : "query { faculty ( limit : 1 , order_by : { campusByCampus : { degrees_aggregate : { min : { degrees : asc } } } } , where : { year : { _eq : 2001 } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty lines are there in the university that conferred the least number of degrees in year 2001?"
  },
  {
    "query" : "query { faculty ( limit : 1 , order_by : { campusByCampus : { degrees_aggregate : { min : { degrees : asc } } } } , where : { year : { _eq : 2001 } } ) { faculty } }",
    "schemaId" : "csu_1",
    "question" : "How many faculty members are at the university that gave the least number of degrees in 2001?"
  },
  {
    "query" : "query { discipline_enrollments_aggregate ( where : { _and : { campusByCampus : { campus : { _eq : \"San Jose State University\" } } , year : { _eq : 2004 } } } ) { aggregate { sum { undergraduate } } } }",
    "schemaId" : "csu_1",
    "question" : "How many undergraduates are there in \"San Jose State University\" in year 2004?"
  },
  {
    "query" : "query { discipline_enrollments_aggregate ( where : { _and : { campusByCampus : { campus : { _eq : \"San Jose State University\" } } , year : { _eq : 2004 } } } ) { aggregate { sum { undergraduate } } } }",
    "schemaId" : "csu_1",
    "question" : "How many undergraduates are there at San Jose State"
  },
  {
    "query" : "query { discipline_enrollments_aggregate ( where : { _and : { year : { _eq : 2004 } , campusByCampus : { campus : { _eq : \"San Francisco State University\" } } } } ) { aggregate { sum { graduate } } } }",
    "schemaId" : "csu_1",
    "question" : "What is the number of graduates in \"San Francisco State University\" in year 2004?"
  },
  {
    "query" : "query { discipline_enrollments_aggregate ( where : { _and : { year : { _eq : 2004 } , campusByCampus : { campus : { _eq : \"San Francisco State University\" } } } } ) { aggregate { sum { graduate } } } }",
    "schemaId" : "csu_1",
    "question" : "How many people graduated from San Francisco State University in 2004?"
  },
  {
    "query" : "query { csu_fees ( where : { _and : { campusByCampus : { campus : { _eq : \"San Francisco State University\" } } , year : { _eq : 2000 } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "What is the campus fee of \"San Francisco State University\" in year 2000?"
  },
  {
    "query" : "query { csu_fees ( where : { _and : { year : { _eq : 2000 } , campusByCampus : { campus : { _eq : \"San Francisco State University\" } } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "In the year 2000, what is the campus fee for San Francisco State University?"
  },
  {
    "query" : "query { csu_fees ( where : { _and : { campusByCampus : { campus : { _eq : \"San Jose State University\" } } , year : { _eq : 2000 } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "Find the campus fee of \"San Jose State University\" in year 2000."
  },
  {
    "query" : "query { csu_fees ( where : { _and : { year : { _eq : 2000 } , campusByCampus : { campus : { _eq : \"San Jose State University\" } } } } ) { campusfee } }",
    "schemaId" : "csu_1",
    "question" : "What is the campus fee in the year 2000 for San Jose State University?"
  },
  {
    "query" : "query { campuses_aggregate { aggregate { count } } }",
    "schemaId" : "csu_1",
    "question" : "How many CSU campuses are there?"
  },
  {
    "query" : "query { campuses_aggregate { aggregate { count } } }",
    "schemaId" : "csu_1",
    "question" : "What is the total number of campuses?"
  },
  {
    "query" : "query { book_club_aggregate { aggregate { count } } }",
    "schemaId" : "culture_company",
    "question" : "How many book clubs are there?"
  },
  {
    "query" : "query { book_club_aggregate { aggregate { count } } }",
    "schemaId" : "culture_company",
    "question" : "Count the number of book clubs."
  },
  {
    "query" : "query { book_club ( where : { year : { _gt : 1989 } } ) { book_title author_or_editor } }",
    "schemaId" : "culture_company",
    "question" : "show the titles, and authors or editors for all books made after the year 1989."
  },
  {
    "query" : "query { book_club ( where : { year : { _gt : 1989 } } ) { book_title author_or_editor } }",
    "schemaId" : "culture_company",
    "question" : "What are the titles and authors or editors that correspond to books made after 1989?"
  },
  {
    "query" : "query { book_club ( distinct_on : publisher ) { publisher } }",
    "schemaId" : "culture_company",
    "question" : "Show all distinct publishers for books."
  },
  {
    "query" : "query { book_club ( distinct_on : publisher ) { publisher } }",
    "schemaId" : "culture_company",
    "question" : "What are all the different book publishers?"
  },
  {
    "query" : "query { book_club ( order_by : { year : desc } ) { year book_title publisher } }",
    "schemaId" : "culture_company",
    "question" : "Show the years, book titles, and publishers for all books, in descending order by year."
  },
  {
    "query" : "query { book_club ( order_by : { year : desc } ) { year book_title publisher } }",
    "schemaId" : "culture_company",
    "question" : "What are the years, titles, and publishers for all books, ordered by year descending?"
  },
  {
    "query" : "query { movie ( order_by : { budget_million : asc } ) { title year director } }",
    "schemaId" : "culture_company",
    "question" : "Show all movie titles, years, and directors, ordered by budget."
  },
  {
    "query" : "query { movie ( order_by : { budget_million : asc } ) { title year director } }",
    "schemaId" : "culture_company",
    "question" : "What are the titles, years, and directors of all movies, ordered by budget in millions?"
  },
  {
    "query" : "query { movie_aggregate { aggregate { count } } }",
    "schemaId" : "culture_company",
    "question" : "How many movie directors are there?"
  },
  {
    "query" : "query { movie_aggregate { aggregate { count } } }",
    "schemaId" : "culture_company",
    "question" : "Count the number of different directors."
  },
  {
    "query" : "query { movie ( limit : 1 , order_by : { gross_worldwide : desc } , where : { year : { _lte : 2000 } } ) { title director } }",
    "schemaId" : "culture_company",
    "question" : "What is the title and director for the movie with highest worldwide gross in the year 2000 or before?"
  },
  {
    "query" : "query { movie ( limit : 1 , order_by : { gross_worldwide : desc } , where : { year : { _lte : 2000 } } ) { title director } }",
    "schemaId" : "culture_company",
    "question" : "Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross."
  },
  {
    "query" : "query { movie ( where : { _or : [ { year : { _eq : 1999 } } , { year : { _eq : 2000 } } ] } ) { director } }",
    "schemaId" : "culture_company",
    "question" : "Show all director names who have a movie in the year 1999 or 2000."
  },
  {
    "query" : "query { movie ( where : { _or : [ { year : { _eq : 1999 } } , { year : { _eq : 2000 } } ] } ) { director } }",
    "schemaId" : "culture_company",
    "question" : "Which directors had a movie in either 1999 or 2000?"
  },
  {
    "query" : "query { movie_aggregate ( where : { year : { _lt : 2000 } } ) { aggregate { avg { budget_million } max { budget_million } min { budget_million } } } }",
    "schemaId" : "culture_company",
    "question" : "What is the average, maximum, and minimum budget for all movies before 2000."
  },
  {
    "query" : "query { movie_aggregate ( where : { year : { _lt : 2000 } } ) { aggregate { avg { budget_million } max { budget_million } min { budget_million } } } }",
    "schemaId" : "culture_company",
    "question" : "Return the average, maximum, and minimum budgets in millions for movies made before the year 2000."
  },
  {
    "query" : "query { culture_company ( where : { book_club : { publisher : { _eq : \"Alyson\" } } } ) { company_name } }",
    "schemaId" : "culture_company",
    "question" : "List all company names with a book published by Alyson."
  },
  {
    "query" : "query { culture_company ( where : { book_club : { publisher : { _eq : \"Alyson\" } } } ) { company_name } }",
    "schemaId" : "culture_company",
    "question" : "What are all the company names that have a book published by Alyson?"
  },
  {
    "query" : "query { movie ( where : { culture_company : { incorporated_in : { _eq : \"China\" } } } ) { title culture_company { book_club { book_title } } } }",
    "schemaId" : "culture_company",
    "question" : "Show the movie titles and book titles for all companies in China."
  },
  {
    "query" : "query { movie ( where : { culture_company : { incorporated_in : { _eq : \"China\" } } } ) { title culture_company { book_club { book_title } } } }",
    "schemaId" : "culture_company",
    "question" : "What are the titles of movies and books corresponding to companies incorporated in China?"
  },
  {
    "query" : "query { culture_company ( where : { movie : { year : { _eq : 1999 } } } ) { company_name } }",
    "schemaId" : "culture_company",
    "question" : "Show all company names with a movie directed in year 1999."
  },
  {
    "query" : "query { culture_company ( where : { movie : { year : { _eq : 1999 } } } ) { company_name } }",
    "schemaId" : "culture_company",
    "question" : "What are all company names that have a corresponding movie directed in the year 1999?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customer_complaints",
    "question" : "How many customers are there?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customer_complaints",
    "question" : "Count the number of customers."
  },
  {
    "query" : "query { customers ( order_by : { email_address : asc , phone_number : asc } ) { email_address phone_number } }",
    "schemaId" : "customer_complaints",
    "question" : "Find the emails and phone numbers of all the customers, ordered by email address and phone number."
  },
  {
    "query" : "query { customers ( order_by : { email_address : asc , phone_number : asc } ) { email_address phone_number } }",
    "schemaId" : "customer_complaints",
    "question" : "What are the emails and phone numbers of all customers, sorted by email address and phone number?"
  },
  {
    "query" : "query { customers ( limit : 1 , order_by : { complaints_aggregate : { min : { date_complaint_raised : desc_nulls_last } } } ) { phone_number } }",
    "schemaId" : "customer_complaints",
    "question" : "What is the phone number of the customer who has filed the most recent complaint?"
  },
  {
    "query" : "query { customers ( limit : 1 , order_by : { complaints_aggregate : { min : { date_complaint_raised : desc_nulls_last } } } ) { phone_number } }",
    "schemaId" : "customer_complaints",
    "question" : "Return the phone number of the customer who filed the complaint that was raised most recently."
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"Chocolate\" } } ) { product_description } }",
    "schemaId" : "customer_complaints",
    "question" : "What is the description of the product named \"Chocolate\"?"
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"Chocolate\" } } ) { product_description } }",
    "schemaId" : "customer_complaints",
    "question" : "Return the description of the product called \"Chocolate\"."
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } ) { product_name product_category_code } }",
    "schemaId" : "customer_complaints",
    "question" : "Find the name and category of the most expensive product."
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } ) { product_name product_category_code } }",
    "schemaId" : "customer_complaints",
    "question" : "What is the name and category code of the product with the highest price?"
  },
  {
    "query" : "query { staff ( where : { email_address : { _like : \"%wrau%\" } } ) { last_name } }",
    "schemaId" : "customer_complaints",
    "question" : "Find the last name of the staff whose email address contains \"wrau\"."
  },
  {
    "query" : "query { staff ( where : { email_address : { _like : \"%wrau%\" } } ) { last_name } }",
    "schemaId" : "customer_complaints",
    "question" : "What are the last names of staff with email addressed containing the substring \"wrau\"?"
  },
  {
    "query" : "query { complaints ( order_by : { date_complaint_raised : asc } , limit : 1 ) { staff { last_name } } }",
    "schemaId" : "customer_complaints",
    "question" : "What is the last name of the staff who has handled the first ever complaint?"
  },
  {
    "query" : "query { complaints ( order_by : { date_complaint_raised : asc } , limit : 1 ) { staff { last_name } } }",
    "schemaId" : "customer_complaints",
    "question" : "Return the last name of the staff member who handled the complaint with the earliest date raised."
  },
  {
    "query" : "query { complaints_aggregate { aggregate { count } } }",
    "schemaId" : "customer_complaints",
    "question" : "How many distinct complaint type codes are there in the database?"
  },
  {
    "query" : "query { complaints_aggregate { aggregate { count } } }",
    "schemaId" : "customer_complaints",
    "question" : "Count the number of different complaint type codes."
  },
  {
    "query" : "query { customers ( where : { email_address : { _eq : \"vbogisich@example.org\" } } ) { address_line_1 address_line_2 } }",
    "schemaId" : "customer_complaints",
    "question" : "Find the address line 1 and 2 of the customer with email \"vbogisich@example.org\"."
  },
  {
    "query" : "query { customers ( where : { email_address : { _eq : \"vbogisich@example.org\" } } ) { address_line_1 address_line_2 } }",
    "schemaId" : "customer_complaints",
    "question" : "What are lines 1 and 2 of the addressed of the customer with the email \"vbogisich@example.org\"?"
  },
  {
    "query" : "query { actual_orders ( where : { order_status_code : { _eq : \"Success\" } } ) { actual_order_id } }",
    "schemaId" : "customer_deliveries",
    "question" : "Find the ids of orders whose status is 'Success'."
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customer_deliveries",
    "question" : "Find the number of customers in total."
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customer_deliveries",
    "question" : "How many different payment methods are there?"
  },
  {
    "query" : "query { trucks ( order_by : { truck_licence_number : asc } ) { truck_details } }",
    "schemaId" : "customer_deliveries",
    "question" : "Show the details of all trucks in the order of their license number."
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } ) { product_name } }",
    "schemaId" : "customer_deliveries",
    "question" : "Find the name of the most expensive product."
  },
  {
    "query" : "query { customers ( where : { payment_method : { _eq : \"Visa\" } } ) { customer_email customer_name } }",
    "schemaId" : "customer_deliveries",
    "question" : "List the names and emails of customers who payed by Visa card."
  },
  {
    "query" : "query { customers ( order_by : { date_became_customer : asc } ) { customer_name customer_phone customer_email } }",
    "schemaId" : "customer_deliveries",
    "question" : "List the names, phone numbers, and emails of all customers sorted by their dates of becoming customers."
  },
  {
    "query" : "query { customers ( limit : 5 , order_by : { date_became_customer : asc } ) { customer_name } }",
    "schemaId" : "customer_deliveries",
    "question" : "Find the name of the first 5 customers."
  },
  {
    "query" : "query { delivery_routes ( order_by : { route_name : asc } ) { route_name } }",
    "schemaId" : "customer_deliveries",
    "question" : "List the names of all routes in alphabetic order."
  },
  {
    "query" : "query { customers { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the name of all customers."
  },
  {
    "query" : "query { customers { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are the names of all the customers?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "How many customers are there?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Return the total number of distinct customers."
  },
  {
    "query" : "query { order_items_aggregate { aggregate { avg { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What is the average amount of items ordered in each order?"
  },
  {
    "query" : "query { order_items_aggregate { aggregate { avg { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the average order quantity per order."
  },
  {
    "query" : "query { customers ( where : { payment_method : { _eq : \"Cash\" } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are the names of customers who use payment method \"Cash\"?"
  },
  {
    "query" : "query { customers ( where : { payment_method : { _eq : \"Cash\" } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Which customers use \"Cash\" for payment method? Return the customer names."
  },
  {
    "query" : "query { customers ( where : { customer_id : { _gte : 10 , _lte : 20 } } ) { date_became_customer } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the \"date became customers\" of the customers whose ID is between 10 and 20."
  },
  {
    "query" : "query { customers ( where : { customer_id : { _gte : 10 , _lte : 20 } } ) { date_became_customer } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are the dates when customers with ids between 10 and 20 became customers?"
  },
  {
    "query" : "query { customers ( distinct_on : payment_method ) { payment_method } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are all the payment methods?"
  },
  {
    "query" : "query { customers ( distinct_on : payment_method ) { payment_method } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Return all the distinct payment methods used by customers."
  },
  {
    "query" : "query { products ( distinct_on : product_details ) { product_details } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are the details of all products?"
  },
  {
    "query" : "query { products ( distinct_on : product_details ) { product_details } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Return the the details of all products."
  },
  {
    "query" : "query { customers ( where : { customer_name : { _like : \"%Alex%\" } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the name of all customers whose name contains \"Alex\"."
  },
  {
    "query" : "query { customers ( where : { customer_name : { _like : \"%Alex%\" } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Which customer's name contains \"Alex\"? Find the full name."
  },
  {
    "query" : "query { products ( where : { _or : [ { product_details : { _like : \"%Latte%\" } } , { product_details : { _like : \"%Americano%\" } } ] } ) { product_details } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the detail of products whose detail contains the word \"Latte\" or the word \"Americano\""
  },
  {
    "query" : "query { products ( where : { _or : [ { product_details : { _like : \"%Latte%\" } } , { product_details : { _like : \"%Americano%\" } } ] } ) { product_details } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Which product's detail contains the word \"Latte\" or \"Americano\"? Return the full detail."
  },
  {
    "query" : "query { addresses ( where : { customer_addresses : { customer : { customer_name : { _eq : \"Maudie Kertzmann\" } } } } ) { address_content } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What is the address content of the customer named \"Maudie Kertzmann\"?"
  },
  {
    "query" : "query { addresses ( where : { customer_addresses : { customer : { customer_name : { _eq : \"Maudie Kertzmann\" } } } } ) { address_content } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Return the address content for the customer whose name is \"Maudie Kertzmann\"."
  },
  {
    "query" : "query { addresses ( distinct_on : city ) { city } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Retrieve the list of all cities."
  },
  {
    "query" : "query { addresses ( distinct_on : city ) { city } }",
    "schemaId" : "customers_and_addresses",
    "question" : "List all the distinct cities"
  },
  {
    "query" : "query { addresses ( where : { zip_postcode : { _eq : \"255\" } } ) { city } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the city with post code 255."
  },
  {
    "query" : "query { addresses ( where : { zip_postcode : { _eq : \"255\" } } ) { city } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Which city is post code 255 located in?"
  },
  {
    "query" : "query { addresses ( where : { zip_postcode : { _like : \"4%\" } } ) { state_province_county country } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the state and country of all cities with post code starting with 4."
  },
  {
    "query" : "query { addresses ( where : { zip_postcode : { _like : \"4%\" } } ) { state_province_county country } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are the state and country of all the cities that have post codes starting with 4.\\"
  },
  {
    "query" : "query { customer_contact_channels ( where : { customer : { customer_name : { _eq : \"Tillman Ernser\" } } } , distinct_on : channel_code ) { channel_code } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Which contact channel has been used by the customer with name \"Tillman Ernser\"?"
  },
  {
    "query" : "query { customer_contact_channels ( where : { customer : { customer_name : { _eq : \"Tillman Ernser\" } } } , distinct_on : channel_code ) { channel_code } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the contact channel code that was used by the customer named \"Tillman Ernser\"."
  },
  {
    "query" : "query { customer_contact_channels_aggregate ( where : { customer : { customer_name : { _eq : \"Tillman Ernser\" } } } ) { aggregate { max { active_to_date } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?"
  },
  {
    "query" : "query { customer_contact_channels_aggregate ( where : { customer : { customer_name : { _eq : \"Tillman Ernser\" } } } ) { aggregate { max { active_to_date } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\"."
  },
  {
    "query" : "query { customers ( where : { customer_contact_channels : { channel_code : { _eq : \"Email\" } } } ) { customer_name customer_contact_channels { active_from_date } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the name and active date of the customer that use email as the contact channel."
  },
  {
    "query" : "query { customers ( where : { customer_contact_channels : { channel_code : { _eq : \"Email\" } } } ) { customer_name customer_contact_channels { active_from_date } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are the name and active date of the customers whose contact channel code is email?"
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { customer : { customer_name : { _eq : \"Rodrick Heaney\" } } } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "How many types of products have Rodrick Heaney bought in total?"
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { customer : { customer_name : { _eq : \"Rodrick Heaney\" } } } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the number of distinct products Rodrick Heaney has bought so far."
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { customer : { customer_name : { _eq : \"Rodrick Heaney\" } } } } ) { aggregate { sum { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What is the total quantity of products purchased by \"Rodrick Heaney\"?"
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { customer : { customer_name : { _eq : \"Rodrick Heaney\" } } } } ) { aggregate { sum { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Tell me the total quantity of products bought by the customer called \"Rodrick Heaney\"."
  },
  {
    "query" : "query { customer_orders_aggregate ( where : { order_status : { _eq : \"Cancelled\" } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "How many customers have at least one order with status \"Cancelled\"?"
  },
  {
    "query" : "query { customer_orders_aggregate ( where : { order_status : { _eq : \"Cancelled\" } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Return the number of customers who have at least one order with \"Cancelled\" status."
  },
  {
    "query" : "query { customer_orders_aggregate ( where : { order_details : { _eq : \"Second time\" } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "How many orders have detail \"Second time\"?"
  },
  {
    "query" : "query { customer_orders_aggregate ( where : { order_details : { _eq : \"Second time\" } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Tell me the number of orders with \"Second time\" as order detail."
  },
  {
    "query" : "query { customers ( where : { customer_orders : { order_status : { _eq : \"Delivered\" } } } ) { customer_name customer_orders { order_date } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the customer name and date of the orders that have the status \"Delivered\"."
  },
  {
    "query" : "query { customers ( where : { customer_orders : { order_status : { _eq : \"Delivered\" } } } ) { customer_name customer_orders { order_date } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What are the customer name and date of the orders whose status is \"Delivered\"."
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { order_status : { _eq : \"Cancelled\" } } } ) { aggregate { sum { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What is the total number of products that are in orders with status \"Cancelled\"?"
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { order_status : { _eq : \"Cancelled\" } } } ) { aggregate { sum { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the total quantity of products associated with the orders in the \"Cancelled\" status."
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { order_date : { _lt : \"2018-03-17 07:13:53\" } } } ) { aggregate { sum { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the total amount of products ordered before 2018-03-17 07:13:53."
  },
  {
    "query" : "query { order_items_aggregate ( where : { customer_order : { order_date : { _lt : \"2018-03-17 07:13:53\" } } } ) { aggregate { sum { order_quantity } } } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What is the total amount of products purchased before 2018-03-17 07:13:53?"
  },
  {
    "query" : "query { customers ( limit : 1 , order_by : { customer_orders_aggregate : { max : { order_date : desc_nulls_last } } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Who made the latest order?"
  },
  {
    "query" : "query { customers ( limit : 1 , order_by : { customer_orders_aggregate : { max : { order_date : desc_nulls_last } } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the name of the customer who made an order most recently."
  },
  {
    "query" : "query { customers ( where : { payment_method : { _neq : \"Cash\" } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "Find the name of customers who did not pay with Cash."
  },
  {
    "query" : "query { customers ( where : { payment_method : { _neq : \"Cash\" } } ) { customer_name } }",
    "schemaId" : "customers_and_addresses",
    "question" : "What is the name of customers who do not use Cash as payment method."
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show the number of accounts."
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "How many accounts are there?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "How many customers have opened an account?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Count the number of customers who have an account."
  },
  {
    "query" : "query { accounts { account_id date_account_opened account_name other_account_details } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show the id, the date of account opened, the account name, and other account detail for all accounts."
  },
  {
    "query" : "query { accounts { account_id date_account_opened account_name other_account_details } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What are the ids, date opened, name, and other details for all accounts?"
  },
  {
    "query" : "query { accounts ( where : { customer : { customer_first_name : { _eq : \"Meaghan\" } } } ) { account_id date_account_opened account_name other_account_details } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show the id, the account name, and other account details for all accounts by the customer with first name 'Meaghan'."
  },
  {
    "query" : "query { accounts ( where : { customer : { customer_first_name : { _eq : \"Meaghan\" } } } ) { account_id date_account_opened account_name other_account_details } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What are the ids, names, dates of opening, and other details for accounts corresponding to the customer with the first name \"Meaghan\"?"
  },
  {
    "query" : "query { accounts ( where : { _and : { customer : { customer_first_name : { _eq : \"Meaghan\" } , customer_last_name : { _eq : \"Keeling\" } } } } ) { account_name other_account_details } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling."
  },
  {
    "query" : "query { accounts ( where : { _and : { customer : { customer_last_name : { _eq : \"Keeling\" } , customer_first_name : { _eq : \"Meaghan\" } } } } ) { account_name other_account_details } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What are the names and other details for accounts corresponding to the customer named Meaghan Keeling?"
  },
  {
    "query" : "query { customers ( where : { accounts : { account_name : { _eq : \"900\" } } } ) { customer_first_name customer_last_name } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show the first name and last name for the customer with account name 900."
  },
  {
    "query" : "query { customers ( where : { accounts : { account_name : { _eq : \"900\" } } } ) { customer_first_name customer_last_name } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What are the full names of customers with the account name 900?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show the number of customers."
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Count the number of customers."
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "How many transactions do we have?"
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Count the number of transactions."
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "How many transaction does each account have? Show the number and account id."
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Count the number of financial transactions that correspond to each account id."
  },
  {
    "query" : "query { financial_transactions_aggregate ( where : { account : { account_name : { _eq : \"337\" } } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "How many transaction does account with name 337 have?"
  },
  {
    "query" : "query { financial_transactions_aggregate ( where : { account : { account_name : { _eq : \"337\" } } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Count the number of financial transactions that the account with the name 337 has."
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { avg { transaction_amount } min { transaction_amount } max { transaction_amount } sum { transaction_amount } } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What is the average, minimum, maximum, and total transaction amount?"
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { avg { transaction_amount } min { transaction_amount } max { transaction_amount } sum { transaction_amount } } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Return the average, minimum, maximum, and total transaction amounts."
  },
  {
    "query" : "query { products ( distinct_on : product_size ) { product_size } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show all product sizes."
  },
  {
    "query" : "query { products ( distinct_on : product_size ) { product_size } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What are the different product sizes?"
  },
  {
    "query" : "query { products ( distinct_on : product_color ) { product_color } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show all product colors."
  },
  {
    "query" : "query { products ( distinct_on : product_color ) { product_color } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What are the different product colors?"
  },
  {
    "query" : "query { invoices_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "How many invoices do we have?"
  },
  {
    "query" : "query { invoices_aggregate { aggregate { count } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Count the number of invoices."
  },
  {
    "query" : "query { invoices { invoice_date order_id order { order_details } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "Show invoice dates and order id and details for all invoices."
  },
  {
    "query" : "query { invoices { invoice_date order_id order { order_details } } }",
    "schemaId" : "customers_and_invoices",
    "question" : "What are the invoice dates, order ids, and order details for all invoices?"
  },
  {
    "query" : "query { addresses_aggregate ( where : { country : { _eq : \"USA\" } } ) { aggregate { count } } }",
    "schemaId" : "customers_and_products_contacts",
    "question" : "How many addresses are there in country USA?"
  },
  {
    "query" : "query { addresses ( distinct_on : city ) { city } }",
    "schemaId" : "customers_and_products_contacts",
    "question" : "Show all distinct cities in the address record."
  },
  {
    "query" : "query { customers ( order_by : { customer_number : desc } ) { customer_name customer_phone payment_method_code } }",
    "schemaId" : "customers_and_products_contacts",
    "question" : "Show the name, phone, and payment method code for all customers in descending order of customer number."
  },
  {
    "query" : "query { products_aggregate { aggregate { min { product_price } max { product_price } avg { product_price } } } }",
    "schemaId" : "customers_and_products_contacts",
    "question" : "Show the minimum, maximum, average price for all products."
  },
  {
    "query" : "query { products ( where : { _or : [ { product_price : { _gt : 1000.0 } } , { product_price : { _lt : 500.0 } } ] } ) { product_type_code product_name } }",
    "schemaId" : "customers_and_products_contacts",
    "question" : "Show the product type and name for the products with price higher than 1000 or lower than 500."
  },
  {
    "query" : "query { premises_aggregate { aggregate { count } } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "How many premises are there?"
  },
  {
    "query" : "query { premises ( distinct_on : premises_type ) { premises_type } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "What are all the distinct premise types?"
  },
  {
    "query" : "query { premises ( order_by : { premises_type : asc } ) { premises_type premise_details } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "Find the types and details for all premises and order by the premise type."
  },
  {
    "query" : "query { customers ( where : { mailshot_customers : { outcome_code : { _eq : \"No Response\" } } } ) { customer_name customer_phone } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "Show the name and phone for customers with a mailshot with outcome code 'No Response'."
  },
  {
    "query" : "query { premises { premises_type customer_addresses { address_type_code } } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "Show the premise type and address type code for all customer addresses."
  },
  {
    "query" : "query { customer_addresses ( distinct_on : address_type_code ) { address_type_code } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "What are the distinct address type codes for all customer addresses?"
  },
  {
    "query" : "query { customer_orders ( where : { _or : [ { order_status_code : { _eq : \"Cancelled\" } } , { order_status_code : { _eq : \"Paid\" } } ] } ) { order_shipping_charges customer_id } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "Show the shipping charge and customer id for customer orders with order status Cancelled or Paid."
  },
  {
    "query" : "query { customers ( where : { _and : { customer_orders : { order_status_code : { _eq : \"Paid\" } , shipping_method_code : { _eq : \"FedEx\" } } } } ) { customer_name } }",
    "schemaId" : "customers_campaigns_ecommerce",
    "question" : "Show the names of customers having an order with shipping method FedEx and order status Paid."
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many accounts do we have?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Count the number of accounts."
  },
  {
    "query" : "query { accounts { account_id customer_id account_name } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show ids, customer ids, names for all accounts."
  },
  {
    "query" : "query { accounts { account_id customer_id account_name } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What are the account ids, customer ids, and account names for all the accounts?"
  },
  {
    "query" : "query { accounts ( where : { account_name : { _eq : \"338\" } } ) { other_account_details } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show other account details for account with name 338."
  },
  {
    "query" : "query { accounts ( where : { account_name : { _eq : \"338\" } } ) { other_account_details } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What are the other account details for the account with the name 338?"
  },
  {
    "query" : "query { customers ( where : { accounts : { account_name : { _eq : \"162\" } } } ) { customer_first_name customer_last_name customer_phone } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What is the first name, last name, and phone of the customer with account name 162?"
  },
  {
    "query" : "query { customers ( where : { accounts : { account_name : { _eq : \"162\" } } } ) { customer_first_name customer_last_name customer_phone } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Give the full name and phone of the customer who has the account name 162."
  },
  {
    "query" : "query { accounts_aggregate ( where : { _and : { customer : { customer_first_name : { _eq : \"Art\" } , customer_last_name : { _eq : \"Turcotte\" } } } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many accounts does the customer with first name Art and last name Turcotte have?"
  },
  {
    "query" : "query { accounts_aggregate ( where : { _and : { customer : { customer_first_name : { _eq : \"Art\" } , customer_last_name : { _eq : \"Turcotte\" } } } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Return the number of accounts that the customer with the first name Art and last name Turcotte has."
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many customers have an account?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Count the number of customers who hold an account."
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many customers do we have?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Count the number of customers."
  },
  {
    "query" : "query { customers { customer_id customer_first_name customer_last_name customer_phone } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show ids, first names, last names, and phones for all customers."
  },
  {
    "query" : "query { customers { customer_id customer_first_name customer_last_name customer_phone } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What are the ids, full names, and phones of each customer?"
  },
  {
    "query" : "query { customers ( where : { _and : { customer_first_name : { _eq : \"Aniyah\" } , customer_last_name : { _eq : \"Feest\" } } } ) { customer_phone customer_email } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What is the phone and email for customer with first name Aniyah and last name Feest?"
  },
  {
    "query" : "query { customers ( where : { _and : { customer_first_name : { _eq : \"Aniyah\" } , customer_last_name : { _eq : \"Feest\" } } } ) { customer_phone customer_email } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Return the phone and email of the customer with the first name Aniyah and last name Feest."
  },
  {
    "query" : "query { customers_cards_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show the number of customer cards."
  },
  {
    "query" : "query { customers_cards_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many customer cards are there?"
  },
  {
    "query" : "query { customers_cards { card_id customer_id card_type_code card_number } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show ids, customer ids, card type codes, card numbers for all cards."
  },
  {
    "query" : "query { customers_cards { card_id customer_id card_type_code card_number } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What are card ids, customer ids, card types, and card numbers for each customer card?"
  },
  {
    "query" : "query { customers_cards ( where : { card_number : { _eq : \"4560596484842\" } } ) { date_valid_from date_valid_to } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show the date valid from and the date valid to for the card with card number '4560596484842'."
  },
  {
    "query" : "query { customers_cards ( where : { card_number : { _eq : \"4560596484842\" } } ) { date_valid_from date_valid_to } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What are the valid from and valid to dates for the card with the number 4560596484842?"
  },
  {
    "query" : "query { customers ( where : { customers_cards : { card_number : { _eq : \"4560596484842\" } } } ) { customer_first_name customer_last_name customer_phone } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What is the first name, last name, and phone of the customer with card 4560596484842."
  },
  {
    "query" : "query { customers ( where : { customers_cards : { card_number : { _eq : \"4560596484842\" } } } ) { customer_first_name customer_last_name customer_phone } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Return the full name and phone of the customer who has card number 4560596484842."
  },
  {
    "query" : "query { customers_cards_aggregate ( where : { _and : { customer : { customer_first_name : { _eq : \"Art\" } , customer_last_name : { _eq : \"Turcotte\" } } } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many cards does customer Art Turcotte have?"
  },
  {
    "query" : "query { customers_cards_aggregate ( where : { _and : { customer : { customer_first_name : { _eq : \"Art\" } , customer_last_name : { _eq : \"Turcotte\" } } } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Count the number of cards the customer with the first name Art and last name Turcotte has."
  },
  {
    "query" : "query { customers_cards_aggregate ( where : { card_type_code : { _eq : \"Debit\" } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many debit cards do we have?"
  },
  {
    "query" : "query { customers_cards_aggregate ( where : { card_type_code : { _eq : \"Debit\" } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Count the number of customer cards of the type Debit."
  },
  {
    "query" : "query { customers_cards_aggregate ( where : { _and : { customer : { customer_first_name : { _eq : \"Blanche\" } , customer_last_name : { _eq : \"Huels\" } } , card_type_code : { _eq : \"Credit\" } } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many credit cards does customer Blanche Huels have?"
  },
  {
    "query" : "query { customers_cards_aggregate ( where : { _and : { customer : { customer_first_name : { _eq : \"Blanche\" } , customer_last_name : { _eq : \"Huels\" } } , card_type_code : { _eq : \"Credit\" } } } ) { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Count the number of credit cards that the customer with first name Blanche and last name Huels has."
  },
  {
    "query" : "query { customers_cards ( distinct_on : card_type_code ) { card_type_code } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show all card type codes."
  },
  {
    "query" : "query { customers_cards ( distinct_on : card_type_code ) { card_type_code } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What are the different card type codes?"
  },
  {
    "query" : "query { customers_cards_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show the number of card types."
  },
  {
    "query" : "query { customers_cards_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many different card types are there?"
  },
  {
    "query" : "query { financial_transactions ( distinct_on : transaction_type ) { transaction_type } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show all transaction types."
  },
  {
    "query" : "query { financial_transactions ( distinct_on : transaction_type ) { transaction_type } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What are the different types of transactions?"
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Show the number of transaction types."
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { count } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "How many different types of transactions are there?"
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { avg { transaction_amount } sum { transaction_amount } } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "What is the average and total transaction amount?"
  },
  {
    "query" : "query { financial_transactions_aggregate { aggregate { avg { transaction_amount } sum { transaction_amount } } } }",
    "schemaId" : "customers_card_transactions",
    "question" : "Return the average transaction amount, as well as the total amount of all transactions."
  },
  {
    "query" : "query { debate_aggregate { aggregate { count } } }",
    "schemaId" : "debate",
    "question" : "How many debates are there?"
  },
  {
    "query" : "query { debate ( order_by : { num_of_audience : asc } ) { venue } }",
    "schemaId" : "debate",
    "question" : "List the venues of debates in ascending order of the number of audience."
  },
  {
    "query" : "query { debate { date venue } }",
    "schemaId" : "debate",
    "question" : "What are the date and venue of each debate?"
  },
  {
    "query" : "query { debate ( where : { num_of_audience : { _gt : 150 } } ) { date } }",
    "schemaId" : "debate",
    "question" : "List the dates of debates with number of audience bigger than 150"
  },
  {
    "query" : "query { people ( where : { _or : [ { age : { _eq : 35 } } , { age : { _eq : 36 } } ] } ) { name } }",
    "schemaId" : "debate",
    "question" : "Show the names of people aged either 35 or 36."
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { age : asc } ) { party } }",
    "schemaId" : "debate",
    "question" : "What is the party of the youngest people?"
  },
  {
    "query" : "query { debate ( distinct_on : venue ) { venue } }",
    "schemaId" : "debate",
    "question" : "Show the distinct venues of debates"
  },
  {
    "query" : "query { member_aggregate { aggregate { count } } }",
    "schemaId" : "decoration_competition",
    "question" : "How many members are there?"
  },
  {
    "query" : "query { member ( order_by : { name : asc } ) { name } }",
    "schemaId" : "decoration_competition",
    "question" : "List the names of members in ascending alphabetical order."
  },
  {
    "query" : "query { member { name country } }",
    "schemaId" : "decoration_competition",
    "question" : "What are the names and countries of members?"
  },
  {
    "query" : "query { member ( where : { _or : [ { country : { _eq : \"United States\" } } , { country : { _eq : \"Canada\" } } ] } ) { name } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the names of members whose country is \"United States\" or \"Canada\"."
  },
  {
    "query" : "query { college { leader_name college_location } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the leader names and locations of colleges."
  },
  {
    "query" : "query { member { name college { name } } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the names of members and names of colleges they go to."
  },
  {
    "query" : "query { member ( order_by : { name : asc } ) { name college { college_location } } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the names of members and the locations of colleges they go to in ascending alphabetical order of member names."
  },
  {
    "query" : "query { college ( where : { members : { country : { _eq : \"Canada\" } } } , distinct_on : leader_name ) { leader_name } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the distinct leader names of colleges associated with members from country \"Canada\"."
  },
  {
    "query" : "query { member { name rounds { decoration_theme } } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the names of members and the decoration themes they have."
  },
  {
    "query" : "query { member ( where : { rounds : { rank_in_round : { _gt : 3 } } } ) { name } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the names of members that have a rank in round higher than 3."
  },
  {
    "query" : "query { member ( order_by : { rounds_aggregate : { min : { rank_in_round : asc } } } ) { name } }",
    "schemaId" : "decoration_competition",
    "question" : "Show the names of members in ascending order of their rank in rounds."
  },
  {
    "query" : "query { head_aggregate ( where : { age : { _gt : 56.0 } } ) { aggregate { count } } }",
    "schemaId" : "department_management",
    "question" : "How many heads of the departments are older than 56 ?"
  },
  {
    "query" : "query { head ( order_by : { age : asc } ) { name born_state age } }",
    "schemaId" : "department_management",
    "question" : "List the name, born state and age of the heads of departments ordered by age."
  },
  {
    "query" : "query { department { creation name budget_in_billions } }",
    "schemaId" : "department_management",
    "question" : "List the creation year, name and budget of each department."
  },
  {
    "query" : "query { department_aggregate { aggregate { max { budget_in_billions } min { budget_in_billions } } } }",
    "schemaId" : "department_management",
    "question" : "What are the maximum and minimum budget of the departments?"
  },
  {
    "query" : "query { department_aggregate ( where : { ranking : { _gte : 10 , _lte : 15 } } ) { aggregate { avg { num_employees } } } }",
    "schemaId" : "department_management",
    "question" : "What is the average number of employees of the departments whose rank is between 10 and 15?"
  },
  {
    "query" : "query { head ( where : { born_state : { _neq : \"California\" } } ) { name } }",
    "schemaId" : "department_management",
    "question" : "What are the names of the heads who are born outside the California state?"
  },
  {
    "query" : "query { department ( where : { management : { temporary_acting : { _eq : \"Yes\" } } } ) { name num_employees } }",
    "schemaId" : "department_management",
    "question" : "Show the name and number of employees for the departments managed by heads whose temporary acting value is 'Yes'?"
  },
  {
    "query" : "query { management_aggregate { aggregate { count } } }",
    "schemaId" : "department_management",
    "question" : "How many acting statuses are there?"
  },
  {
    "query" : "query { head ( where : { management : { temporary_acting : { _eq : \"Yes\" } } } , distinct_on : age ) { age } }",
    "schemaId" : "department_management",
    "question" : "What are the distinct ages of the heads who are acting?"
  },
  {
    "query" : "query { head ( where : { name : { _like : \"%Ha%\" } } ) { head_id name } }",
    "schemaId" : "department_management",
    "question" : "Which head's name has the substring 'Ha'? List the id and name."
  },
  {
    "query" : "query { product_suppliers ( limit : 3 , order_by : { total_amount_purchased : desc } ) { product_id } }",
    "schemaId" : "department_store",
    "question" : "What are the ids of the top three products that were purchased in the largest amount?"
  },
  {
    "query" : "query { product_suppliers ( limit : 3 , order_by : { total_amount_purchased : desc } ) { product_id } }",
    "schemaId" : "department_store",
    "question" : "Give the ids of the three products purchased in the largest amounts."
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : asc } ) { product_id product_type_code } }",
    "schemaId" : "department_store",
    "question" : "What are the product id and product type of the cheapest product?"
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : asc } ) { product_id product_type_code } }",
    "schemaId" : "department_store",
    "question" : "Give the id and product type of the product with the lowest price."
  },
  {
    "query" : "query { products_aggregate { aggregate { count } } }",
    "schemaId" : "department_store",
    "question" : "Find the number of different product types."
  },
  {
    "query" : "query { products_aggregate { aggregate { count } } }",
    "schemaId" : "department_store",
    "question" : "Count the number of distinct product types."
  },
  {
    "query" : "query { addresses ( where : { customer_addresses : { customer_id : { _eq : 10 } } } ) { address_details } }",
    "schemaId" : "department_store",
    "question" : "Return the address of customer 10."
  },
  {
    "query" : "query { addresses ( where : { customer_addresses : { customer_id : { _eq : 10 } } } ) { address_details } }",
    "schemaId" : "department_store",
    "question" : "What is the address for the customer with id 10?"
  },
  {
    "query" : "query { staff ( where : { staff_department_assignments : { job_title_code : { _eq : \"Department Manager\" } } } ) { staff_id staff_gender } }",
    "schemaId" : "department_store",
    "question" : "What are the staff ids and genders of all staffs whose job title is Department Manager?"
  },
  {
    "query" : "query { staff ( where : { staff_department_assignments : { job_title_code : { _eq : \"Department Manager\" } } } ) { staff_id staff_gender } }",
    "schemaId" : "department_store",
    "question" : "Return the staff ids and genders for any staff with the title Department Manager."
  },
  {
    "query" : "query { department_stores_aggregate ( where : { department_store_chain : { dept_store_chain_name : { _eq : \"South\" } } } ) { aggregate { count } } }",
    "schemaId" : "department_store",
    "question" : "How many department stores does the store chain South have?"
  },
  {
    "query" : "query { department_stores_aggregate ( where : { department_store_chain : { dept_store_chain_name : { _eq : \"South\" } } } ) { aggregate { count } } }",
    "schemaId" : "department_store",
    "question" : "Count the number of stores the chain South has."
  },
  {
    "query" : "query { staff ( limit : 1 , order_by : { staff_department_assignments_aggregate : { max : { date_assigned_to : desc_nulls_last } } } ) { staff_name staff_department_assignments { job_title_code } } }",
    "schemaId" : "department_store",
    "question" : "What is the name and job title of the staff who was assigned the latest?"
  },
  {
    "query" : "query { staff ( limit : 1 , order_by : { staff_department_assignments_aggregate : { max : { date_assigned_to : desc_nulls_last } } } ) { staff_name staff_department_assignments { job_title_code } } }",
    "schemaId" : "department_store",
    "question" : "Return the name and job title of the staff with the latest date assigned."
  },
  {
    "query" : "query { products ( where : { product_suppliers : { supplier_id : { _eq : 3 } } } ) { product_type_code product_name product_price } }",
    "schemaId" : "department_store",
    "question" : "Give me the product type, name and price for all the products supplied by supplier id 3."
  },
  {
    "query" : "query { products ( where : { product_suppliers : { supplier_id : { _eq : 3 } } } ) { product_type_code product_name product_price } }",
    "schemaId" : "department_store",
    "question" : "Return the product type, name, and price for products supplied by supplier 3."
  },
  {
    "query" : "query { customers ( order_by : { customer_orders_aggregate : { min : { customer_id : asc } } } , where : { customer_orders : { order_status_code : { _eq : \"Pending\" } } } ) { customer_name } }",
    "schemaId" : "department_store",
    "question" : "Return the name of customers whose order status is Pending, in the order of customer id."
  },
  {
    "query" : "query { customers ( order_by : { customer_orders_aggregate : { min : { customer_id : asc } } } , where : { customer_orders : { order_status_code : { _eq : \"Pending\" } } } ) { customer_name } }",
    "schemaId" : "department_store",
    "question" : "What are the names of customers with an order status of Pending, sorted by customer id?"
  },
  {
    "query" : "query { products ( where : { product_price : { _gte : 600 , _lte : 700 } } ) { product_name product_id } }",
    "schemaId" : "department_store",
    "question" : "Return the names and ids of all products whose price is between 600 and 700."
  },
  {
    "query" : "query { products ( where : { product_price : { _gte : 600 , _lte : 700 } } ) { product_name product_id } }",
    "schemaId" : "department_store",
    "question" : "What are the names and ids of products costing between 600 and 700?"
  },
  {
    "query" : "query { customers ( where : { customer_address : { _like : \"%TN%\" } } ) { customer_name customer_id } }",
    "schemaId" : "department_store",
    "question" : "What are the names and ids of customers whose address contains TN?"
  },
  {
    "query" : "query { customers ( where : { customer_address : { _like : \"%TN%\" } } ) { customer_name customer_id } }",
    "schemaId" : "department_store",
    "question" : "Return the names and ids of customers who have TN in their address."
  },
  {
    "query" : "query { staff ( where : { staff_department_assignments : { date_assigned_from : { _gt : \"2016-01-01T00:00:00-00:00\" } } } ) { staff_name staff_gender } }",
    "schemaId" : "department_store",
    "question" : "Return the name and gender of the staff who was assigned in 2016."
  },
  {
    "query" : "query { staff ( where : { staff_department_assignments : { date_assigned_from : { _gt : \"2016-01-01T00:00:00-00:00\" } } } ) { staff_name staff_gender } }",
    "schemaId" : "department_store",
    "question" : "What are the names and genders of staff who were assigned in 2016?"
  },
  {
    "query" : "query { products ( where : { _or : [ { product_price : { _lt : 600 } } , { product_price : { _gt : 900 } } ] } ) { product_id product_name } }",
    "schemaId" : "department_store",
    "question" : "What are id and name of the products whose price is lower than 600 or higher than 900?"
  },
  {
    "query" : "query { products ( where : { _or : [ { product_price : { _lt : 600 } } , { product_price : { _gt : 900 } } ] } ) { product_id product_name } }",
    "schemaId" : "department_store",
    "question" : "Give the ids and names of products with price lower than 600 or higher than 900."
  },
  {
    "query" : "query { customers_aggregate { aggregate { max { customer_code } min { customer_code } } } }",
    "schemaId" : "department_store",
    "question" : "What is the largest and smallest customer codes?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { max { customer_code } min { customer_code } } } }",
    "schemaId" : "department_store",
    "question" : "Return the maximum and minimum customer codes."
  },
  {
    "query" : "query { customer_orders ( order_by : { order_date : asc } , where : { order_status_code : { _eq : \"Cancelled\" } } ) { order_id customer_id } }",
    "schemaId" : "department_store",
    "question" : "List the order id, customer id for orders in Cancelled status, ordered by their order dates."
  },
  {
    "query" : "query { customer_orders ( order_by : { order_date : asc } , where : { order_status_code : { _eq : \"Cancelled\" } } ) { order_id customer_id } }",
    "schemaId" : "department_store",
    "question" : "What are the order ids and customer ids for orders that have been Cancelled, sorted by their order dates?"
  },
  {
    "query" : "query { customers ( where : { _and : { customer_address : { _like : \"%WY%\" } , payment_method_code : { _neq : \"Credit Card\" } } } ) { customer_id customer_name } }",
    "schemaId" : "department_store",
    "question" : "Find the id and name of customers whose address contains WY state and do not use credit card for payment."
  },
  {
    "query" : "query { customers ( where : { _and : { customer_address : { _like : \"%WY%\" } , payment_method_code : { _neq : \"Credit Card\" } } } ) { customer_id customer_name } }",
    "schemaId" : "department_store",
    "question" : "What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?"
  },
  {
    "query" : "query { products_aggregate ( where : { product_type_code : { _eq : \"Clothes\" } } ) { aggregate { avg { product_price } } } }",
    "schemaId" : "department_store",
    "question" : "Find the average price of all product clothes."
  },
  {
    "query" : "query { products_aggregate ( where : { product_type_code : { _eq : \"Clothes\" } } ) { aggregate { avg { product_price } } } }",
    "schemaId" : "department_store",
    "question" : "What is the average price of clothes?"
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } , where : { product_type_code : { _eq : \"Hardware\" } } ) { product_name } }",
    "schemaId" : "department_store",
    "question" : "Find the name of the most expensive hardware product."
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } , where : { product_type_code : { _eq : \"Hardware\" } } ) { product_name } }",
    "schemaId" : "department_store",
    "question" : "What is the name of the hardware product with the greatest price?"
  },
  {
    "query" : "query { device_aggregate { aggregate { count } } }",
    "schemaId" : "device",
    "question" : "How many devices are there?"
  },
  {
    "query" : "query { device_aggregate { aggregate { count } } }",
    "schemaId" : "device",
    "question" : "Count the number of devices."
  },
  {
    "query" : "query { device ( order_by : { carrier : asc } ) { carrier } }",
    "schemaId" : "device",
    "question" : "List the carriers of devices in ascending alphabetical order."
  },
  {
    "query" : "query { device ( order_by : { carrier : asc } ) { carrier } }",
    "schemaId" : "device",
    "question" : "What are the different carriers for devices, listed in alphabetical order?"
  },
  {
    "query" : "query { device ( where : { software_platform : { _neq : \"Android\" } } ) { carrier } }",
    "schemaId" : "device",
    "question" : "What are the carriers of devices whose software platforms are not \"Android\"?"
  },
  {
    "query" : "query { device ( where : { software_platform : { _neq : \"Android\" } } ) { carrier } }",
    "schemaId" : "device",
    "question" : "Return the device carriers that do not have Android as their software platform."
  },
  {
    "query" : "query { shop ( order_by : { open_year : asc } ) { shop_name } }",
    "schemaId" : "device",
    "question" : "What are the names of shops in ascending order of open year?"
  },
  {
    "query" : "query { shop ( order_by : { open_year : asc } ) { shop_name } }",
    "schemaId" : "device",
    "question" : "Return the names of shops, ordered by year of opening ascending."
  },
  {
    "query" : "query { stock_aggregate { aggregate { avg { quantity } } } }",
    "schemaId" : "device",
    "question" : "What is the average quantity of stocks?"
  },
  {
    "query" : "query { stock_aggregate { aggregate { avg { quantity } } } }",
    "schemaId" : "device",
    "question" : "Give the average quantity of stocks."
  },
  {
    "query" : "query { shop ( order_by : { shop_name : asc } ) { shop_name location } }",
    "schemaId" : "device",
    "question" : "What are the names and location of the shops in ascending alphabetical order of name."
  },
  {
    "query" : "query { shop ( order_by : { shop_name : asc } ) { shop_name location } }",
    "schemaId" : "device",
    "question" : "Return the names and locations of shops, ordered by name in alphabetical order."
  },
  {
    "query" : "query { device_aggregate { aggregate { count } } }",
    "schemaId" : "device",
    "question" : "How many different software platforms are there for devices?"
  },
  {
    "query" : "query { device_aggregate { aggregate { count } } }",
    "schemaId" : "device",
    "question" : "Count the number of different software platforms."
  },
  {
    "query" : "query { shop ( where : { shop_name : { _eq : \"Apple\" } } ) { open_date open_year } }",
    "schemaId" : "device",
    "question" : "List the open date of open year of the shop named \"Apple\"."
  },
  {
    "query" : "query { shop ( where : { shop_name : { _eq : \"Apple\" } } ) { open_date open_year } }",
    "schemaId" : "device",
    "question" : "What are the open dates and years for the shop named Apple?"
  },
  {
    "query" : "query { shop ( limit : 1 , order_by : { open_year : desc } ) { shop_name } }",
    "schemaId" : "device",
    "question" : "List the name of the shop with the latest open year."
  },
  {
    "query" : "query { shop ( limit : 1 , order_by : { open_year : desc } ) { shop_name } }",
    "schemaId" : "device",
    "question" : "What is the shop name corresponding to the shop that opened in the most recent year?"
  },
  {
    "query" : "query { shop { shop_name stocks { device { carrier } } } }",
    "schemaId" : "device",
    "question" : "Show names of shops and the carriers of devices they have in stock."
  },
  {
    "query" : "query { shop { shop_name stocks { device { carrier } } } }",
    "schemaId" : "device",
    "question" : "What are the names of device shops, and what are the carriers that they carry devices in stock for?"
  },
  {
    "query" : "query { documents ( order_by : { document_name : asc } ) { document_name access_count } }",
    "schemaId" : "document_management",
    "question" : "Find the name and access counts of all documents, in alphabetic order of the document name."
  },
  {
    "query" : "query { documents ( order_by : { document_name : asc } ) { document_name access_count } }",
    "schemaId" : "document_management",
    "question" : "What are the names of all the documents, as well as the access counts of each, ordered alphabetically?"
  },
  {
    "query" : "query { documents ( limit : 1 , order_by : { access_count : desc } ) { document_name access_count } }",
    "schemaId" : "document_management",
    "question" : "Find the name of the document that has been accessed the greatest number of times, as well as the count of how many times it has been accessed?"
  },
  {
    "query" : "query { documents ( limit : 1 , order_by : { access_count : desc } ) { document_name access_count } }",
    "schemaId" : "document_management",
    "question" : "What is the name of the document which has been accessed the most times, as well as the number of times it has been accessed?"
  },
  {
    "query" : "query { documents_aggregate { aggregate { avg { access_count } } } }",
    "schemaId" : "document_management",
    "question" : "What is the average access count of documents?"
  },
  {
    "query" : "query { documents_aggregate { aggregate { avg { access_count } } } }",
    "schemaId" : "document_management",
    "question" : "Find the average access count across all documents?"
  },
  {
    "query" : "query { documents ( where : { document_name : { _eq : \"David CV\" } } ) { document_type_code } }",
    "schemaId" : "document_management",
    "question" : "What is the type of the document named \"David CV\"?"
  },
  {
    "query" : "query { documents ( where : { document_name : { _eq : \"David CV\" } } ) { document_type_code } }",
    "schemaId" : "document_management",
    "question" : "Return the type code of the document named \"David CV\"."
  },
  {
    "query" : "query { document_sections ( where : { document : { document_name : { _eq : \"David CV\" } } } ) { section_title } }",
    "schemaId" : "document_management",
    "question" : "What are all the section titles of the document named \"David CV\"?"
  },
  {
    "query" : "query { document_sections ( where : { document : { document_name : { _eq : \"David CV\" } } } ) { section_title } }",
    "schemaId" : "document_management",
    "question" : "Give the section titles of the document with the name \"David CV\"."
  },
  {
    "query" : "query { documents ( where : { document_name : { _like : \"%CV%\" } } ) { document_name } }",
    "schemaId" : "document_management",
    "question" : "List all the document names which contains \"CV\"."
  },
  {
    "query" : "query { documents ( where : { document_name : { _like : \"%CV%\" } } ) { document_name } }",
    "schemaId" : "document_management",
    "question" : "What are the names of documents that contain the substring \"CV\"?"
  },
  {
    "query" : "query { users_aggregate ( where : { user_login : { _eq : \"1\" } } ) { aggregate { count } } }",
    "schemaId" : "document_management",
    "question" : "How many users are logged in?"
  },
  {
    "query" : "query { users_aggregate ( where : { user_login : { _eq : \"1\" } } ) { aggregate { count } } }",
    "schemaId" : "document_management",
    "question" : "Count the number of users that are logged in."
  },
  {
    "query" : "query { images ( order_by : { image_name : asc } ) { image_name image_url } }",
    "schemaId" : "document_management",
    "question" : "List all the image name and URLs in the order of their names."
  },
  {
    "query" : "query { images ( order_by : { image_name : asc } ) { image_name image_url } }",
    "schemaId" : "document_management",
    "question" : "What are the names and urls of images, sorted alphabetically?"
  },
  {
    "query" : "query { dorm ( where : { gender : { _eq : \"F\" } } ) { dorm_name } }",
    "schemaId" : "dorm_1",
    "question" : "Find the name of dorms only for female (F gender)."
  },
  {
    "query" : "query { dorm ( where : { gender : { _eq : \"F\" } } ) { dorm_name } }",
    "schemaId" : "dorm_1",
    "question" : "What are the names of the all-female dorms?"
  },
  {
    "query" : "query { dorm ( where : { student_capacity : { _gt : 300 } } ) { dorm_name } }",
    "schemaId" : "dorm_1",
    "question" : "Find the name of dorms that can accommodate more than 300 students."
  },
  {
    "query" : "query { dorm ( where : { student_capacity : { _gt : 300 } } ) { dorm_name } }",
    "schemaId" : "dorm_1",
    "question" : "What are the names of all the dorms that can accomdate more than 300 students?"
  },
  {
    "query" : "query { student_aggregate ( where : { _and : { age : { _lt : 25 } , sex : { _eq : \"F\" } } } ) { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many female students (sex is F) whose age is below 25?"
  },
  {
    "query" : "query { student_aggregate ( where : { _and : { sex : { _eq : \"F\" } , age : { _lt : 25 } } } ) { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many girl students who are younger than 25?"
  },
  {
    "query" : "query { student ( where : { age : { _gt : 20 } } ) { fname } }",
    "schemaId" : "dorm_1",
    "question" : "Find the first name of students who is older than 20."
  },
  {
    "query" : "query { student ( where : { age : { _gt : 20 } } ) { fname } }",
    "schemaId" : "dorm_1",
    "question" : "What are the first names of all students who are older than 20?"
  },
  {
    "query" : "query { student ( where : { _and : { city_code : { _eq : \"PHL\" } , age : { _gte : 20 , _lte : 25 } } } ) { fname } }",
    "schemaId" : "dorm_1",
    "question" : "Find the first name of students living in city PHL whose age is between 20 and 25."
  },
  {
    "query" : "query { student ( where : { _and : { age : { _gte : 20 , _lte : 25 } , city_code : { _eq : \"PHL\" } } } ) { fname } }",
    "schemaId" : "dorm_1",
    "question" : "What is the first name of the students who are in age 20 to 25 and living in PHL city?"
  },
  {
    "query" : "query { dorm_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many dorms are there?"
  },
  {
    "query" : "query { dorm_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many dorms are in the database?"
  },
  {
    "query" : "query { dorm_amenity_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "Find the number of distinct amenities."
  },
  {
    "query" : "query { dorm_amenity_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many diffrent dorm amenities are there?"
  },
  {
    "query" : "query { dorm_aggregate { aggregate { sum { student_capacity } } } }",
    "schemaId" : "dorm_1",
    "question" : "Find the total capacity of all dorms."
  },
  {
    "query" : "query { dorm_aggregate { aggregate { sum { student_capacity } } } }",
    "schemaId" : "dorm_1",
    "question" : "What is the total student capacity of all dorms?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many students are there?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many students exist?"
  },
  {
    "query" : "query { dorm_aggregate ( where : { gender : { _eq : \"X\" } } ) { aggregate { avg { student_capacity } sum { student_capacity } } } }",
    "schemaId" : "dorm_1",
    "question" : "Find the average and total capacity of dorms for the students with gender X."
  },
  {
    "query" : "query { dorm_aggregate ( where : { gender : { _eq : \"X\" } } ) { aggregate { avg { student_capacity } sum { student_capacity } } } }",
    "schemaId" : "dorm_1",
    "question" : "What is the average and total capacity for all dorms who are of gender X?"
  },
  {
    "query" : "query { has_amenity_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "Find the number of dorms that have some amenity."
  },
  {
    "query" : "query { has_amenity_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many dorms have amenities?"
  },
  {
    "query" : "query { dorm_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "Find the number of distinct gender for dorms."
  },
  {
    "query" : "query { dorm_aggregate { aggregate { count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many different genders are there in the dorms?"
  },
  {
    "query" : "query { dorm ( where : { dorm_name : { _like : \"%Donor%\" } } ) { student_capacity gender } }",
    "schemaId" : "dorm_1",
    "question" : "Find the capacity and gender type of the dorm whose name has substring ‘Donor’."
  },
  {
    "query" : "query { dorm ( where : { dorm_name : { _like : \"%Donor%\" } } ) { student_capacity gender } }",
    "schemaId" : "dorm_1",
    "question" : "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?"
  },
  {
    "query" : "query { dorm ( where : { _or : [ { student_capacity : { _gt : 300 } } , { student_capacity : { _lt : 100 } } ] } ) { dorm_name gender } }",
    "schemaId" : "dorm_1",
    "question" : "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100."
  },
  {
    "query" : "query { dorm ( where : { _or : [ { student_capacity : { _gt : 300 } } , { student_capacity : { _lt : 100 } } ] } ) { dorm_name gender } }",
    "schemaId" : "dorm_1",
    "question" : "What are the names and types of the dorms that have a capacity greater than 300 or less than 100?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count count } } }",
    "schemaId" : "dorm_1",
    "question" : "Find the numbers of different majors and cities."
  },
  {
    "query" : "query { student_aggregate { aggregate { count count } } }",
    "schemaId" : "dorm_1",
    "question" : "How many different majors are there and how many different city codes are there for each student?"
  },
  {
    "query" : "query { dorm ( limit : 1 , order_by : { student_capacity : desc } ) { dorm_name } }",
    "schemaId" : "dorm_1",
    "question" : "Find the name of the dorm with the largest capacity."
  },
  {
    "query" : "query { dorm ( limit : 1 , order_by : { student_capacity : desc } ) { dorm_name } }",
    "schemaId" : "dorm_1",
    "question" : "What are the names of the dorm with the largest capacity?"
  },
  {
    "query" : "query { dorm_amenity ( order_by : { amenity_name : asc } ) { amenity_name } }",
    "schemaId" : "dorm_1",
    "question" : "List in alphabetic order all different amenities."
  },
  {
    "query" : "query { dorm_amenity ( order_by : { amenity_name : asc } ) { amenity_name } }",
    "schemaId" : "dorm_1",
    "question" : "What are the different dorm amenity names in alphabetical order?"
  },
  {
    "query" : "query { student ( order_by : { age : asc } , where : { city_code : { _neq : \"HKG\" } } ) { fname lname } }",
    "schemaId" : "dorm_1",
    "question" : "List the first and last name of students who are not living in the city with code HKG, and sorted the results by their ages."
  },
  {
    "query" : "query { student ( order_by : { age : asc } , where : { city_code : { _neq : \"HKG\" } } ) { fname lname } }",
    "schemaId" : "dorm_1",
    "question" : "What are the first and last names of all students who are not living in the city HKG and order the results by age?"
  },
  {
    "query" : "query { dorm_amenity ( where : { has_amenities : { dorm : { dorm_name : { _eq : \"Smith Hall\" } } } } ) { amenity_name } }",
    "schemaId" : "dorm_1",
    "question" : "Find the name of amenities Smith Hall dorm have."
  },
  {
    "query" : "query { dorm_amenity ( where : { has_amenities : { dorm : { dorm_name : { _eq : \"Smith Hall\" } } } } ) { amenity_name } }",
    "schemaId" : "dorm_1",
    "question" : "What are the names of the amenities that Smith Hall has?"
  },
  {
    "query" : "query { dorm_amenity ( order_by : { amenity_name : asc } , where : { has_amenities : { dorm : { dorm_name : { _eq : \"Smith Hall\" } } } } ) { amenity_name } }",
    "schemaId" : "dorm_1",
    "question" : "Find the name of amenities Smith Hall dorm have. ordered the results by amenity names."
  },
  {
    "query" : "query { dorm_amenity ( order_by : { amenity_name : asc } , where : { has_amenities : { dorm : { dorm_name : { _eq : \"Smith Hall\" } } } } ) { amenity_name } }",
    "schemaId" : "dorm_1",
    "question" : "What amenities does Smith Hall have in alphabetical order?"
  },
  {
    "query" : "query { vehicles { vehicle_id } }",
    "schemaId" : "driving_school",
    "question" : "List all vehicle id"
  },
  {
    "query" : "query { vehicles { vehicle_id } }",
    "schemaId" : "driving_school",
    "question" : "What are the ids of all vehicles?"
  },
  {
    "query" : "query { vehicles_aggregate { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many vehicle in total?"
  },
  {
    "query" : "query { vehicles_aggregate { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many vehicles exist?"
  },
  {
    "query" : "query { vehicles ( where : { vehicle_id : { _eq : 1 } } ) { vehicle_details } }",
    "schemaId" : "driving_school",
    "question" : "Show the detail of vehicle with id 1."
  },
  {
    "query" : "query { vehicles ( where : { vehicle_id : { _eq : 1 } } ) { vehicle_details } }",
    "schemaId" : "driving_school",
    "question" : "What are the details of the car with id 1?"
  },
  {
    "query" : "query { staff { first_name middle_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "List the first name middle name and last name of all staff."
  },
  {
    "query" : "query { staff { first_name middle_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "What are the first, middle, and last names of all staff?"
  },
  {
    "query" : "query { staff ( where : { _and : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } ) { date_of_birth } }",
    "schemaId" : "driving_school",
    "question" : "What is the birthday of the staff member with first name as Janessa and last name as Sawayn?"
  },
  {
    "query" : "query { staff ( where : { _and : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } ) { date_of_birth } }",
    "schemaId" : "driving_school",
    "question" : "What is the date of birth for the staff member named Janessa Sawayn?"
  },
  {
    "query" : "query { staff ( where : { _and : { first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } ) { date_joined_staff } }",
    "schemaId" : "driving_school",
    "question" : "When did the staff member with first name as Janessa and last name as Sawayn join the company?"
  },
  {
    "query" : "query { staff ( where : { _and : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } ) { date_joined_staff } }",
    "schemaId" : "driving_school",
    "question" : "When did the staff member named Janessa Sawayn join the company?"
  },
  {
    "query" : "query { staff ( where : { _and : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } ) { date_left_staff } }",
    "schemaId" : "driving_school",
    "question" : "When did the staff member with first name as Janessa and last name as Sawayn leave the company?"
  },
  {
    "query" : "query { staff ( where : { _and : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } ) { date_left_staff } }",
    "schemaId" : "driving_school",
    "question" : "When did the staff member Janessa Sawayn leave the company?"
  },
  {
    "query" : "query { staff_aggregate ( where : { first_name : { _eq : \"Ludie\" } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many staff have the first name Ludie?"
  },
  {
    "query" : "query { staff_aggregate ( where : { first_name : { _eq : \"Ludie\" } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many employees have a first name of Ludie?"
  },
  {
    "query" : "query { staff ( where : { _and : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } ) { nickname } }",
    "schemaId" : "driving_school",
    "question" : "What is the nickname of staff with first name as Janessa and last name as Sawayn?"
  },
  {
    "query" : "query { staff ( where : { _and : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } ) { nickname } }",
    "schemaId" : "driving_school",
    "question" : "What is the nickname of the employee named Janessa Sawayn?"
  },
  {
    "query" : "query { staff_aggregate { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many staff in total?"
  },
  {
    "query" : "query { staff_aggregate { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many employees are there?"
  },
  {
    "query" : "query { addresses ( where : { _and : { staffs : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } } ) { city } }",
    "schemaId" : "driving_school",
    "question" : "Which city does staff with first name as Janessa and last name as Sawayn live?"
  },
  {
    "query" : "query { addresses ( where : { _and : { staffs : { first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } } ) { city } }",
    "schemaId" : "driving_school",
    "question" : "In what city does Janessa Sawayn live?"
  },
  {
    "query" : "query { addresses ( where : { _and : { staffs : { first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } } ) { country state_province_county } }",
    "schemaId" : "driving_school",
    "question" : "Which country and state does staff with first name as Janessa and last name as Sawayn lived?"
  },
  {
    "query" : "query { addresses ( where : { _and : { staffs : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } } ) { country state_province_county } }",
    "schemaId" : "driving_school",
    "question" : "In which country and state does Janessa Sawayn live?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { customer : { last_name : { _eq : \"Goodwin\" } , first_name : { _eq : \"Rylan\" } } } } ) { aggregate { sum { lesson_time } } } }",
    "schemaId" : "driving_school",
    "question" : "How long is the total lesson time took by customer with first name as Rylan and last name as Goodwin?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { customer : { last_name : { _eq : \"Goodwin\" } , first_name : { _eq : \"Rylan\" } } } } ) { aggregate { sum { lesson_time } } } }",
    "schemaId" : "driving_school",
    "question" : "How long is the total lesson time took by the customer named Rylan Goodwin?"
  },
  {
    "query" : "query { addresses ( where : { _and : { staffs : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } } ) { zip_postcode } }",
    "schemaId" : "driving_school",
    "question" : "What is the zip code of staff with first name as Janessa and last name as Sawayn lived?"
  },
  {
    "query" : "query { addresses ( where : { _and : { staffs : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } } ) { zip_postcode } }",
    "schemaId" : "driving_school",
    "question" : "What is the zip code of the hosue of the employee named Janessa Sawayn?"
  },
  {
    "query" : "query { addresses_aggregate ( where : { state_province_county : { _eq : \"Georgia\" } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many staff live in state Georgia?"
  },
  {
    "query" : "query { addresses_aggregate ( where : { state_province_county : { _eq : \"Georgia\" } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many employees live in Georgia?"
  },
  {
    "query" : "query { staff ( where : { address : { city : { _eq : \"Damianfort\" } } } ) { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "Find out the first name and last name of staff lived in city Damianfort."
  },
  {
    "query" : "query { staff ( where : { address : { city : { _eq : \"Damianfort\" } } } ) { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "What is the first and last name of all employees who live in the city Damianfort?"
  },
  {
    "query" : "query { customers { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "List the first name and last name of all customers."
  },
  {
    "query" : "query { customers { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "What are the first and last names for all customers?"
  },
  {
    "query" : "query { customers ( where : { first_name : { _eq : \"Carole\" } } ) { email_address date_of_birth } }",
    "schemaId" : "driving_school",
    "question" : "List email address and birthday of customer whose first name as Carole."
  },
  {
    "query" : "query { customers ( where : { first_name : { _eq : \"Carole\" } } ) { email_address date_of_birth } }",
    "schemaId" : "driving_school",
    "question" : "What are the email addresses and date of births for all customers who have a first name of Carole?"
  },
  {
    "query" : "query { customers ( where : { amount_outstanding : { _gt : 2000.0 } } ) { phone_number email_address } }",
    "schemaId" : "driving_school",
    "question" : "List phone number and email address of customer with more than 2000 outstanding balance."
  },
  {
    "query" : "query { customers ( where : { amount_outstanding : { _gt : 2000.0 } } ) { phone_number email_address } }",
    "schemaId" : "driving_school",
    "question" : "What are the phone numbers and email addresses of all customers who have an outstanding balance of more than 2000?"
  },
  {
    "query" : "query { customers ( where : { _or : [ { first_name : { _eq : \"Marina\" } } , { last_name : { _eq : \"Kohler\" } } ] } ) { customer_status_code cell_mobile_phone_number email_address } }",
    "schemaId" : "driving_school",
    "question" : "What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina?"
  },
  {
    "query" : "query { customers ( where : { _or : [ { first_name : { _eq : \"Marina\" } } , { last_name : { _eq : \"Kohler\" } } ] } ) { customer_status_code cell_mobile_phone_number email_address } }",
    "schemaId" : "driving_school",
    "question" : "What is the status code, phone number, and email address of the customer whose last name is Kohler or whose first name is Marina?"
  },
  {
    "query" : "query { customers ( where : { customer_status_code : { _eq : \"Good Customer\" } } ) { date_of_birth } }",
    "schemaId" : "driving_school",
    "question" : "When are the birthdays of customer who are classified as 'Good Customer' status?"
  },
  {
    "query" : "query { customers ( where : { customer_status_code : { _eq : \"Good Customer\" } } ) { date_of_birth } }",
    "schemaId" : "driving_school",
    "question" : "What is the date of birth of every customer whose status code is 'Good Customer'?"
  },
  {
    "query" : "query { customers ( where : { _and : { first_name : { _eq : \"Carole\" } , last_name : { _eq : \"Bernhard\" } } } ) { date_became_customer } }",
    "schemaId" : "driving_school",
    "question" : "When did customer with first name as Carole and last name as Bernhard became a customer?"
  },
  {
    "query" : "query { customers ( where : { _and : { first_name : { _eq : \"Carole\" } , last_name : { _eq : \"Bernhard\" } } } ) { date_became_customer } }",
    "schemaId" : "driving_school",
    "question" : "When did Carole Bernhard first become a customer?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many customers in total?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many customers are there?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { customer : { first_name : { _eq : \"Rylan\" } , last_name : { _eq : \"Goodwin\" } } , lesson_status_code : { _eq : \"Completed\" } } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lessons taken by customer with first name as Rylan and last name as Goodwin were completed?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { customer : { first_name : { _eq : \"Rylan\" } , last_name : { _eq : \"Goodwin\" } } , lesson_status_code : { _eq : \"Completed\" } } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lessons did the customer Ryan Goodwin complete?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { max { amount_outstanding } min { amount_outstanding } avg { amount_outstanding } } } }",
    "schemaId" : "driving_school",
    "question" : "What is maximum, minimum and average amount of outstanding of customer?"
  },
  {
    "query" : "query { customers_aggregate { aggregate { max { amount_outstanding } min { amount_outstanding } avg { amount_outstanding } } } }",
    "schemaId" : "driving_school",
    "question" : "What is the maximum, minimum, and average amount of money outsanding for all customers?"
  },
  {
    "query" : "query { customers ( where : { amount_outstanding : { _gte : 1000.0 , _lte : 3000.0 } } ) { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "List the first name and last name of customers have the amount of outstanding between 1000 and 3000."
  },
  {
    "query" : "query { customers ( where : { amount_outstanding : { _gte : 1000.0 , _lte : 3000.0 } } ) { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "What are the first and last names of all customers with between 1000 and 3000 dollars outstanding?"
  },
  {
    "query" : "query { customers ( where : { address : { city : { _eq : \"Lockmanfurt\" } } } ) { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "List first name and last name of customers lived in city Lockmanfurt."
  },
  {
    "query" : "query { customers ( where : { address : { city : { _eq : \"Lockmanfurt\" } } } ) { first_name last_name } }",
    "schemaId" : "driving_school",
    "question" : "What are the first and last names of all customers who lived in Lockmanfurt?"
  },
  {
    "query" : "query { addresses ( where : { _and : { customers : { first_name : { _eq : \"Carole\" } , last_name : { _eq : \"Bernhard\" } } } } ) { country } }",
    "schemaId" : "driving_school",
    "question" : "Which country does customer with first name as Carole and last name as Bernhard lived in?"
  },
  {
    "query" : "query { addresses ( where : { _and : { customers : { first_name : { _eq : \"Carole\" } , last_name : { _eq : \"Bernhard\" } } } } ) { country } }",
    "schemaId" : "driving_school",
    "question" : "What is the country in which the customer Carole Bernhard lived?"
  },
  {
    "query" : "query { addresses ( where : { _and : { customers : { first_name : { _eq : \"Carole\" } , last_name : { _eq : \"Bernhard\" } } } } ) { zip_postcode } }",
    "schemaId" : "driving_school",
    "question" : "What is zip code of customer with first name as Carole and last name as Bernhard?"
  },
  {
    "query" : "query { addresses ( where : { _and : { customers : { first_name : { _eq : \"Carole\" } , last_name : { _eq : \"Bernhard\" } } } } ) { zip_postcode } }",
    "schemaId" : "driving_school",
    "question" : "What is the zip code of the customer Carole Bernhard?"
  },
  {
    "query" : "query { customer_payments_aggregate ( where : { _and : { customer : { last_name : { _eq : \"Bernhard\" } , first_name : { _eq : \"Carole\" } } } } ) { aggregate { sum { amount_payment } } } }",
    "schemaId" : "driving_school",
    "question" : "How much in total does customer with first name as Carole and last name as Bernhard paid?"
  },
  {
    "query" : "query { customer_payments_aggregate ( where : { _and : { customer : { last_name : { _eq : \"Bernhard\" } , first_name : { _eq : \"Carole\" } } } } ) { aggregate { sum { amount_payment } } } }",
    "schemaId" : "driving_school",
    "question" : "What is the total amount of moeny paid by the customer Carole Bernhard?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { lesson_status_code : { _eq : \"Cancelled\" } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lessons were in cancelled state?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { lesson_status_code : { _eq : \"Cancelled\" } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lessons have been cancelled?"
  },
  {
    "query" : "query { lessons ( where : { _and : { staff : { nickname : { _like : \"%s%\" } , first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } } ) { lesson_id } }",
    "schemaId" : "driving_school",
    "question" : "List lesson id of all lessons taught by staff with first name as Janessa, last name as Sawayn and nickname containing letter 's'."
  },
  {
    "query" : "query { lessons ( where : { _and : { staff : { nickname : { _like : \"%s%\" } , first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } } ) { lesson_id } }",
    "schemaId" : "driving_school",
    "question" : "What are the the lesson ids of all staff taught by Janessa Sawayn whose nickname has the letter s?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { staff : { first_name : { _like : \"%a%\" } } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lessons taught by staff whose first name has letter 'a' in it?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { staff : { first_name : { _like : \"%a%\" } } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lessons were taught by a staff member whose first name has the letter 'a' in it?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { staff : { last_name : { _eq : \"Sawayn\" } , first_name : { _eq : \"Janessa\" } } } } ) { aggregate { sum { lesson_time } } } }",
    "schemaId" : "driving_school",
    "question" : "How long is the total lesson time taught by staff with first name as Janessa and last name as Sawayn?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { staff : { first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } } ) { aggregate { sum { lesson_time } } } }",
    "schemaId" : "driving_school",
    "question" : "What is the total time for all lessons taught by Janessa Sawayn?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { staff : { first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } } ) { aggregate { avg { price } } } }",
    "schemaId" : "driving_school",
    "question" : "What is average lesson price taught by staff with first name as Janessa and last name as Sawayn?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { _and : { staff : { first_name : { _eq : \"Janessa\" } , last_name : { _eq : \"Sawayn\" } } } } ) { aggregate { avg { price } } } }",
    "schemaId" : "driving_school",
    "question" : "What is the average price for a lesson taught by Janessa Sawayn?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { customer : { first_name : { _eq : \"Ray\" } } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lesson does customer with first name Ray took?"
  },
  {
    "query" : "query { lessons_aggregate ( where : { customer : { first_name : { _eq : \"Ray\" } } } ) { aggregate { count } } }",
    "schemaId" : "driving_school",
    "question" : "How many lessons did the customer with the first name Ray take?"
  },
  {
    "query" : "query { individuals ( order_by : { individual_last_name : asc } ) { individual_first_name individual_middle_name individual_last_name } }",
    "schemaId" : "e_government",
    "question" : "List every individual's first name, middle name and last name in alphabetical order by last name."
  },
  {
    "query" : "query { individuals ( order_by : { individual_last_name : asc } ) { individual_first_name individual_middle_name individual_last_name } }",
    "schemaId" : "e_government",
    "question" : "What are the first, middle, and last names of all individuals, ordered by last name?"
  },
  {
    "query" : "query { forms ( distinct_on : form_type_code ) { form_type_code } }",
    "schemaId" : "e_government",
    "question" : "List all the types of forms."
  },
  {
    "query" : "query { forms ( distinct_on : form_type_code ) { form_type_code } }",
    "schemaId" : "e_government",
    "question" : "What are the different types of forms?"
  },
  {
    "query" : "query { parties ( where : { party_email : { _eq : \"enrico09@example.com\" } } ) { payment_method_code party_phone } }",
    "schemaId" : "e_government",
    "question" : "Find the payment method and phone of the party with email \"enrico09@example.com\"."
  },
  {
    "query" : "query { parties ( where : { party_email : { _eq : \"enrico09@example.com\" } } ) { payment_method_code party_phone } }",
    "schemaId" : "e_government",
    "question" : "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?"
  },
  {
    "query" : "query { organizations ( order_by : { date_formed : asc } ) { organization_name } }",
    "schemaId" : "e_government",
    "question" : "List all the name of organizations in order of the date formed."
  },
  {
    "query" : "query { organizations ( order_by : { date_formed : asc } ) { organization_name } }",
    "schemaId" : "e_government",
    "question" : "What are the names of organizations, ordered by the date they were formed, ascending?"
  },
  {
    "query" : "query { organizations ( limit : 1 , order_by : { date_formed : desc } ) { organization_name } }",
    "schemaId" : "e_government",
    "question" : "Find the name of the youngest organization."
  },
  {
    "query" : "query { organizations ( limit : 1 , order_by : { date_formed : desc } ) { organization_name } }",
    "schemaId" : "e_government",
    "question" : "What is the name of the organization that was formed most recently?"
  },
  {
    "query" : "query { individuals ( limit : 1 , order_by : { organization_contact_individuals_aggregate : { max : { date_contact_to : desc } } } , where : { organization_contact_individuals : { organization : { organization_name : { _eq : \"Labour Party\" } } } } ) { individual_last_name } }",
    "schemaId" : "e_government",
    "question" : "Find the last name of the latest contact individual of the organization \"Labour Party\"."
  },
  {
    "query" : "query { individuals ( limit : 1 , order_by : { organization_contact_individuals_aggregate : { max : { date_contact_to : desc } } } , where : { organization_contact_individuals : { organization : { organization_name : { _eq : \"Labour Party\" } } } } ) { individual_last_name } }",
    "schemaId" : "e_government",
    "question" : "What is the last name of the contact individual from the Labour party organization who was contacted most recently?"
  },
  {
    "query" : "query { services_aggregate { aggregate { count } } }",
    "schemaId" : "e_government",
    "question" : "How many services are there?"
  },
  {
    "query" : "query { services_aggregate { aggregate { count } } }",
    "schemaId" : "e_government",
    "question" : "Count the number of services."
  },
  {
    "query" : "query { addresses_aggregate ( where : { state_province_county : { _eq : \"Colorado\" } } ) { aggregate { count } } }",
    "schemaId" : "e_government",
    "question" : "How many cities are there in state \"Colorado\"?"
  },
  {
    "query" : "query { addresses_aggregate ( where : { state_province_county : { _eq : \"Colorado\" } } ) { aggregate { count } } }",
    "schemaId" : "e_government",
    "question" : "Count the number of cities in the state of Colorado."
  },
  {
    "query" : "query { organizations ( where : { organization_name : { _like : \"%Party%\" } } ) { organization_name } }",
    "schemaId" : "e_government",
    "question" : "Find the name of organizations whose names contain \"Party\"."
  },
  {
    "query" : "query { organizations ( where : { organization_name : { _like : \"%Party%\" } } ) { organization_name } }",
    "schemaId" : "e_government",
    "question" : "What are the names of organizations that contain the word \"Party\"?"
  },
  {
    "query" : "query { parties_aggregate { aggregate { count } } }",
    "schemaId" : "e_government",
    "question" : "How many distinct payment methods are used by parties?"
  },
  {
    "query" : "query { parties_aggregate { aggregate { count } } }",
    "schemaId" : "e_government",
    "question" : "Count the number of different payment method codes used by parties."
  },
  {
    "query" : "query { addresses ( where : { line_1_number_building : { _like : \"%6862 Kaitlyn Knolls%\" } } ) { state_province_county } }",
    "schemaId" : "e_government",
    "question" : "Which state can address \"6862 Kaitlyn Knolls\" possibly be in?"
  },
  {
    "query" : "query { addresses ( where : { line_1_number_building : { _like : \"%6862 Kaitlyn Knolls%\" } } ) { state_province_county } }",
    "schemaId" : "e_government",
    "question" : "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\"."
  },
  {
    "query" : "query { individuals ( distinct_on : individual_last_name ) { individual_last_name } }",
    "schemaId" : "e_government",
    "question" : "Find the last name of the individuals that have been contact individuals of an organization."
  },
  {
    "query" : "query { individuals ( distinct_on : individual_last_name ) { individual_last_name } }",
    "schemaId" : "e_government",
    "question" : "What are the last names of individuals who have been contact individuals for an organization?"
  },
  {
    "query" : "query { courses_aggregate { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "How many courses are there in total?"
  },
  {
    "query" : "query { courses_aggregate { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "Find the total number of courses offered."
  },
  {
    "query" : "query { courses ( where : { course_name : { _eq : \"database\" } } ) { course_description } }",
    "schemaId" : "e_learning",
    "question" : "What are the descriptions of the courses with name \"database\"?"
  },
  {
    "query" : "query { courses ( where : { course_name : { _eq : \"database\" } } ) { course_description } }",
    "schemaId" : "e_learning",
    "question" : "Return the description for the courses named \"database\"."
  },
  {
    "query" : "query { course_authors_and_tutors ( where : { personal_name : { _eq : \"Cathrine\" } } ) { address_line_1 } }",
    "schemaId" : "e_learning",
    "question" : "What are the addresses of the course authors or tutors with personal name \"Cathrine\""
  },
  {
    "query" : "query { course_authors_and_tutors ( where : { personal_name : { _eq : \"Cathrine\" } } ) { address_line_1 } }",
    "schemaId" : "e_learning",
    "question" : "Return the addresses of the course authors or tutors whose personal name is \"Cathrine\"."
  },
  {
    "query" : "query { course_authors_and_tutors { address_line_1 } }",
    "schemaId" : "e_learning",
    "question" : "List the addresses of all the course authors or tutors."
  },
  {
    "query" : "query { course_authors_and_tutors { address_line_1 } }",
    "schemaId" : "e_learning",
    "question" : "What is the address of each course author or tutor?"
  },
  {
    "query" : "query { course_authors_and_tutors { login_name family_name } }",
    "schemaId" : "e_learning",
    "question" : "List all the login names and family names of course author and tutors."
  },
  {
    "query" : "query { course_authors_and_tutors { login_name family_name } }",
    "schemaId" : "e_learning",
    "question" : "What are the login names and family names of course author and tutors?"
  },
  {
    "query" : "query { student_course_enrolment { date_of_enrolment date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "List all the dates of enrollment and completion of students."
  },
  {
    "query" : "query { student_course_enrolment { date_of_enrolment date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "What are all the dates of enrollment and completion in record?"
  },
  {
    "query" : "query { student_course_enrolment_aggregate { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "How many distinct students are enrolled in courses?"
  },
  {
    "query" : "query { student_course_enrolment_aggregate { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "Find the number of distinct students enrolled in courses."
  },
  {
    "query" : "query { student_course_enrolment_aggregate { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "How many distinct courses are enrolled in by students?"
  },
  {
    "query" : "query { student_course_enrolment_aggregate { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "Find the number of distinct courses that have enrolled students."
  },
  {
    "query" : "query { student_tests_taken ( where : { test_result : { _eq : \"Pass\" } } ) { date_test_taken } }",
    "schemaId" : "e_learning",
    "question" : "Find the dates of the tests taken with result \"Pass\"."
  },
  {
    "query" : "query { student_tests_taken ( where : { test_result : { _eq : \"Pass\" } } ) { date_test_taken } }",
    "schemaId" : "e_learning",
    "question" : "Which tests have \"Pass\" results? Return the dates when the tests were taken."
  },
  {
    "query" : "query { student_tests_taken_aggregate ( where : { test_result : { _eq : \"Fail\" } } ) { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "How many tests have result \"Fail\"?"
  },
  {
    "query" : "query { student_tests_taken_aggregate ( where : { test_result : { _eq : \"Fail\" } } ) { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "Count the number of tests with \"Fail\" result."
  },
  {
    "query" : "query { students ( where : { family_name : { _eq : \"Ward\" } } ) { login_name } }",
    "schemaId" : "e_learning",
    "question" : "What are the login names of the students with family name \"Ward\"?"
  },
  {
    "query" : "query { students ( where : { family_name : { _eq : \"Ward\" } } ) { login_name } }",
    "schemaId" : "e_learning",
    "question" : "Return the login names of the students whose family name is \"Ward\"."
  },
  {
    "query" : "query { students ( where : { _or : [ { family_name : { _eq : \"Jaskolski\" } } , { family_name : { _eq : \"Langosh\" } } ] } ) { date_of_latest_logon } }",
    "schemaId" : "e_learning",
    "question" : "What are the dates of the latest logon of the students with family name \"Jaskolski\" or \"Langosh\"?"
  },
  {
    "query" : "query { students ( where : { _or : [ { family_name : { _eq : \"Jaskolski\" } } , { family_name : { _eq : \"Langosh\" } } ] } ) { date_of_latest_logon } }",
    "schemaId" : "e_learning",
    "question" : "Find the latest logon date of the students whose family name is \"Jaskolski\" or \"Langosh\"."
  },
  {
    "query" : "query { students_aggregate ( where : { personal_name : { _like : \"%son%\" } } ) { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "How many students have personal names that contain the word \"son\"?"
  },
  {
    "query" : "query { students_aggregate ( where : { personal_name : { _like : \"%son%\" } } ) { aggregate { count } } }",
    "schemaId" : "e_learning",
    "question" : "Find the number of students who have the word \"son\" in their personal names."
  },
  {
    "query" : "query { subjects { subject_name } }",
    "schemaId" : "e_learning",
    "question" : "List all the subject names."
  },
  {
    "query" : "query { subjects { subject_name } }",
    "schemaId" : "e_learning",
    "question" : "What are the names of all the subjects."
  },
  {
    "query" : "query { course_authors_and_tutors ( order_by : { personal_name : asc } ) { address_line_1 author_tutor_atb family_name gender_mf login_name middle_name password personal_name } }",
    "schemaId" : "e_learning",
    "question" : "List all the information about course authors and tutors in alphabetical order of the personal name."
  },
  {
    "query" : "query { course_authors_and_tutors ( order_by : { personal_name : asc } ) { address_line_1 author_tutor_atb family_name gender_mf login_name middle_name password personal_name } }",
    "schemaId" : "e_learning",
    "question" : "Sort the information about course authors and tutors in alphabetical order of the personal name."
  },
  {
    "query" : "query { students ( order_by : { family_name : asc } ) { personal_name family_name } }",
    "schemaId" : "e_learning",
    "question" : "List the personal names and family names of all the students in alphabetical order of family name."
  },
  {
    "query" : "query { students ( order_by : { family_name : asc } ) { personal_name family_name } }",
    "schemaId" : "e_learning",
    "question" : "What are the personal names and family names of the students? Sort the result in alphabetical order of the family name."
  },
  {
    "query" : "query { course_authors_and_tutors ( where : { courses : { course_name : { _eq : \"advanced database\" } } } ) { login_name } }",
    "schemaId" : "e_learning",
    "question" : "Find the login name of the course author that teaches the course with name \"advanced database\"."
  },
  {
    "query" : "query { course_authors_and_tutors ( where : { courses : { course_name : { _eq : \"advanced database\" } } } ) { login_name } }",
    "schemaId" : "e_learning",
    "question" : "Which course author teaches the \"advanced database\" course? Give me his or her login name."
  },
  {
    "query" : "query { course_authors_and_tutors ( where : { _or : [ { courses : { course_name : { _eq : \"operating system\" } } } , { courses : { course_name : { _eq : \"data structure\" } } } ] } ) { address_line_1 } }",
    "schemaId" : "e_learning",
    "question" : "Find the addresses of the course authors who teach the course with name \"operating system\" or \"data structure\"."
  },
  {
    "query" : "query { course_authors_and_tutors ( where : { _or : [ { courses : { course_name : { _eq : \"operating system\" } } } , { courses : { course_name : { _eq : \"data structure\" } } } ] } ) { address_line_1 } }",
    "schemaId" : "e_learning",
    "question" : "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course."
  },
  {
    "query" : "query { courses ( where : { course_authors_and_tutor : { personal_name : { _eq : \"Julio\" } } } ) { course_name } }",
    "schemaId" : "e_learning",
    "question" : "Find the names of courses taught by the tutor who has personal name \"Julio\"."
  },
  {
    "query" : "query { courses ( where : { course_authors_and_tutor : { personal_name : { _eq : \"Julio\" } } } ) { course_name } }",
    "schemaId" : "e_learning",
    "question" : "What are the names of the courses taught by the tutor whose personal name is \"Julio\"?"
  },
  {
    "query" : "query { courses ( where : { subject : { subject_name : { _eq : \"Computer Science\" } } } ) { course_name course_description } }",
    "schemaId" : "e_learning",
    "question" : "Find the names and descriptions of courses that belong to the subject named \"Computer Science\"."
  },
  {
    "query" : "query { courses ( where : { subject : { subject_name : { _eq : \"Computer Science\" } } } ) { course_name course_description } }",
    "schemaId" : "e_learning",
    "question" : "What are the names and descriptions of the all courses under the \"Computer Science\" subject?"
  },
  {
    "query" : "query { student_course_enrolment ( where : { course : { course_name : { _eq : \"Spanish\" } } } ) { date_of_enrolment } }",
    "schemaId" : "e_learning",
    "question" : "What is the date of enrollment of the course named \"Spanish\"?"
  },
  {
    "query" : "query { student_course_enrolment ( where : { course : { course_name : { _eq : \"Spanish\" } } } ) { date_of_enrolment } }",
    "schemaId" : "e_learning",
    "question" : "Find the the date of enrollment of the \"Spanish\" course."
  },
  {
    "query" : "query { student_course_enrolment ( where : { student_tests_takens : { test_result : { _eq : \"Pass\" } } } ) { date_of_enrolment } }",
    "schemaId" : "e_learning",
    "question" : "What are the enrollment dates of all the tests that have result \"Pass\"?"
  },
  {
    "query" : "query { student_course_enrolment ( where : { student_tests_takens : { test_result : { _eq : \"Pass\" } } } ) { date_of_enrolment } }",
    "schemaId" : "e_learning",
    "question" : "Find the enrollment date for all the tests that have \"Pass\" result."
  },
  {
    "query" : "query { student_course_enrolment ( where : { student_tests_takens : { test_result : { _eq : \"Fail\" } } } ) { date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "What are the completion dates of all the tests that have result \"Fail\"?"
  },
  {
    "query" : "query { student_course_enrolment ( where : { student_tests_takens : { test_result : { _eq : \"Fail\" } } } ) { date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "Return the completion date for all the tests that have \"Fail\" result."
  },
  {
    "query" : "query { student_course_enrolment ( where : { student : { personal_name : { _eq : \"Karson\" } } } ) { date_of_enrolment date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "List the dates of enrollment and completion of the student with personal name \"Karson\"."
  },
  {
    "query" : "query { student_course_enrolment ( where : { student : { personal_name : { _eq : \"Karson\" } } } ) { date_of_enrolment date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "On what dates did the student whose personal name is \"Karson\" enroll in and complete the courses?"
  },
  {
    "query" : "query { student_course_enrolment ( where : { _and : { student : { family_name : { _eq : \"Zieme\" } , personal_name : { _eq : \"Bernie\" } } } } ) { date_of_enrolment date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\"."
  },
  {
    "query" : "query { student_course_enrolment ( where : { _and : { student : { family_name : { _eq : \"Zieme\" } , personal_name : { _eq : \"Bernie\" } } } } ) { date_of_enrolment date_of_completion } }",
    "schemaId" : "e_learning",
    "question" : "On what dates did the student with family name \"Zieme\" and personal name \"Bernie\" enroll in and complete the courses?"
  },
  {
    "query" : "query { county_aggregate { aggregate { count } } }",
    "schemaId" : "election",
    "question" : "How many counties are there in total?"
  },
  {
    "query" : "query { county_aggregate { aggregate { count } } }",
    "schemaId" : "election",
    "question" : "Count the total number of counties."
  },
  {
    "query" : "query { county { county_name population } }",
    "schemaId" : "election",
    "question" : "Show the county name and population of all counties."
  },
  {
    "query" : "query { county { county_name population } }",
    "schemaId" : "election",
    "question" : "What are the name and population of each county?"
  },
  {
    "query" : "query { county_aggregate { aggregate { avg { population } } } }",
    "schemaId" : "election",
    "question" : "Show the average population of all counties."
  },
  {
    "query" : "query { county_aggregate { aggregate { avg { population } } } }",
    "schemaId" : "election",
    "question" : "On average how large is the population of the counties?"
  },
  {
    "query" : "query { county_aggregate { aggregate { max { population } min { population } } } }",
    "schemaId" : "election",
    "question" : "Return the maximum and minimum population among all counties."
  },
  {
    "query" : "query { county_aggregate { aggregate { max { population } min { population } } } }",
    "schemaId" : "election",
    "question" : "What are the maximum and minimum population of the counties?"
  },
  {
    "query" : "query { election ( distinct_on : district ) { district } }",
    "schemaId" : "election",
    "question" : "Show all the distinct districts for elections."
  },
  {
    "query" : "query { election ( distinct_on : district ) { district } }",
    "schemaId" : "election",
    "question" : "What are the distinct districts for elections?"
  },
  {
    "query" : "query { county ( where : { county_name : { _eq : \"Howard\" } } ) { zip_code } }",
    "schemaId" : "election",
    "question" : "Show the zip code of the county with name \"Howard\"."
  },
  {
    "query" : "query { county ( where : { county_name : { _eq : \"Howard\" } } ) { zip_code } }",
    "schemaId" : "election",
    "question" : "What is the zip code the county named \"Howard\" is located in?"
  },
  {
    "query" : "query { election ( where : { district : { _eq : 1 } } ) { delegate } }",
    "schemaId" : "election",
    "question" : "Show the delegate from district 1 in election."
  },
  {
    "query" : "query { election ( where : { district : { _eq : 1 } } ) { delegate } }",
    "schemaId" : "election",
    "question" : "Who is the delegate of district 1 in the elections?"
  },
  {
    "query" : "query { election { delegate committee } }",
    "schemaId" : "election",
    "question" : "Show the delegate and committee information of elections."
  },
  {
    "query" : "query { election { delegate committee } }",
    "schemaId" : "election",
    "question" : "What are the delegate and committee information for each election record?"
  },
  {
    "query" : "query { party_aggregate { aggregate { count } } }",
    "schemaId" : "election",
    "question" : "How many distinct governors are there?"
  },
  {
    "query" : "query { party_aggregate { aggregate { count } } }",
    "schemaId" : "election",
    "question" : "Count the number of distinct governors."
  },
  {
    "query" : "query { party ( where : { party : { _eq : \"Democratic\" } } ) { lieutenant_governor comptroller } }",
    "schemaId" : "election",
    "question" : "Show the lieutenant governor and comptroller from the democratic party."
  },
  {
    "query" : "query { party ( where : { party : { _eq : \"Democratic\" } } ) { lieutenant_governor comptroller } }",
    "schemaId" : "election",
    "question" : "Who are the lieutenant governor and comptroller from the democratic party?"
  },
  {
    "query" : "query { party ( where : { governor : { _eq : \"Eliot Spitzer\" } } , distinct_on : year ) { year } }",
    "schemaId" : "election",
    "question" : "In which distinct years was the governor \"Eliot Spitzer\"?"
  },
  {
    "query" : "query { party ( where : { governor : { _eq : \"Eliot Spitzer\" } } , distinct_on : year ) { year } }",
    "schemaId" : "election",
    "question" : "Find the distinct years when the governor was named \"Eliot Spitzer\"."
  },
  {
    "query" : "query { election { committee counties_represented delegate district election_id first_elected party } }",
    "schemaId" : "election",
    "question" : "Show all the information about election."
  },
  {
    "query" : "query { election { committee counties_represented delegate district election_id first_elected party } }",
    "schemaId" : "election",
    "question" : "Return all the information for each election record."
  },
  {
    "query" : "query { election { delegate county { county_name } } }",
    "schemaId" : "election",
    "question" : "Show the delegates and the names of county they belong to."
  },
  {
    "query" : "query { election { delegate county { county_name } } }",
    "schemaId" : "election",
    "question" : "What are the delegate and name of the county they belong to, for each county?"
  },
  {
    "query" : "query { election ( where : { county : { population : { _lt : 100000.0 } } } ) { delegate } }",
    "schemaId" : "election",
    "question" : "Which delegates are from counties with population smaller than 100000?"
  },
  {
    "query" : "query { election ( where : { county : { population : { _lt : 100000.0 } } } ) { delegate } }",
    "schemaId" : "election",
    "question" : "Find the delegates who are from counties with population below 100000."
  },
  {
    "query" : "query { election_aggregate ( where : { county : { population : { _gt : 50000.0 } } } ) { aggregate { count } } }",
    "schemaId" : "election",
    "question" : "How many distinct delegates are from counties with population larger than 50000?"
  },
  {
    "query" : "query { election_aggregate ( where : { county : { population : { _gt : 50000.0 } } } ) { aggregate { count } } }",
    "schemaId" : "election",
    "question" : "Count the number of distinct delegates who are from counties with population above 50000."
  },
  {
    "query" : "query { county ( where : { elections : { committee : { _eq : \"Appropriations\" } } } ) { county_name } }",
    "schemaId" : "election",
    "question" : "What are the names of the county that the delegates on \"Appropriations\" committee belong to?"
  },
  {
    "query" : "query { county ( where : { elections : { committee : { _eq : \"Appropriations\" } } } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Which county do the delegates on \"Appropriations\" committee belong to? Give me the county names."
  },
  {
    "query" : "query { election { delegate partyByParty { party } } }",
    "schemaId" : "election",
    "question" : "Show the delegates and the names of the party they belong to."
  },
  {
    "query" : "query { election { delegate partyByParty { party } } }",
    "schemaId" : "election",
    "question" : "For each delegate, find the names of the party they are part of."
  },
  {
    "query" : "query { party ( where : { elections : { district : { _eq : 1 } } } ) { governor } }",
    "schemaId" : "election",
    "question" : "Who were the governors of the parties associated with delegates from district 1?"
  },
  {
    "query" : "query { party ( where : { elections : { district : { _eq : 1 } } } ) { governor } }",
    "schemaId" : "election",
    "question" : "Find the parties associated with the delegates from district 1. Who served as governors of the parties?"
  },
  {
    "query" : "query { party ( where : { _or : [ { elections : { district : { _eq : 1 } } } , { elections : { district : { _eq : 2 } } } ] } ) { comptroller } }",
    "schemaId" : "election",
    "question" : "Who were the comptrollers of the parties associated with the delegates from district 1 or district 2?"
  },
  {
    "query" : "query { party ( where : { _or : [ { elections : { district : { _eq : 1 } } } , { elections : { district : { _eq : 2 } } } ] } ) { comptroller } }",
    "schemaId" : "election",
    "question" : "Find the parties associated with the delegates from district 1 or 2. Who served as comptrollers of the parties?"
  },
  {
    "query" : "query { election ( where : { partyByParty : { party : { _eq : \"Democratic\" } } } ) { committee } }",
    "schemaId" : "election",
    "question" : "Return all the committees that have delegates from Democratic party."
  },
  {
    "query" : "query { election ( where : { partyByParty : { party : { _eq : \"Democratic\" } } } ) { committee } }",
    "schemaId" : "election",
    "question" : "Which committees have delegates from the Democratic party?"
  },
  {
    "query" : "query { county ( order_by : { population : asc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Return the names of all counties sorted by population in ascending order."
  },
  {
    "query" : "query { county ( order_by : { population : asc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Sort the names of all counties in ascending order of population."
  },
  {
    "query" : "query { county ( order_by : { county_name : desc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Return the names of all counties sorted by county name in descending alphabetical order."
  },
  {
    "query" : "query { county ( order_by : { county_name : desc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Sort the names of all counties in descending alphabetical order."
  },
  {
    "query" : "query { county ( limit : 1 , order_by : { population : desc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Show the name of the county with the biggest population."
  },
  {
    "query" : "query { county ( limit : 1 , order_by : { population : desc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Which county has the largest population? Give me the name of the county."
  },
  {
    "query" : "query { county ( limit : 3 , order_by : { population : asc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "Show the 3 counties with the smallest population."
  },
  {
    "query" : "query { county ( limit : 3 , order_by : { population : asc } ) { county_name } }",
    "schemaId" : "election",
    "question" : "What are the 3 counties that have the smallest population? Give me the county names."
  },
  {
    "query" : "query { election_aggregate { aggregate { count } } }",
    "schemaId" : "election_representative",
    "question" : "How many elections are there?"
  },
  {
    "query" : "query { election ( order_by : { votes : desc } ) { votes } }",
    "schemaId" : "election_representative",
    "question" : "List the votes of elections in descending order."
  },
  {
    "query" : "query { election { date vote_percent } }",
    "schemaId" : "election_representative",
    "question" : "List the dates and vote percents of elections."
  },
  {
    "query" : "query { election_aggregate { aggregate { min { vote_percent } max { vote_percent } } } }",
    "schemaId" : "election_representative",
    "question" : "What are the minimum and maximum vote percents of elections?"
  },
  {
    "query" : "query { representative { name party } }",
    "schemaId" : "election_representative",
    "question" : "What are the names and parties of representatives?"
  },
  {
    "query" : "query { representative ( where : { party : { _neq : \"Republican\" } } ) { name } }",
    "schemaId" : "election_representative",
    "question" : "What are the names of representatives whose party is not \"Republican\"?"
  },
  {
    "query" : "query { representative ( where : { _or : [ { state : { _eq : \"New York\" } } , { state : { _eq : \"Indiana\" } } ] } ) { lifespan } }",
    "schemaId" : "election_representative",
    "question" : "What are the life spans of representatives from New York state or Indiana state?"
  },
  {
    "query" : "query { representative { name elections { date } } }",
    "schemaId" : "election_representative",
    "question" : "What are the names of representatives and the dates of elections they participated in."
  },
  {
    "query" : "query { representative ( where : { elections : { votes : { _gt : 10000.0 } } } ) { name } }",
    "schemaId" : "election_representative",
    "question" : "What are the names of representatives with more than 10000 votes in election?"
  },
  {
    "query" : "query { representative ( order_by : { elections_aggregate : { max : { votes : desc_nulls_last } } } ) { name } }",
    "schemaId" : "election_representative",
    "question" : "What are the names of representatives in descending order of votes?"
  },
  {
    "query" : "query { representative ( limit : 1 , order_by : { elections_aggregate : { min : { votes : asc } } } ) { party } }",
    "schemaId" : "election_representative",
    "question" : "What is the party of the representative that has the smallest number of votes."
  },
  {
    "query" : "query { representative ( order_by : { elections_aggregate : { max : { vote_percent : desc_nulls_last } } } ) { lifespan } }",
    "schemaId" : "election_representative",
    "question" : "What are the lifespans of representatives in descending order of vote percent?"
  },
  {
    "query" : "query { election_aggregate ( where : { representative : { party : { _eq : \"Republican\" } } } ) { aggregate { avg { votes } } } }",
    "schemaId" : "election_representative",
    "question" : "What is the average number of votes of representatives from party \"Republican\"?"
  },
  {
    "query" : "query { representative_aggregate { aggregate { count } } }",
    "schemaId" : "election_representative",
    "question" : "How many distinct parties are there for representatives?"
  },
  {
    "query" : "query { artwork_aggregate { aggregate { count } } }",
    "schemaId" : "entertainment_awards",
    "question" : "How many artworks are there?"
  },
  {
    "query" : "query { artwork ( order_by : { name : asc } ) { name } }",
    "schemaId" : "entertainment_awards",
    "question" : "List the name of artworks in ascending alphabetical order."
  },
  {
    "query" : "query { artwork ( where : { type : { _neq : \"Program Talent Show\" } } ) { name } }",
    "schemaId" : "entertainment_awards",
    "question" : "List the name of artworks whose type is not \"Program Talent Show\"."
  },
  {
    "query" : "query { festival_detail { festival_name location } }",
    "schemaId" : "entertainment_awards",
    "question" : "What are the names and locations of festivals?"
  },
  {
    "query" : "query { festival_detail ( order_by : { year : asc } ) { chair_name } }",
    "schemaId" : "entertainment_awards",
    "question" : "What are the names of the chairs of festivals, sorted in ascending order of the year held?"
  },
  {
    "query" : "query { festival_detail ( limit : 1 , order_by : { num_of_audience : desc } ) { location } }",
    "schemaId" : "entertainment_awards",
    "question" : "What is the location of the festival with the largest number of audience?"
  },
  {
    "query" : "query { festival_detail ( where : { year : { _eq : 2007 } } ) { festival_name } }",
    "schemaId" : "entertainment_awards",
    "question" : "What are the names of festivals held in year 2007?"
  },
  {
    "query" : "query { festival_detail_aggregate { aggregate { avg { num_of_audience } } } }",
    "schemaId" : "entertainment_awards",
    "question" : "What is the average number of audience for festivals?"
  },
  {
    "query" : "query { festival_detail ( limit : 3 , order_by : { year : desc } ) { festival_name } }",
    "schemaId" : "entertainment_awards",
    "question" : "Show the names of the three most recent festivals."
  },
  {
    "query" : "query { artwork { name nominations { festival_detail { festival_name } } } }",
    "schemaId" : "entertainment_awards",
    "question" : "For each nomination, show the name of the artwork and name of the festival where it is nominated."
  },
  {
    "query" : "query { festival_detail ( where : { nominations : { artwork : { type : { _eq : \"Program Talent Show\" } } } } ) { festival_name } }",
    "schemaId" : "entertainment_awards",
    "question" : "Show the names of festivals that have nominated artworks of type \"Program Talent Show\"."
  },
  {
    "query" : "query { festival_detail ( where : { _or : [ { year : { _eq : 2008 } } , { year : { _eq : 2010 } } ] } ) { num_of_audience } }",
    "schemaId" : "entertainment_awards",
    "question" : "Show the number of audience in year 2008 or 2010."
  },
  {
    "query" : "query { festival_detail_aggregate { aggregate { sum { num_of_audience } } } }",
    "schemaId" : "entertainment_awards",
    "question" : "What are the total number of the audiences who visited any of the festivals?"
  },
  {
    "query" : "query { entrepreneur_aggregate { aggregate { count } } }",
    "schemaId" : "entrepreneur",
    "question" : "How many entrepreneurs are there?"
  },
  {
    "query" : "query { entrepreneur_aggregate { aggregate { count } } }",
    "schemaId" : "entrepreneur",
    "question" : "Count the number of entrepreneurs."
  },
  {
    "query" : "query { entrepreneur ( order_by : { money_requested : desc } ) { company } }",
    "schemaId" : "entrepreneur",
    "question" : "List the companies of entrepreneurs in descending order of money requested."
  },
  {
    "query" : "query { entrepreneur ( order_by : { money_requested : desc } ) { company } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the companies of entrepreneurs, ordered descending by amount of money requested?"
  },
  {
    "query" : "query { entrepreneur { company investor } }",
    "schemaId" : "entrepreneur",
    "question" : "List the companies and the investors of entrepreneurs."
  },
  {
    "query" : "query { entrepreneur { company investor } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the companies and investors that correspond to each entrepreneur?"
  },
  {
    "query" : "query { entrepreneur_aggregate { aggregate { avg { money_requested } } } }",
    "schemaId" : "entrepreneur",
    "question" : "What is the average money requested by all entrepreneurs?"
  },
  {
    "query" : "query { entrepreneur_aggregate { aggregate { avg { money_requested } } } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the average money requested across all entrepreneurs."
  },
  {
    "query" : "query { people ( order_by : { weight : asc } ) { name } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the names of people in ascending order of weight?"
  },
  {
    "query" : "query { people ( order_by : { weight : asc } ) { name } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the names of people, ordered by weight ascending."
  },
  {
    "query" : "query { people { name } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the names of entrepreneurs?"
  },
  {
    "query" : "query { people { name } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the names of entrepreneurs."
  },
  {
    "query" : "query { people ( where : { entrepreneur : { investor : { _neq : \"Rachel Elnaugh\" } } } ) { name } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the names of entrepreneurs whose investor is not \"Rachel Elnaugh\"?"
  },
  {
    "query" : "query { people ( where : { entrepreneur : { investor : { _neq : \"Rachel Elnaugh\" } } } ) { name } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the names of entrepreneurs do no not have the investor Rachel Elnaugh."
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { height : asc } ) { weight } }",
    "schemaId" : "entrepreneur",
    "question" : "What is the weight of the shortest person?"
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { height : asc } ) { weight } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the weight of the shortest person."
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { weight : desc } ) { name } }",
    "schemaId" : "entrepreneur",
    "question" : "What is the name of the entrepreneur with the greatest weight?"
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { weight : desc } ) { name } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the name of the heaviest entrepreneur."
  },
  {
    "query" : "query { entrepreneur_aggregate ( where : { person : { height : { _gt : 1.85 } } } ) { aggregate { sum { money_requested } } } }",
    "schemaId" : "entrepreneur",
    "question" : "What is the total money requested by entrepreneurs with height more than 1.85?"
  },
  {
    "query" : "query { entrepreneur_aggregate ( where : { person : { height : { _gt : 1.85 } } } ) { aggregate { sum { money_requested } } } }",
    "schemaId" : "entrepreneur",
    "question" : "Give the total money requested by entrepreneurs who are taller than 1.85."
  },
  {
    "query" : "query { people ( where : { _or : [ { entrepreneur : { investor : { _eq : \"Simon Woodroffe\" } } } , { entrepreneur : { investor : { _eq : \"Peter Jones\" } } } ] } ) { date_of_birth } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?"
  },
  {
    "query" : "query { people ( where : { _or : [ { entrepreneur : { investor : { _eq : \"Simon Woodroffe\" } } } , { entrepreneur : { investor : { _eq : \"Peter Jones\" } } } ] } ) { date_of_birth } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the dates of birth for entrepreneurs who have either the investor Simon Woodroffe or Peter Jones."
  },
  {
    "query" : "query { people ( order_by : { entrepreneur : { money_requested : desc } } ) { weight } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the weights of entrepreneurs in descending order of money requested?"
  },
  {
    "query" : "query { people ( order_by : { entrepreneur : { money_requested : desc } } ) { weight } }",
    "schemaId" : "entrepreneur",
    "question" : "Return the weights of entrepreneurs, ordered descending by amount of money requested."
  },
  {
    "query" : "query { people ( order_by : { entrepreneur : { money_requested : asc } } ) { name entrepreneur { company } } }",
    "schemaId" : "entrepreneur",
    "question" : "List the names of entrepreneurs and their companies in descending order of money requested?"
  },
  {
    "query" : "query { people ( order_by : { entrepreneur : { money_requested : asc } } ) { name entrepreneur { company } } }",
    "schemaId" : "entrepreneur",
    "question" : "What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?"
  },
  {
    "query" : "query { entrepreneur_aggregate { aggregate { count } } }",
    "schemaId" : "entrepreneur",
    "question" : "How many distinct companies are there?"
  },
  {
    "query" : "query { entrepreneur_aggregate { aggregate { count } } }",
    "schemaId" : "entrepreneur",
    "question" : "Count the number of different companies."
  },
  {
    "query" : "query { entrepreneur ( limit : 1 , order_by : { person : { height : desc } } ) { company } }",
    "schemaId" : "entrepreneur",
    "question" : "Show the company of the tallest entrepreneur."
  },
  {
    "query" : "query { entrepreneur ( limit : 1 , order_by : { person : { height : desc } } ) { company } }",
    "schemaId" : "entrepreneur",
    "question" : "Which company was started by the entrepreneur with the greatest height?"
  },
  {
    "query" : "query { item ( where : { title : { _eq : \"orange\" } } ) { i_id } }",
    "schemaId" : "epinions_1",
    "question" : "Find the id of the item whose title is \"orange\"."
  },
  {
    "query" : "query { item { title } }",
    "schemaId" : "epinions_1",
    "question" : "List all information in the item table."
  },
  {
    "query" : "query { review_aggregate { aggregate { count } } }",
    "schemaId" : "epinions_1",
    "question" : "Find the number of reviews."
  },
  {
    "query" : "query { useracct_aggregate { aggregate { count } } }",
    "schemaId" : "epinions_1",
    "question" : "How many users are there?"
  },
  {
    "query" : "query { review_aggregate { aggregate { avg { rating } max { rating } } } }",
    "schemaId" : "epinions_1",
    "question" : "Find the average and maximum rating of all reviews."
  },
  {
    "query" : "query { review_aggregate { aggregate { min { rank } } } }",
    "schemaId" : "epinions_1",
    "question" : "Find the highest rank of all reviews."
  },
  {
    "query" : "query { review_aggregate { aggregate { count } } }",
    "schemaId" : "epinions_1",
    "question" : "How many different users wrote some reviews?"
  },
  {
    "query" : "query { review_aggregate { aggregate { count } } }",
    "schemaId" : "epinions_1",
    "question" : "How many different items were reviewed by some users?"
  },
  {
    "query" : "query { item ( where : { reviews : { rating : { _eq : 10 } } } ) { title } }",
    "schemaId" : "epinions_1",
    "question" : "Find the names of goods that receive a rating of 10."
  },
  {
    "query" : "query { item ( where : { reviews : { rating : { _lt : 5 } } } ) { title } }",
    "schemaId" : "epinions_1",
    "question" : "Find the titles of items that received any rating below 5."
  },
  {
    "query" : "query { item ( order_by : { title : asc } ) { title } }",
    "schemaId" : "epinions_1",
    "question" : "List the titles of all items in alphabetic order ."
  },
  {
    "query" : "query { useracct ( limit : 1 , order_by : { reviews_aggregate : { max : { rating : desc_nulls_last } } } ) { name } }",
    "schemaId" : "epinions_1",
    "question" : "Find the name of the user who gave the highest rating."
  },
  {
    "query" : "query { farm_aggregate { aggregate { count } } }",
    "schemaId" : "farm",
    "question" : "How many farms are there?"
  },
  {
    "query" : "query { farm_aggregate { aggregate { count } } }",
    "schemaId" : "farm",
    "question" : "Count the number of farms."
  },
  {
    "query" : "query { farm ( order_by : { total_horses : asc } ) { total_horses } }",
    "schemaId" : "farm",
    "question" : "List the total number of horses on farms in ascending order."
  },
  {
    "query" : "query { farm ( order_by : { total_horses : asc } ) { total_horses } }",
    "schemaId" : "farm",
    "question" : "What is the total horses record for each farm, sorted ascending?"
  },
  {
    "query" : "query { farm_competition ( where : { theme : { _neq : \"Aliens\" } } ) { hosts } }",
    "schemaId" : "farm",
    "question" : "What are the hosts of competitions whose theme is not \"Aliens\"?"
  },
  {
    "query" : "query { farm_competition ( where : { theme : { _neq : \"Aliens\" } } ) { hosts } }",
    "schemaId" : "farm",
    "question" : "Return the hosts of competitions for which the theme is not Aliens?"
  },
  {
    "query" : "query { farm_competition ( order_by : { year : asc } ) { theme } }",
    "schemaId" : "farm",
    "question" : "What are the themes of farm competitions sorted by year in ascending order?"
  },
  {
    "query" : "query { farm_competition ( order_by : { year : asc } ) { theme } }",
    "schemaId" : "farm",
    "question" : "Return the themes of farm competitions, sorted by year ascending."
  },
  {
    "query" : "query { farm_aggregate ( where : { total_horses : { _gt : 5000.0 } } ) { aggregate { avg { working_horses } } } }",
    "schemaId" : "farm",
    "question" : "What is the average number of working horses of farms with more than 5000 total number of horses?"
  },
  {
    "query" : "query { farm_aggregate ( where : { total_horses : { _gt : 5000.0 } } ) { aggregate { avg { working_horses } } } }",
    "schemaId" : "farm",
    "question" : "Give the average number of working horses on farms with more than 5000 total horses."
  },
  {
    "query" : "query { farm_aggregate { aggregate { max { cows } min { cows } } } }",
    "schemaId" : "farm",
    "question" : "What are the maximum and minimum number of cows across all farms."
  },
  {
    "query" : "query { farm_aggregate { aggregate { max { cows } min { cows } } } }",
    "schemaId" : "farm",
    "question" : "Return the maximum and minimum number of cows across all farms."
  },
  {
    "query" : "query { city_aggregate { aggregate { count } } }",
    "schemaId" : "farm",
    "question" : "How many different statuses do cities have?"
  },
  {
    "query" : "query { city_aggregate { aggregate { count } } }",
    "schemaId" : "farm",
    "question" : "Count the number of different statuses."
  },
  {
    "query" : "query { city ( order_by : { population : desc } ) { official_name } }",
    "schemaId" : "farm",
    "question" : "List official names of cities in descending order of population."
  },
  {
    "query" : "query { city ( order_by : { population : desc } ) { official_name } }",
    "schemaId" : "farm",
    "question" : "What are the official names of cities, ordered descending by population?"
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { population : desc } ) { official_name status } }",
    "schemaId" : "farm",
    "question" : "List the official name and status of the city with the largest population."
  },
  {
    "query" : "query { city ( limit : 1 , order_by : { population : desc } ) { official_name status } }",
    "schemaId" : "farm",
    "question" : "What is the official name and status of the city with the most residents?"
  },
  {
    "query" : "query { farm_competition { year city { official_name } } }",
    "schemaId" : "farm",
    "question" : "Show the years and the official names of the host cities of competitions."
  },
  {
    "query" : "query { farm_competition { year city { official_name } } }",
    "schemaId" : "farm",
    "question" : "Give the years and official names of the cities of each competition."
  },
  {
    "query" : "query { farm_competition ( where : { city : { population : { _gt : 1000.0 } } } ) { theme } }",
    "schemaId" : "farm",
    "question" : "Please show the themes of competitions with host cities having populations larger than 1000."
  },
  {
    "query" : "query { farm_competition ( where : { city : { population : { _gt : 1000.0 } } } ) { theme } }",
    "schemaId" : "farm",
    "question" : "What are the themes of competitions that have corresponding host cities with more than 1000 residents?"
  },
  {
    "query" : "query { city ( where : { _or : [ { population : { _gt : 1500.0 } } , { population : { _lt : 500.0 } } ] } ) { official_name } }",
    "schemaId" : "farm",
    "question" : "Find the official names of cities with population bigger than 1500 or smaller than 500."
  },
  {
    "query" : "query { city ( where : { _or : [ { population : { _gt : 1500.0 } } , { population : { _lt : 500.0 } } ] } ) { official_name } }",
    "schemaId" : "farm",
    "question" : "What are the official names of cities that have population over 1500 or less than 500?"
  },
  {
    "query" : "query { city ( where : { status : { _neq : \"Village\" } } ) { census_ranking } }",
    "schemaId" : "farm",
    "question" : "Show the census ranking of cities whose status are not \"Village\"."
  },
  {
    "query" : "query { city ( where : { status : { _neq : \"Village\" } } ) { census_ranking } }",
    "schemaId" : "farm",
    "question" : "What are the census rankings of cities that do not have the status \"Village\"?"
  },
  {
    "query" : "query { film_aggregate { aggregate { count } } }",
    "schemaId" : "film_rank",
    "question" : "How many film are there?"
  },
  {
    "query" : "query { film_aggregate { aggregate { count } } }",
    "schemaId" : "film_rank",
    "question" : "Count the number of films."
  },
  {
    "query" : "query { film ( distinct_on : director ) { director } }",
    "schemaId" : "film_rank",
    "question" : "List the distinct director of all films."
  },
  {
    "query" : "query { film ( distinct_on : director ) { director } }",
    "schemaId" : "film_rank",
    "question" : "What are the different film Directors?"
  },
  {
    "query" : "query { film_aggregate { aggregate { avg { gross_in_dollar } } } }",
    "schemaId" : "film_rank",
    "question" : "What is the average ticket sales gross in dollars of films?"
  },
  {
    "query" : "query { film_aggregate { aggregate { avg { gross_in_dollar } } } }",
    "schemaId" : "film_rank",
    "question" : "Return the average gross sales in dollars across all films."
  },
  {
    "query" : "query { film_market_estimation { low_estimate high_estimate } }",
    "schemaId" : "film_rank",
    "question" : "What are the low and high estimates of film markets?"
  },
  {
    "query" : "query { film_market_estimation { low_estimate high_estimate } }",
    "schemaId" : "film_rank",
    "question" : "Return the low and high estimates for all film markets."
  },
  {
    "query" : "query { film_market_estimation ( where : { year : { _eq : 1995 } } ) { type } }",
    "schemaId" : "film_rank",
    "question" : "What are the types of film market estimations in year 1995?"
  },
  {
    "query" : "query { film_market_estimation ( where : { year : { _eq : 1995 } } ) { type } }",
    "schemaId" : "film_rank",
    "question" : "Return the types of film market estimations in 1995."
  },
  {
    "query" : "query { market_aggregate { aggregate { max { number_cities } min { number_cities } } } }",
    "schemaId" : "film_rank",
    "question" : "What are the maximum and minimum number of cities in all markets."
  },
  {
    "query" : "query { market_aggregate { aggregate { max { number_cities } min { number_cities } } } }",
    "schemaId" : "film_rank",
    "question" : "Return the maximum and minimum number of cities across all markets."
  },
  {
    "query" : "query { market_aggregate ( where : { number_cities : { _lt : 300 } } ) { aggregate { count } } }",
    "schemaId" : "film_rank",
    "question" : "How many markets have number of cities smaller than 300?"
  },
  {
    "query" : "query { market_aggregate ( where : { number_cities : { _lt : 300 } } ) { aggregate { count } } }",
    "schemaId" : "film_rank",
    "question" : "Count the number of markets that have a number of cities lower than 300."
  },
  {
    "query" : "query { market ( order_by : { country : asc } ) { country } }",
    "schemaId" : "film_rank",
    "question" : "List all countries of markets in ascending alphabetical order."
  },
  {
    "query" : "query { market ( order_by : { country : asc } ) { country } }",
    "schemaId" : "film_rank",
    "question" : "What are the countries for each market, ordered alphabetically?"
  },
  {
    "query" : "query { market ( order_by : { number_cities : desc } ) { country } }",
    "schemaId" : "film_rank",
    "question" : "List all countries of markets in descending order of number of cities."
  },
  {
    "query" : "query { market ( order_by : { number_cities : desc } ) { country } }",
    "schemaId" : "film_rank",
    "question" : "What are the countries for each market ordered by decreasing number of cities?"
  },
  {
    "query" : "query { film { title film_market_estimations { type } } }",
    "schemaId" : "film_rank",
    "question" : "Please show the titles of films and the types of market estimations."
  },
  {
    "query" : "query { film { title film_market_estimations { type } } }",
    "schemaId" : "film_rank",
    "question" : "What are the titles of films and corresponding types of market estimations?"
  },
  {
    "query" : "query { film ( where : { film_market_estimations : { year : { _eq : 1995 } } } , distinct_on : director ) { director } }",
    "schemaId" : "film_rank",
    "question" : "Show the distinct director of films with market estimation in the year of 1995."
  },
  {
    "query" : "query { film ( where : { film_market_estimations : { year : { _eq : 1995 } } } , distinct_on : director ) { director } }",
    "schemaId" : "film_rank",
    "question" : "Who are the different directors of films which had market estimation in 1995?"
  },
  {
    "query" : "query { market_aggregate ( where : { film_market_estimations : { low_estimate : { _gt : 10000.0 } } } ) { aggregate { avg { number_cities } } } }",
    "schemaId" : "film_rank",
    "question" : "What is the average number of cities of markets with low film market estimate bigger than 10000?"
  },
  {
    "query" : "query { market_aggregate ( where : { film_market_estimations : { low_estimate : { _gt : 10000.0 } } } ) { aggregate { avg { number_cities } } } }",
    "schemaId" : "film_rank",
    "question" : "Give the average number of cities within markets that had a low market estimation larger than 10000?"
  },
  {
    "query" : "query { market { country film_market_estimations { year } } }",
    "schemaId" : "film_rank",
    "question" : "Please list the countries and years of film market estimations."
  },
  {
    "query" : "query { market { country film_market_estimations { year } } }",
    "schemaId" : "film_rank",
    "question" : "What are the countries of markets and their corresponding years of market estimation?"
  },
  {
    "query" : "query { film_market_estimation ( order_by : { year : desc } , where : { market : { country : { _eq : \"Japan\" } } } ) { year } }",
    "schemaId" : "film_rank",
    "question" : "Please list the years of film market estimations when the market is in country \"Japan\" in descending order."
  },
  {
    "query" : "query { film_market_estimation ( order_by : { year : desc } , where : { market : { country : { _eq : \"Japan\" } } } ) { year } }",
    "schemaId" : "film_rank",
    "question" : "What are the years of film market estimation for the market of Japan, ordered by year descending?"
  },
  {
    "query" : "query { film ( where : { studio : { _like : \"%Universal%\" } } ) { title studio } }",
    "schemaId" : "film_rank",
    "question" : "Find the titles and studios of the films that are produced by some film studios that contained the word \"Universal\"."
  },
  {
    "query" : "query { film ( where : { studio : { _like : \"%Universal%\" } } ) { title studio } }",
    "schemaId" : "film_rank",
    "question" : "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?"
  },
  {
    "query" : "query { film ( limit : 1 , order_by : { film_market_estimations_aggregate : { max: { high_estimate : desc_nulls_last } } } ) { title } }",
    "schemaId" : "film_rank",
    "question" : "What is the title of the film that has the highest high market estimation."
  },
  {
    "query" : "query { film ( limit : 1 , order_by : { film_market_estimations_aggregate : { max: { high_estimate : desc_nulls_last } } } ) { title } }",
    "schemaId" : "film_rank",
    "question" : "Return the title of the film with the highest high estimate?"
  },
  {
    "query" : "query { aircraft_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "How many aircrafts do we have?"
  },
  {
    "query" : "query { aircraft_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "How many aircrafts exist in the database?"
  },
  {
    "query" : "query { aircraft { name distance } }",
    "schemaId" : "flight_1",
    "question" : "Show name and distance for all aircrafts."
  },
  {
    "query" : "query { aircraft { name distance } }",
    "schemaId" : "flight_1",
    "question" : "What are the names and distances for all airplanes?"
  },
  {
    "query" : "query { aircraft ( where : { distance : { _gt : 1000 } } ) { aid } }",
    "schemaId" : "flight_1",
    "question" : "Show ids for all aircrafts with more than 1000 distance."
  },
  {
    "query" : "query { aircraft ( where : { distance : { _gt : 1000 } } ) { aid } }",
    "schemaId" : "flight_1",
    "question" : "What are the ids of all aircrafts that can cover a distance of more than 1000?"
  },
  {
    "query" : "query { aircraft_aggregate ( where : { distance : { _gte : 1000 , _lte : 5000 } } ) { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "How many aircrafts have distance between 1000 and 5000?"
  },
  {
    "query" : "query { aircraft_aggregate ( where : { distance : { _gte : 1000 , _lte : 5000 } } ) { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "What is the count of aircrafts that have a distance between 1000 and 5000?"
  },
  {
    "query" : "query { aircraft ( where : { aid : { _eq : 12 } } ) { name distance } }",
    "schemaId" : "flight_1",
    "question" : "What is the name and distance for aircraft with id 12?"
  },
  {
    "query" : "query { aircraft ( where : { aid : { _eq : 12 } } ) { name distance } }",
    "schemaId" : "flight_1",
    "question" : "What is the name and distance for the aircraft that has an id of 12?"
  },
  {
    "query" : "query { aircraft_aggregate { aggregate { min { distance } avg { distance } max { distance } } } }",
    "schemaId" : "flight_1",
    "question" : "What is the minimum, average, and maximum distance of all aircrafts."
  },
  {
    "query" : "query { aircraft_aggregate { aggregate { min { distance } avg { distance } max { distance } } } }",
    "schemaId" : "flight_1",
    "question" : "Return the minimum, average and maximum distances traveled across all aircrafts."
  },
  {
    "query" : "query { aircraft ( limit : 1 , order_by : { distance : desc } ) { aid name } }",
    "schemaId" : "flight_1",
    "question" : "Show the id and name of the aircraft with the maximum distance."
  },
  {
    "query" : "query { aircraft ( limit : 1 , order_by : { distance : desc } ) { aid name } }",
    "schemaId" : "flight_1",
    "question" : "What is the id and name of the aircraft that can cover the maximum distance?"
  },
  {
    "query" : "query { aircraft ( limit : 3 , order_by : { distance : asc } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "Show the name of aircrafts with top three lowest distances."
  },
  {
    "query" : "query { aircraft ( limit : 3 , order_by : { distance : asc } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "What are the aircrafts with top 3 shortest lengthes? List their names."
  },
  {
    "query" : "query { employee_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "How many employees do we have?"
  },
  {
    "query" : "query { employee_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "What is the number of employees?"
  },
  {
    "query" : "query { employee ( order_by : { salary : asc } ) { name salary } }",
    "schemaId" : "flight_1",
    "question" : "Show name and salary for all employees sorted by salary."
  },
  {
    "query" : "query { employee ( order_by : { salary : asc } ) { name salary } }",
    "schemaId" : "flight_1",
    "question" : "What is the name and salary of all employees in order of salary?"
  },
  {
    "query" : "query { employee ( where : { salary : { _gt : 100000 } } ) { eid } }",
    "schemaId" : "flight_1",
    "question" : "Show ids for all employees with at least 100000 salary."
  },
  {
    "query" : "query { employee ( where : { salary : { _gt : 100000 } } ) { eid } }",
    "schemaId" : "flight_1",
    "question" : "What is the id of every employee who has at least a salary of  100000?"
  },
  {
    "query" : "query { employee_aggregate ( where : { salary : { _gte : 100000 , _lte : 200000 } } ) { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "How many employees have salary between 100000 and 200000?"
  },
  {
    "query" : "query { employee_aggregate ( where : { salary : { _gte : 100000 , _lte : 200000 } } ) { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "What is the number of employees that have a salary between 100000 and 200000?"
  },
  {
    "query" : "query { employee ( where : { eid : { _eq : 242518965 } } ) { name salary } }",
    "schemaId" : "flight_1",
    "question" : "What is the name and salary for employee with id 242518965?"
  },
  {
    "query" : "query { employee ( where : { eid : { _eq : 242518965 } } ) { name salary } }",
    "schemaId" : "flight_1",
    "question" : "What is the name and salary of the employee with the id 242518965?"
  },
  {
    "query" : "query { employee_aggregate { aggregate { avg { salary } max { salary } } } }",
    "schemaId" : "flight_1",
    "question" : "What is average and maximum salary of all employees."
  },
  {
    "query" : "query { employee_aggregate { aggregate { avg { salary } max { salary } } } }",
    "schemaId" : "flight_1",
    "question" : "What is the average and largest salary of all employees?"
  },
  {
    "query" : "query { employee ( limit : 1 , order_by : { salary : desc } ) { eid name } }",
    "schemaId" : "flight_1",
    "question" : "Show the id and name of the employee with maximum salary."
  },
  {
    "query" : "query { employee ( limit : 1 , order_by : { salary : desc } ) { eid name } }",
    "schemaId" : "flight_1",
    "question" : "What is the id and name of the employee with the highest salary?"
  },
  {
    "query" : "query { employee ( limit : 3 , order_by : { salary : asc } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "Show the name of employees with three lowest salaries."
  },
  {
    "query" : "query { employee ( limit : 3 , order_by : { salary : asc } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "What is the name of the 3 employees who get paid the least?"
  },
  {
    "query" : "query { employee ( where : { name : { _eq : \"Mark Young\" } } ) { eid salary } }",
    "schemaId" : "flight_1",
    "question" : "Show the id and salary of Mark Young."
  },
  {
    "query" : "query { employee ( where : { name : { _eq : \"Mark Young\" } } ) { eid salary } }",
    "schemaId" : "flight_1",
    "question" : "What is the id and salary of the employee named Mark Young?"
  },
  {
    "query" : "query { flight_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "How many flights do we have?"
  },
  {
    "query" : "query { flight_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "What is the number of flights?"
  },
  {
    "query" : "query { flight ( order_by : { origin : asc } ) { flno origin destination } }",
    "schemaId" : "flight_1",
    "question" : "Show flight number, origin, destination of all flights in the alphabetical order of the departure cities."
  },
  {
    "query" : "query { flight ( order_by : { origin : asc } ) { flno origin destination } }",
    "schemaId" : "flight_1",
    "question" : "What is the flight number, origin, and destination for all flights in alphabetical order by departure cities?"
  },
  {
    "query" : "query { flight ( where : { origin : { _eq : \"Los Angeles\" } } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "Show all flight number from Los Angeles."
  },
  {
    "query" : "query { flight ( where : { origin : { _eq : \"Los Angeles\" } } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "What are the numbers of all flights coming from Los Angeles?"
  },
  {
    "query" : "query { flight ( where : { destination : { _eq : \"Honolulu\" } } ) { origin } }",
    "schemaId" : "flight_1",
    "question" : "Show origins of all flights with destination Honolulu."
  },
  {
    "query" : "query { flight ( where : { destination : { _eq : \"Honolulu\" } } ) { origin } }",
    "schemaId" : "flight_1",
    "question" : "What are the origins of all flights that are headed to Honolulu?"
  },
  {
    "query" : "query { flight ( where : { _and : { origin : { _eq : \"Los Angeles\" } , destination : { _eq : \"Honolulu\" } } } ) { departure_date arrival_date } }",
    "schemaId" : "flight_1",
    "question" : "Show me the departure date and arrival date for all flights from Los Angeles to Honolulu."
  },
  {
    "query" : "query { flight ( where : { _and : { origin : { _eq : \"Los Angeles\" } , destination : { _eq : \"Honolulu\" } } } ) { departure_date arrival_date } }",
    "schemaId" : "flight_1",
    "question" : "What are the departure and arrival dates of all flights from LA to Honolulu?"
  },
  {
    "query" : "query { flight ( where : { distance : { _gt : 2000 } } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "Show flight number for all flights with more than 2000 distance."
  },
  {
    "query" : "query { flight ( where : { distance : { _gt : 2000 } } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "What are the numbers of all flights that can cover a distance of more than 2000?"
  },
  {
    "query" : "query { flight_aggregate ( where : { _and : { destination : { _eq : \"Honolulu\" } , origin : { _eq : \"Los Angeles\" } } } ) { aggregate { avg { price } } } }",
    "schemaId" : "flight_1",
    "question" : "What is the average price for flights from Los Angeles to Honolulu."
  },
  {
    "query" : "query { flight_aggregate ( where : { _and : { destination : { _eq : \"Honolulu\" } , origin : { _eq : \"Los Angeles\" } } } ) { aggregate { avg { price } } } }",
    "schemaId" : "flight_1",
    "question" : "What is the average price for flights from LA to Honolulu?"
  },
  {
    "query" : "query { flight ( where : { price : { _gt : 300.0 } } ) { origin destination } }",
    "schemaId" : "flight_1",
    "question" : "Show origin and destination for flights with price higher than 300."
  },
  {
    "query" : "query { flight ( where : { price : { _gt : 300.0 } } ) { origin destination } }",
    "schemaId" : "flight_1",
    "question" : "What is the origin and destination for all flights whose price is higher than 300?"
  },
  {
    "query" : "query { flight ( limit : 1 , order_by : { price : desc } ) { flno distance } }",
    "schemaId" : "flight_1",
    "question" : "Show the flight number and distance of the flight with maximum price."
  },
  {
    "query" : "query { flight ( limit : 1 , order_by : { price : desc } ) { flno distance } }",
    "schemaId" : "flight_1",
    "question" : "What is the flight number and its distance for the one with the maximum price?"
  },
  {
    "query" : "query { flight ( limit : 3 , order_by : { distance : asc } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "Show the flight number of flights with three lowest distances."
  },
  {
    "query" : "query { flight ( limit : 3 , order_by : { distance : asc } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "What are the numbers of the shortest flights?"
  },
  {
    "query" : "query { flight_aggregate ( where : { origin : { _eq : \"Los Angeles\" } } ) { aggregate { avg { distance } avg { price } } } }",
    "schemaId" : "flight_1",
    "question" : "What is the average distance and average price for flights from Los Angeles."
  },
  {
    "query" : "query { flight_aggregate ( where : { origin : { _eq : \"Los Angeles\" } } ) { aggregate { avg { distance } avg { price } } } }",
    "schemaId" : "flight_1",
    "question" : "What is the average distance and price for all flights from LA?"
  },
  {
    "query" : "query { aircraft ( where : { flights : { flno : { _eq : 99 } } } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "What is the aircraft name for the flight with number 99"
  },
  {
    "query" : "query { aircraft ( where : { flights : { flno : { _eq : 99 } } } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "What is the name of the aircraft that was on flight number 99?"
  },
  {
    "query" : "query { flight ( where : { aircraft : { name : { _eq : \"Airbus A340-300\" } } } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "Show all flight numbers with aircraft Airbus A340-300."
  },
  {
    "query" : "query { flight ( where : { aircraft : { name : { _eq : \"Airbus A340-300\" } } } ) { flno } }",
    "schemaId" : "flight_1",
    "question" : "What are the flight numbers for the aircraft Airbus A340-300?"
  },
  {
    "query" : "query { certificate_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "How many employees have certificate."
  },
  {
    "query" : "query { certificate_aggregate { aggregate { count } } }",
    "schemaId" : "flight_1",
    "question" : "What is the count of distinct employees with certificates?"
  },
  {
    "query" : "query { aircraft ( where : { certificates : { employee : { name : { _eq : \"John Williams\" } } } } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "Show names for all aircrafts of which John Williams has certificates."
  },
  {
    "query" : "query { aircraft ( where : { certificates : { employee : { name : { _eq : \"John Williams\" } } } } ) { name } }",
    "schemaId" : "flight_1",
    "question" : "What are the names of all aircrafts that John Williams have certificates to be able to fly?"
  },
  {
    "query" : "query { airports ( where : { city : { _eq : \"Goroka\" } } ) { name } }",
    "schemaId" : "flight_4",
    "question" : "Find the name of the airport in the city of Goroka."
  },
  {
    "query" : "query { airports ( where : { city : { _eq : \"Goroka\" } } ) { name } }",
    "schemaId" : "flight_4",
    "question" : "What are the names of the airports in the city of Goroka?"
  },
  {
    "query" : "query { airports ( where : { city : { _eq : \"New York\" } } ) { name city country elevation } }",
    "schemaId" : "flight_4",
    "question" : "Find the name, city, country, and altitude (or elevation) of the airports in the city of New York."
  },
  {
    "query" : "query { airports ( where : { city : { _eq : \"New York\" } } ) { name city country elevation } }",
    "schemaId" : "flight_4",
    "question" : "What is the name, city, country, and elevation for every airport in the city of New York?"
  },
  {
    "query" : "query { airlines_aggregate { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "How many airlines are there?"
  },
  {
    "query" : "query { airlines_aggregate { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "What is the total number of airlines?"
  },
  {
    "query" : "query { airlines_aggregate ( where : { country : { _eq : \"Russia\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "How many airlines does Russia has?"
  },
  {
    "query" : "query { airlines_aggregate ( where : { country : { _eq : \"Russia\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "What is the number of airlines based in Russia?"
  },
  {
    "query" : "query { airports_aggregate ( where : { country : { _eq : \"Iceland\" } } ) { aggregate { max { elevation } } } }",
    "schemaId" : "flight_4",
    "question" : "What is the maximum elevation of all airports in the country of Iceland?"
  },
  {
    "query" : "query { airports_aggregate ( where : { country : { _eq : \"Iceland\" } } ) { aggregate { max { elevation } } } }",
    "schemaId" : "flight_4",
    "question" : "What is the highest elevation of an airport in the country of Iceland?"
  },
  {
    "query" : "query { airports ( where : { _or : [ { country : { _eq : \"Cuba\" } } , { country : { _eq : \"Argentina\" } } ] } ) { name } }",
    "schemaId" : "flight_4",
    "question" : "Find the name of the airports located in Cuba or Argentina."
  },
  {
    "query" : "query { airports ( where : { _or : [ { country : { _eq : \"Cuba\" } } , { country : { _eq : \"Argentina\" } } ] } ) { name } }",
    "schemaId" : "flight_4",
    "question" : "What are the names of all airports in Cuba or Argentina?"
  },
  {
    "query" : "query { airlines ( where : { name : { _like : \"Orbit%\" } } ) { country } }",
    "schemaId" : "flight_4",
    "question" : "Find the country of the airlines whose name starts with 'Orbit'."
  },
  {
    "query" : "query { airlines ( where : { name : { _like : \"Orbit%\" } } ) { country } }",
    "schemaId" : "flight_4",
    "question" : "What are the countries of all airlines whose names start with Orbit?"
  },
  {
    "query" : "query { airports ( where : { elevation : { _gte : -50 , _lte : 50 } } ) { name } }",
    "schemaId" : "flight_4",
    "question" : "Find the name of airports whose altitude is between -50 and 50."
  },
  {
    "query" : "query { airports ( where : { elevation : { _gte : -50 , _lte : 50 } } ) { name } }",
    "schemaId" : "flight_4",
    "question" : "What are the names of all airports whose elevation is between -50 and 50?"
  },
  {
    "query" : "query { airports ( limit : 1 , order_by : { elevation : desc } ) { country } }",
    "schemaId" : "flight_4",
    "question" : "Which country is the airport that has the highest altitude located in?"
  },
  {
    "query" : "query { airports ( limit : 1 , order_by : { elevation : desc } ) { country } }",
    "schemaId" : "flight_4",
    "question" : "What is the country of the airport with the highest elevation?"
  },
  {
    "query" : "query { airports_aggregate ( where : { name : { _like : \"%International%\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "Find the number of airports whose name contain the word 'International'."
  },
  {
    "query" : "query { airports_aggregate ( where : { name : { _like : \"%International%\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "How many airports' names have the word Interanation in them?"
  },
  {
    "query" : "query { airports_aggregate ( where : { country : { _eq : \"Greenland\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "How many different cities do have some airport in the country of Greenland?"
  },
  {
    "query" : "query { airports_aggregate ( where : { country : { _eq : \"Greenland\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "In how many cities are there airports in the country of Greenland?"
  },
  {
    "query" : "query { airlines_aggregate ( where : { name : { _eq : \"American Airlines\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "Find the number of routes operated by American Airlines."
  },
  {
    "query" : "query { airlines_aggregate ( where : { name : { _eq : \"American Airlines\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "How many routes does American Airlines operate?"
  },
  {
    "query" : "query { airports_aggregate ( where : { country : { _eq : \"Canada\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "Find the number of routes whose destination airports are in Canada."
  },
  {
    "query" : "query { airports_aggregate ( where : { country : { _eq : \"Canada\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "How many routes end in a Canadian airport?"
  },
  {
    "query" : "query { airports ( limit : 1 , order_by : { elevation : asc } ) { name city country } }",
    "schemaId" : "flight_4",
    "question" : "Find the name, city, and country of the airport that has the lowest altitude."
  },
  {
    "query" : "query { airports ( limit : 1 , order_by : { elevation : asc } ) { name city country } }",
    "schemaId" : "flight_4",
    "question" : "What is the name, city, and country of the airport with the lowest altitude?"
  },
  {
    "query" : "query { airports ( limit : 1 , order_by : { elevation : desc } ) { name city country } }",
    "schemaId" : "flight_4",
    "question" : "Find the name, city, and country of the airport that has the highest latitude."
  },
  {
    "query" : "query { airports ( limit : 1 , order_by : { elevation : desc } ) { name city country } }",
    "schemaId" : "flight_4",
    "question" : "What is the name, city, and country of the airport with the highest elevation?"
  },
  {
    "query" : "query { routes_aggregate ( where : { airlineByAlid : { name : { _eq : \"American Airlines\" } } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "Find the number of different airports which are the destinations of the American Airlines."
  },
  {
    "query" : "query { routes_aggregate ( where : { airlineByAlid : { name : { _eq : \"American Airlines\" } } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "What is the number of different different airports that are destinations for American Airlines?"
  },
  {
    "query" : "query { airports_aggregate ( where : { name : { _eq : \"John F Kennedy International Airport\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "Find the number of routes that have destination John F Kennedy International Airport."
  },
  {
    "query" : "query { airports_aggregate ( where : { name : { _eq : \"John F Kennedy International Airport\" } } ) { aggregate { count } } }",
    "schemaId" : "flight_4",
    "question" : "What is the number of routes that end at John F Kennedy International Airport?"
  },
  {
    "query" : "query { flight_aggregate ( where : { velocity : { _gt : 200.0 } } ) { aggregate { count } } }",
    "schemaId" : "flight_company",
    "question" : "How many flights have a velocity larger than 200?"
  },
  {
    "query" : "query { flight ( order_by : { altitude : asc } ) { vehicle_flight_number date pilot } }",
    "schemaId" : "flight_company",
    "question" : "List the vehicle flight number, date and pilot of all the flights, ordered by altitude."
  },
  {
    "query" : "query { airport ( order_by : { name : asc } ) { id country city name } }",
    "schemaId" : "flight_company",
    "question" : "List the id, country, city and name of the airports ordered alphabetically by the name."
  },
  {
    "query" : "query { operate_company_aggregate { aggregate { max { group_equity_shareholding } } } }",
    "schemaId" : "flight_company",
    "question" : "What is maximum group equity shareholding of the companies?"
  },
  {
    "query" : "query { flight_aggregate ( where : { pilot : { _eq : \"Thompson\" } } ) { aggregate { avg { velocity } } } }",
    "schemaId" : "flight_company",
    "question" : "What is the velocity of the pilot named 'Thompson'?"
  },
  {
    "query" : "query { operate_company { name type } }",
    "schemaId" : "flight_company",
    "question" : "What are the names and types of the companies that have ever operated a flight?"
  },
  {
    "query" : "query { airport ( where : { country : { _neq : \"Iceland\" } } ) { name } }",
    "schemaId" : "flight_company",
    "question" : "What are the names of the airports which are not in the country 'Iceland'?"
  },
  {
    "query" : "query { operate_company ( where : { flights : { velocity : { _lt : 200.0 } } } , distinct_on : type ) { type } }",
    "schemaId" : "flight_company",
    "question" : "What are the distinct types of the companies that have operated any flights with velocity less than 200?"
  },
  {
    "query" : "query { flight ( where : { _or : [ { airport : { country : { _eq : \"United States\" } } } , { airport : { name : { _eq : \"Billund Airport\" } } } ] } , distinct_on : pilot ) { pilot } }",
    "schemaId" : "flight_company",
    "question" : "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?"
  },
  {
    "query" : "query { airport ( where : { name : { _like : \"%international%\" } } ) { name } }",
    "schemaId" : "flight_company",
    "question" : "Which of the airport names contains the word 'international'?"
  },
  {
    "query" : "query { races ( limit : 1 , order_by : { date : desc } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What is the name of the race held most recently?"
  },
  {
    "query" : "query { races ( limit : 1 , order_by : { date : desc } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What is the name of the race that occurred most recently?"
  },
  {
    "query" : "query { races ( limit : 1 , order_by : { date : desc } ) { name date } }",
    "schemaId" : "formula_1",
    "question" : "What is the name and date of the most recent race?"
  },
  {
    "query" : "query { races ( limit : 1 , order_by : { date : desc } ) { name date } }",
    "schemaId" : "formula_1",
    "question" : "What is the name and date of the race that occurred most recently?"
  },
  {
    "query" : "query { races ( where : { year : { _eq : 2017 } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "Find the names of all races held in 2017."
  },
  {
    "query" : "query { races ( where : { year : { _eq : 2017 } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of all the races that occurred in the year 2017?"
  },
  {
    "query" : "query { races ( where : { year : { _gte : 2014 , _lte : 2017 } } , distinct_on : name ) { name } }",
    "schemaId" : "formula_1",
    "question" : "Find the distinct names of all races held between 2014 and 2017?"
  },
  {
    "query" : "query { races ( where : { year : { _gte : 2014 , _lte : 2017 } } , distinct_on : name ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the unique names of all race held between 2014 and 2017?"
  },
  {
    "query" : "query { drivers ( limit : 1 , order_by : { laptimes_aggregate : { min : { milliseconds : desc } } } ) { forename surname } }",
    "schemaId" : "formula_1",
    "question" : "What are the forename and surname of the driver who has the smallest laptime?"
  },
  {
    "query" : "query { drivers ( limit : 1 , order_by : { laptimes_aggregate : { min : { milliseconds : desc } } } ) { forename surname } }",
    "schemaId" : "formula_1",
    "question" : "What is the forename and surname of the driver with the shortest laptime?"
  },
  {
    "query" : "query { drivers ( limit : 1 , order_by : { laptimes_aggregate : { max: { milliseconds : desc_nulls_last } } } ) { driverid surname } }",
    "schemaId" : "formula_1",
    "question" : "What is the id and family name of the driver who has the longest laptime?"
  },
  {
    "query" : "query { drivers ( limit : 1 , order_by : { laptimes_aggregate : { max: { milliseconds : desc_nulls_last } } } ) { driverid surname } }",
    "schemaId" : "formula_1",
    "question" : "What is the id and last name of the driver with the longest laptime?"
  },
  {
    "query" : "query { results_aggregate ( where : { _and : { race : { year : { _eq : 2009 } , name : { _eq : \"Australian Grand Prix\" } } } } ) { aggregate { count } } }",
    "schemaId" : "formula_1",
    "question" : "How many drivers participated in the race Australian Grand Prix held in 2009?"
  },
  {
    "query" : "query { results_aggregate ( where : { _and : { race : { name : { _eq : \"Australian Grand Prix\" } , year : { _eq : 2009 } } } } ) { aggregate { count } } }",
    "schemaId" : "formula_1",
    "question" : "How many drivers were in the Australian Grand Prix held in 2009?"
  },
  {
    "query" : "query { drivers ( where : { nationality : { _eq : \"German\" } } ) { forename surname } }",
    "schemaId" : "formula_1",
    "question" : "Find the forename and surname of drivers whose nationality is German?"
  },
  {
    "query" : "query { drivers ( where : { nationality : { _eq : \"German\" } } ) { forename surname } }",
    "schemaId" : "formula_1",
    "question" : "What is the first and last name of all the German drivers?"
  },
  {
    "query" : "query { drivers ( where : { _and : { driverstandings : { wins : { _eq : 1 } , position : { _eq : 1 } } } } , distinct_on : forename ) { forename } }",
    "schemaId" : "formula_1",
    "question" : "Find all the forenames of distinct drivers who was in position 1 as standing and won?"
  },
  {
    "query" : "query { drivers ( where : { _and : { driverstandings : { position : { _eq : 1 } , wins : { _eq : 1 } } } } , distinct_on : forename ) { forename } }",
    "schemaId" : "formula_1",
    "question" : "What are all the different first names of the drivers who are in position as standing and won?"
  },
  {
    "query" : "query { drivers ( where : { _and : { driverstandings : { wins : { _eq : 1 } , points : { _gt : 20.0 } , position : { _eq : 1 } } } } , distinct_on : forename ) { forename } }",
    "schemaId" : "formula_1",
    "question" : "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?"
  },
  {
    "query" : "query { drivers ( where : { _and : { driverstandings : { points : { _gt : 20.0 } , position : { _eq : 1 } , wins : { _eq : 1 } } } } , distinct_on : forename ) { forename } }",
    "schemaId" : "formula_1",
    "question" : "What are the first names of the different drivers who won in position 1 as driver standing and had more than 20 points?"
  },
  {
    "query" : "query { races ( where : { _and : { year : { _gt : 2017 } , circuit : { country : { _eq : \"Spain\" } } } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of races that were held after 2017 and the circuits were in the country of Spain?"
  },
  {
    "query" : "query { races ( where : { _and : { circuit : { country : { _eq : \"Spain\" } } , year : { _gt : 2017 } } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of the races held after 2017 in Spain?"
  },
  {
    "query" : "query { races ( where : { _and : { year : { _gt : 2000 } , circuit : { country : { _eq : \"Spain\" } } } } , distinct_on : name ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the unique names of races that held after 2000 and the circuits were in Spain?"
  },
  {
    "query" : "query { races ( where : { _and : { circuit : { country : { _eq : \"Spain\" } } , year : { _gt : 2000 } } } , distinct_on : name ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of all races held after 2000 in Spain?"
  },
  {
    "query" : "query { drivers ( order_by : { forename : asc } , distinct_on : forename ) { forename } }",
    "schemaId" : "formula_1",
    "question" : "List the forenames of all distinct drivers in alphabetical order?"
  },
  {
    "query" : "query { drivers ( order_by : { forename : asc } , distinct_on : forename ) { forename } }",
    "schemaId" : "formula_1",
    "question" : "What are the first names of all the different drivers in alphabetical order?"
  },
  {
    "query" : "query { races ( order_by : { name : desc } , distinct_on : name ) { name } }",
    "schemaId" : "formula_1",
    "question" : "List the names of all distinct races in reversed  lexicographic order?"
  },
  {
    "query" : "query { races ( order_by : { name : desc } , distinct_on : name ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the different names of all the races in reverse alphabetical order?"
  },
  {
    "query" : "query { races ( where : { year : { _gte : 2009 , _lte : 2011 } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of races held between 2009 and 2011?"
  },
  {
    "query" : "query { races ( where : { year : { _gte : 2009 , _lte : 2011 } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of all races held between 2009 and 2011?"
  },
  {
    "query" : "query { races ( where : { _or : [ { time : { _gt : \"12:00:00\" } } , { time : { _lt : \"09:00:00\" } } ] } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of races held after 12:00:00 or before 09:00:00?"
  },
  {
    "query" : "query { races ( where : { _or : [ { time : { _gt : \"12:00:00\" } } , { time : { _lt : \"09:00:00\" } } ] } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of all races that occurred after 12:00:00 or before 09:00:00?"
  },
  {
    "query" : "query { circuits ( where : { _or : [ { country : { _eq : \"UK\" } } , { country : { _eq : \"Malaysia\" } } ] } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of circuits that belong to UK or Malaysia?"
  },
  {
    "query" : "query { circuits ( where : { _or : [ { country : { _eq : \"UK\" } } , { country : { _eq : \"Malaysia\" } } ] } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of all the circuits that are in the UK or Malaysia?"
  },
  {
    "query" : "query { circuits ( where : { _or : [ { country : { _eq : \"France\" } } , { country : { _eq : \"Belgium\" } } ] } ) { circuitid location } }",
    "schemaId" : "formula_1",
    "question" : "Find the id and location of circuits that belong to France or Belgium?"
  },
  {
    "query" : "query { circuits ( where : { _or : [ { country : { _eq : \"France\" } } , { country : { _eq : \"Belgium\" } } ] } ) { circuitid location } }",
    "schemaId" : "formula_1",
    "question" : "What are the ids and locations of all circuits in France or Belgium?"
  },
  {
    "query" : "query { constructors ( where : { _and : { nationality : { _eq : \"Japanese\" } , constructorstandings : { points : { _gt : 5.0 } } } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "Find the names of Japanese constructors that have once earned more than 5 points?"
  },
  {
    "query" : "query { constructors ( where : { _and : { nationality : { _eq : \"Japanese\" } , constructorstandings : { points : { _gt : 5.0 } } } } ) { name } }",
    "schemaId" : "formula_1",
    "question" : "What are the names of all the Japanese constructors that have earned more than 5 points?"
  },
  {
    "query" : "query { results_aggregate ( where : { _and : { race : { name : { _eq : \"Monaco Grand Prix\" } , year : { _eq : 2008 } } } } ) { aggregate { avg { fastestlapspeed } } } }",
    "schemaId" : "formula_1",
    "question" : "What is the average fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?"
  },
  {
    "query" : "query { results_aggregate ( where : { _and : { race : { year : { _eq : 2008 } , name : { _eq : \"Monaco Grand Prix\" } } } } ) { aggregate { avg { fastestlapspeed } } } }",
    "schemaId" : "formula_1",
    "question" : "What is the average fastest lap speed for the Monaco Grand Prix in 2008?"
  },
  {
    "query" : "query { results_aggregate ( where : { _and : { race : { year : { _eq : 2008 } , name : { _eq : \"Monaco Grand Prix\" } } } } ) { aggregate { max { fastestlapspeed } } } }",
    "schemaId" : "formula_1",
    "question" : "What is the maximum fastest lap speed in race named 'Monaco Grand Prix' in 2008 ?"
  },
  {
    "query" : "query { results_aggregate ( where : { _and : { race : { year : { _eq : 2008 } , name : { _eq : \"Monaco Grand Prix\" } } } } ) { aggregate { max { fastestlapspeed } } } }",
    "schemaId" : "formula_1",
    "question" : "What is the maximum fastest lap speed in the Monaco Grand Prix in 2008?"
  },
  {
    "query" : "query { video_games_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many video games exist?"
  },
  {
    "query" : "query { video_games_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many video games do you have?"
  },
  {
    "query" : "query { video_games_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many video game types exist?"
  },
  {
    "query" : "query { video_games_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "What is the count of different game types?"
  },
  {
    "query" : "query { video_games ( distinct_on : gtype ) { gtype } }",
    "schemaId" : "game_1",
    "question" : "Show all video game types."
  },
  {
    "query" : "query { video_games ( distinct_on : gtype ) { gtype } }",
    "schemaId" : "game_1",
    "question" : "What are the different types of video games?"
  },
  {
    "query" : "query { video_games ( order_by : { gname : asc } ) { gname gtype } }",
    "schemaId" : "game_1",
    "question" : "Show all video games and their types in the order of their names."
  },
  {
    "query" : "query { video_games ( order_by : { gname : asc } ) { gname gtype } }",
    "schemaId" : "game_1",
    "question" : "What are the names of all the video games and their types in alphabetical order?"
  },
  {
    "query" : "query { video_games ( where : { gtype : { _eq : \"Collectible card game\" } } ) { gname } }",
    "schemaId" : "game_1",
    "question" : "Show all video games with type Collectible card game."
  },
  {
    "query" : "query { video_games ( where : { gtype : { _eq : \"Collectible card game\" } } ) { gname } }",
    "schemaId" : "game_1",
    "question" : "What are the names of all video games that are collectible cards?"
  },
  {
    "query" : "query { video_games ( where : { gname : { _eq : \"Call of Destiny\" } } ) { gtype } }",
    "schemaId" : "game_1",
    "question" : "What is the type of video game Call of Destiny."
  },
  {
    "query" : "query { video_games ( where : { gname : { _eq : \"Call of Destiny\" } } ) { gtype } }",
    "schemaId" : "game_1",
    "question" : "What type of game is Call of Destiny?"
  },
  {
    "query" : "query { video_games_aggregate ( where : { gtype : { _eq : \"Massively multiplayer online game\" } } ) { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many video games have type Massively multiplayer online game?"
  },
  {
    "query" : "query { video_games_aggregate ( where : { gtype : { _eq : \"Massively multiplayer online game\" } } ) { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "Count the number of video games with Massively multiplayer online game type ."
  },
  {
    "query" : "query { student ( where : { city_code : { _eq : \"CHI\" } } ) { stuid } }",
    "schemaId" : "game_1",
    "question" : "Show ids for all students who live in CHI."
  },
  {
    "query" : "query { student ( where : { city_code : { _eq : \"CHI\" } } ) { stuid } }",
    "schemaId" : "game_1",
    "question" : "What are the ids of all students who live in CHI?"
  },
  {
    "query" : "query { student ( where : { advisor : { _eq : 1121 } } ) { stuid } }",
    "schemaId" : "game_1",
    "question" : "Show ids for all students who have advisor 1121."
  },
  {
    "query" : "query { student ( where : { advisor : { _eq : 1121 } } ) { stuid } }",
    "schemaId" : "game_1",
    "question" : "What are the ids of all students who have advisor number 1121?"
  },
  {
    "query" : "query { student ( where : { major : { _eq : 600 } } ) { fname } }",
    "schemaId" : "game_1",
    "question" : "Show first name for all students with major 600."
  },
  {
    "query" : "query { student ( where : { major : { _eq : 600 } } ) { fname } }",
    "schemaId" : "game_1",
    "question" : "What are the first names for all students who are from the major numbered 600?"
  },
  {
    "query" : "query { sportsinfo_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many sports do we have?"
  },
  {
    "query" : "query { sportsinfo_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many different types of sports do we offer?"
  },
  {
    "query" : "query { sportsinfo_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many students play sports?"
  },
  {
    "query" : "query { sportsinfo_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many different students are involved in sports?"
  },
  {
    "query" : "query { sportsinfo ( where : { onscholarship : { _eq : \"Y\" } } ) { stuid } }",
    "schemaId" : "game_1",
    "question" : "List ids for all student who are on scholarship."
  },
  {
    "query" : "query { sportsinfo ( where : { onscholarship : { _eq : \"Y\" } } ) { stuid } }",
    "schemaId" : "game_1",
    "question" : "What are the ids for all sporty students who are on scholarship?"
  },
  {
    "query" : "query { student ( where : { sportsinfos : { onscholarship : { _eq : \"Y\" } } } ) { lname } }",
    "schemaId" : "game_1",
    "question" : "Show last names for all student who are on scholarship."
  },
  {
    "query" : "query { student ( where : { sportsinfos : { onscholarship : { _eq : \"Y\" } } } ) { lname } }",
    "schemaId" : "game_1",
    "question" : "What are the last names for all scholarship students?"
  },
  {
    "query" : "query { sportsinfo_aggregate { aggregate { sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "How many games are played for all students?"
  },
  {
    "query" : "query { sportsinfo_aggregate { aggregate { sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "What is the total number of games played?"
  },
  {
    "query" : "query { sportsinfo_aggregate ( where : { _and : { sportname : { _eq : \"Football\" } , onscholarship : { _eq : \"Y\" } } } ) { aggregate { sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "How many games are played for all football games by students on scholarship?"
  },
  {
    "query" : "query { sportsinfo_aggregate ( where : { _and : { sportname : { _eq : \"Football\" } , onscholarship : { _eq : \"Y\" } } } ) { aggregate { sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "What is the total number of all football games played by scholarship students?"
  },
  {
    "query" : "query { sportsinfo_aggregate ( where : { _and : { student : { fname : { _eq : \"David\" } , lname : { _eq : \"Shieber\" } } } } ) { aggregate { sum { hoursperweek } sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "Show total hours per week and number of games played for student David Shieber."
  },
  {
    "query" : "query { sportsinfo_aggregate ( where : { _and : { student : { lname : { _eq : \"Shieber\" } , fname : { _eq : \"David\" } } } } ) { aggregate { sum { hoursperweek } sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "What is the total number of hours per work and number of games played by David Shieber?"
  },
  {
    "query" : "query { sportsinfo_aggregate ( where : { student : { age : { _lt : 20 } } } ) { aggregate { sum { hoursperweek } sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "Show total hours per week and number of games played for students under 20."
  },
  {
    "query" : "query { sportsinfo_aggregate ( where : { student : { age : { _lt : 20 } } } ) { aggregate { sum { hoursperweek } sum { gamesplayed } } } }",
    "schemaId" : "game_1",
    "question" : "What is the total number of hours per week and number of games played by students under 20?"
  },
  {
    "query" : "query { plays_games_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many students play video games?"
  },
  {
    "query" : "query { plays_games_aggregate { aggregate { count } } }",
    "schemaId" : "game_1",
    "question" : "How many different students play games?"
  },
  {
    "query" : "query { student ( where : { _or : [ { sportsinfos : { sportname : { _eq : \"Football\" } } } , { sportsinfos : { sportname : { _eq : \"Lacrosse\" } } } ] } ) { lname fname } }",
    "schemaId" : "game_1",
    "question" : "Find the last and first name of students who are playing Football or Lacrosse."
  },
  {
    "query" : "query { student ( where : { _or : [ { sportsinfos : { sportname : { _eq : \"Football\" } } } , { sportsinfos : { sportname : { _eq : \"Lacrosse\" } } } ] } ) { lname fname } }",
    "schemaId" : "game_1",
    "question" : "What is the first and last name of all students who play Football or Lacrosse?"
  },
  {
    "query" : "query { game_aggregate ( where : { season : { _gt : 2007 } } ) { aggregate { count } } }",
    "schemaId" : "game_injury",
    "question" : "How many games are held after season 2007?"
  },
  {
    "query" : "query { game ( order_by : { home_team : desc } ) { date } }",
    "schemaId" : "game_injury",
    "question" : "List the dates of games by the home team name in descending order."
  },
  {
    "query" : "query { game { season home_team away_team } }",
    "schemaId" : "game_injury",
    "question" : "List the season, home team, away team of all the games."
  },
  {
    "query" : "query { stadium_aggregate { aggregate { max { home_games } min { home_games } avg { home_games } } } }",
    "schemaId" : "game_injury",
    "question" : "What are the maximum, minimum and average home games each stadium held?"
  },
  {
    "query" : "query { stadium ( where : { capacity_percentage : { _gt : 100.0 } } ) { average_attendance } }",
    "schemaId" : "game_injury",
    "question" : "What is the average attendance of stadiums with capacity percentage higher than 100%?"
  },
  {
    "query" : "query { injury_accident ( where : { injury : { _neq : \"Knee problem\" } } ) { player number_of_matches source } }",
    "schemaId" : "game_injury",
    "question" : "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?"
  },
  {
    "query" : "query { game ( where : { injury_accidents : { player : { _eq : \"Walter Samuel\" } } } ) { season } }",
    "schemaId" : "game_injury",
    "question" : "What is the season of the game which causes the player 'Walter Samuel' to get injured?"
  },
  {
    "query" : "query { injury_accident_aggregate { aggregate { count } } }",
    "schemaId" : "game_injury",
    "question" : "How many different kinds of information sources are there for injury accidents?"
  },
  {
    "query" : "query { injury_accident_aggregate ( where : { game : { season : { _gt : 2010 } } } ) { aggregate { count } } }",
    "schemaId" : "game_injury",
    "question" : "How many distinct kinds of injuries happened after season 2010?"
  },
  {
    "query" : "query { stadium ( where : { name : { _like : \"%Bank%\" } } ) { name } }",
    "schemaId" : "game_injury",
    "question" : "Which stadium name contains the substring \"Bank\"?"
  },
  {
    "query" : "query { game ( order_by : { season : desc } ) { date injury_accidents { player } } }",
    "schemaId" : "game_injury",
    "question" : "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season."
  },
  {
    "query" : "query { company_aggregate { aggregate { count } } }",
    "schemaId" : "gas_company",
    "question" : "How many gas companies are there?"
  },
  {
    "query" : "query { company_aggregate { aggregate { count } } }",
    "schemaId" : "gas_company",
    "question" : "What is the total number of companies?"
  },
  {
    "query" : "query { company ( order_by : { sales_billion : desc } ) { company rank } }",
    "schemaId" : "gas_company",
    "question" : "List the company name and rank for all companies in the decreasing order of their sales."
  },
  {
    "query" : "query { company ( order_by : { sales_billion : desc } ) { company rank } }",
    "schemaId" : "gas_company",
    "question" : "What is the name and rank of every company ordered by descending number of sales?"
  },
  {
    "query" : "query { company ( where : { headquarters : { _neq : \"USA\" } } ) { company main_industry } }",
    "schemaId" : "gas_company",
    "question" : "Show the company name and the main industry for all companies whose headquarters are not from USA."
  },
  {
    "query" : "query { company ( where : { headquarters : { _neq : \"USA\" } } ) { company main_industry } }",
    "schemaId" : "gas_company",
    "question" : "What are the companies and main industries of all companies that are not headquartered in the United States?"
  },
  {
    "query" : "query { company ( order_by : { market_value : desc } ) { company headquarters } }",
    "schemaId" : "gas_company",
    "question" : "Show all company names and headquarters in the descending order of market value."
  },
  {
    "query" : "query { company ( order_by : { market_value : desc } ) { company headquarters } }",
    "schemaId" : "gas_company",
    "question" : "What are the names and headquarters of all companies ordered by descending market value?"
  },
  {
    "query" : "query { company_aggregate { aggregate { min { market_value } max { market_value } avg { market_value } } } }",
    "schemaId" : "gas_company",
    "question" : "Show minimum, maximum, and average market value for all companies."
  },
  {
    "query" : "query { company_aggregate { aggregate { min { market_value } max { market_value } avg { market_value } } } }",
    "schemaId" : "gas_company",
    "question" : "What is the minimum, maximum, and average market value for every company?"
  },
  {
    "query" : "query { company ( distinct_on : main_industry ) { main_industry } }",
    "schemaId" : "gas_company",
    "question" : "Show all main industry for all companies."
  },
  {
    "query" : "query { company ( distinct_on : main_industry ) { main_industry } }",
    "schemaId" : "gas_company",
    "question" : "What are the different main industries for all companies?"
  },
  {
    "query" : "query { gas_station ( order_by : { open_year : asc } ) { station_id location manager_name } }",
    "schemaId" : "gas_company",
    "question" : "Show gas station id, location, and manager_name for all gas stations ordered by open year."
  },
  {
    "query" : "query { gas_station ( order_by : { open_year : asc } ) { station_id location manager_name } }",
    "schemaId" : "gas_company",
    "question" : "What are the gas station ids, locations, and manager names for the gas stations ordered by opening year?"
  },
  {
    "query" : "query { gas_station_aggregate ( where : { open_year : { _gte : 2000 , _lte : 2005 } } ) { aggregate { count } } }",
    "schemaId" : "gas_company",
    "question" : "How many gas station are opened between 2000 and 2005?"
  },
  {
    "query" : "query { gas_station_aggregate ( where : { open_year : { _gte : 2000 , _lte : 2005 } } ) { aggregate { count } } }",
    "schemaId" : "gas_company",
    "question" : "What is the total number of gas stations that opened between 2000 and 2005?"
  },
  {
    "query" : "query { gas_station ( where : { station_company : { company : { company : { _eq : \"ExxonMobil\" } } } } ) { manager_name } }",
    "schemaId" : "gas_company",
    "question" : "Show the manager name for gas stations belonging to the ExxonMobil company."
  },
  {
    "query" : "query { gas_station ( where : { station_company : { company : { company : { _eq : \"ExxonMobil\" } } } } ) { manager_name } }",
    "schemaId" : "gas_company",
    "question" : "What are the names of the managers for gas stations that are operated by the ExxonMobil company?"
  },
  {
    "query" : "query { gas_station ( where : { station_company : { company : { market_value : { _gt : 100.0 } } } } ) { location } }",
    "schemaId" : "gas_company",
    "question" : "Show all locations where a gas station for company with market value greater than 100 is located."
  },
  {
    "query" : "query { gas_station ( where : { station_company : { company : { market_value : { _gt : 100.0 } } } } ) { location } }",
    "schemaId" : "gas_company",
    "question" : "What are the locations that have gas stations owned by a company with a market value greater than 100?"
  },
  {
    "query" : "query { gas_station ( order_by : { open_year : asc } ) { location } }",
    "schemaId" : "gas_company",
    "question" : "order all gas station locations by the opening year."
  },
  {
    "query" : "query { gas_station ( order_by : { open_year : asc } ) { location } }",
    "schemaId" : "gas_company",
    "question" : "What are the locations of all the gas stations ordered by opening year?"
  },
  {
    "query" : "query { company ( order_by : { sales_billion : asc , profits_billion : asc } , where : { main_industry : { _eq : \"Banking\" } } ) { rank company market_value } }",
    "schemaId" : "gas_company",
    "question" : "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion."
  },
  {
    "query" : "query { company ( order_by : { sales_billion : asc , profits_billion : asc } , where : { main_industry : { _eq : \"Banking\" } } ) { rank company market_value } }",
    "schemaId" : "gas_company",
    "question" : "What is the rank, company, and market value of every comapny in the banking industry ordered by sales and profits?"
  },
  {
    "query" : "query { gas_station ( limit : 3 , order_by : { station_company : { company : { assets_billion : desc } } } ) { location representative_name } }",
    "schemaId" : "gas_company",
    "question" : "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts."
  },
  {
    "query" : "query { gas_station ( limit : 3 , order_by : { station_company : { company : { assets_billion : desc } } } ) { location representative_name } }",
    "schemaId" : "gas_company",
    "question" : "What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?"
  },
  {
    "query" : "query { gymnast_aggregate { aggregate { count } } }",
    "schemaId" : "gymnast",
    "question" : "How many gymnasts are there?"
  },
  {
    "query" : "query { gymnast_aggregate { aggregate { count } } }",
    "schemaId" : "gymnast",
    "question" : "Count the number of gymnasts."
  },
  {
    "query" : "query { gymnast ( order_by : { total_points : desc } ) { total_points } }",
    "schemaId" : "gymnast",
    "question" : "List the total points of gymnasts in descending order."
  },
  {
    "query" : "query { gymnast ( order_by : { total_points : desc } ) { total_points } }",
    "schemaId" : "gymnast",
    "question" : "What are the total points for all gymnasts, ordered by total points descending?"
  },
  {
    "query" : "query { gymnast ( order_by : { floor_exercise_points : desc } ) { total_points } }",
    "schemaId" : "gymnast",
    "question" : "List the total points of gymnasts in descending order of floor exercise points."
  },
  {
    "query" : "query { gymnast ( order_by : { floor_exercise_points : desc } ) { total_points } }",
    "schemaId" : "gymnast",
    "question" : "What are the total points of gymnasts, ordered by their floor exercise points descending?"
  },
  {
    "query" : "query { gymnast_aggregate { aggregate { avg { horizontal_bar_points } } } }",
    "schemaId" : "gymnast",
    "question" : "What is the average horizontal bar points for all gymnasts?"
  },
  {
    "query" : "query { gymnast_aggregate { aggregate { avg { horizontal_bar_points } } } }",
    "schemaId" : "gymnast",
    "question" : "Return the average horizontal bar points across all gymnasts."
  },
  {
    "query" : "query { people ( order_by : { name : asc } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "What are the names of people in ascending alphabetical order?"
  },
  {
    "query" : "query { people ( order_by : { name : asc } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "Return the names of people, ordered alphabetically."
  },
  {
    "query" : "query { people { name } }",
    "schemaId" : "gymnast",
    "question" : "What are the names of gymnasts?"
  },
  {
    "query" : "query { people { name } }",
    "schemaId" : "gymnast",
    "question" : "Return the names of the gymnasts."
  },
  {
    "query" : "query { people ( where : { hometown : { _neq : \"Santo Domingo\" } } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "What are the names of gymnasts whose hometown is not \"Santo Domingo\"?"
  },
  {
    "query" : "query { people ( where : { hometown : { _neq : \"Santo Domingo\" } } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "Return the names of gymnasts who did not grow up in Santo Domingo."
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { height : desc } ) { age } }",
    "schemaId" : "gymnast",
    "question" : "What is the age of the tallest person?"
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { height : desc } ) { age } }",
    "schemaId" : "gymnast",
    "question" : "Return the age of the person with the greatest height."
  },
  {
    "query" : "query { people ( limit : 5 , order_by : { age : desc } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "List the names of the top 5 oldest people."
  },
  {
    "query" : "query { people ( limit : 5 , order_by : { age : desc } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "What are the names of the five oldest people?"
  },
  {
    "query" : "query { gymnast ( limit : 1 , order_by : { person : { age : asc } } ) { total_points } }",
    "schemaId" : "gymnast",
    "question" : "What is the total point count of the youngest gymnast?"
  },
  {
    "query" : "query { gymnast ( limit : 1 , order_by : { person : { age : asc } } ) { total_points } }",
    "schemaId" : "gymnast",
    "question" : "Return the total points of the gymnast with the lowest age."
  },
  {
    "query" : "query { people_aggregate { aggregate { avg { age } } } }",
    "schemaId" : "gymnast",
    "question" : "What is the average age of all gymnasts?"
  },
  {
    "query" : "query { people_aggregate { aggregate { avg { age } } } }",
    "schemaId" : "gymnast",
    "question" : "Return the average age across all gymnasts."
  },
  {
    "query" : "query { people ( where : { gymnast : { total_points : { _gt : 57.5 } } } , distinct_on : hometown ) { hometown } }",
    "schemaId" : "gymnast",
    "question" : "What are the distinct hometowns of gymnasts with total points more than 57.5?"
  },
  {
    "query" : "query { people ( where : { gymnast : { total_points : { _gt : 57.5 } } } , distinct_on : hometown ) { hometown } }",
    "schemaId" : "gymnast",
    "question" : "Give the different hometowns of gymnasts that have a total point score of above 57.5."
  },
  {
    "query" : "query { people ( order_by : { height : asc } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "List the names of gymnasts in ascending order by their heights."
  },
  {
    "query" : "query { people ( order_by : { height : asc } ) { name } }",
    "schemaId" : "gymnast",
    "question" : "What are the names of gymnasts, ordered by their heights ascending?"
  },
  {
    "query" : "query { people_aggregate { aggregate { count } } }",
    "schemaId" : "gymnast",
    "question" : "How many distinct hometowns did these people have?"
  },
  {
    "query" : "query { people_aggregate { aggregate { count } } }",
    "schemaId" : "gymnast",
    "question" : "Count the number of different hometowns of these people."
  },
  {
    "query" : "query { people ( order_by : { gymnast : { total_points : desc } } ) { age } }",
    "schemaId" : "gymnast",
    "question" : "Show the ages of gymnasts in descending order of total points."
  },
  {
    "query" : "query { people ( order_by : { gymnast : { total_points : desc } } ) { age } }",
    "schemaId" : "gymnast",
    "question" : "What are the ages of the gymnasts, ordered descending by their total points?"
  },
  {
    "query" : "query { patient { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are names of patients who made an appointment?"
  },
  {
    "query" : "query { patient { name } }",
    "schemaId" : "hospital_1",
    "question" : "List the names of patients who have made appointments."
  },
  {
    "query" : "query { appointment ( limit : 1 , order_by : { start : desc } ) { appointmentid } }",
    "schemaId" : "hospital_1",
    "question" : "Find the id of the appointment with the most recent start date?"
  },
  {
    "query" : "query { appointment ( limit : 1 , order_by : { start : desc } ) { appointmentid } }",
    "schemaId" : "hospital_1",
    "question" : "What is the id of the appointment that started most recently?"
  },
  {
    "query" : "query { physician { name } }",
    "schemaId" : "hospital_1",
    "question" : "List the name of physicians who took some appointment."
  },
  {
    "query" : "query { physician { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are the names of all the physicians who took appointments."
  },
  {
    "query" : "query { physician ( where : { departments : { physician : { affiliated_withs : { primaryaffiliation : { _eq : true } } } } } ) { name departments { name } } }",
    "schemaId" : "hospital_1",
    "question" : "Find the names of all physicians and their primary affiliated departments' names."
  },
  {
    "query" : "query { physician ( where : { departments : { physician : { affiliated_withs : { primaryaffiliation : { _eq : true } } } } } ) { name departments { name } } }",
    "schemaId" : "hospital_1",
    "question" : "What are the name and primarily affiliated department name of each physician?"
  },
  {
    "query" : "query { appointment ( limit : 1 , order_by : { start : desc } ) { patientByPatient { name } } }",
    "schemaId" : "hospital_1",
    "question" : "What is the name of the patient who made the most recent appointment?"
  },
  {
    "query" : "query { appointment ( limit : 1 , order_by : { start : desc } ) { patientByPatient { name } } }",
    "schemaId" : "hospital_1",
    "question" : "Find the name of the patient who made the appointment with the most recent start date."
  },
  {
    "query" : "query { stay_aggregate ( where : { room : { _eq : 112 } } ) { aggregate { count } } }",
    "schemaId" : "hospital_1",
    "question" : "How many patients stay in room 112?"
  },
  {
    "query" : "query { stay_aggregate ( where : { room : { _eq : 112 } } ) { aggregate { count } } }",
    "schemaId" : "hospital_1",
    "question" : "Count the number of patients who stayed in room 112."
  },
  {
    "query" : "query { stay ( limit : 1 , order_by : { staystart : desc } , where : { room : { _eq : 111 } } ) { patient } }",
    "schemaId" : "hospital_1",
    "question" : "Find the patient who most recently stayed in room 111."
  },
  {
    "query" : "query { stay ( limit : 1 , order_by : { staystart : desc } , where : { room : { _eq : 111 } } ) { patient } }",
    "schemaId" : "hospital_1",
    "question" : "What is the id of the patient who stayed in room 111 most recently?"
  },
  {
    "query" : "query { room ( where : { unavailable : { _eq : false } } , distinct_on : blockcode ) { blockcode } }",
    "schemaId" : "hospital_1",
    "question" : "What are the unique block codes that have available rooms?"
  },
  {
    "query" : "query { room ( where : { unavailable : { _eq : false } } , distinct_on : blockcode ) { blockcode } }",
    "schemaId" : "hospital_1",
    "question" : "Tell me the distinct block codes where some rooms are available."
  },
  {
    "query" : "query { room_aggregate { aggregate { count } } }",
    "schemaId" : "hospital_1",
    "question" : "How many different types of rooms are there?"
  },
  {
    "query" : "query { room_aggregate { aggregate { count } } }",
    "schemaId" : "hospital_1",
    "question" : "Find the number of distinct room types available."
  },
  {
    "query" : "query { physician ( where : { position : { _like : \"%senior%\" } } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "Find the name of physicians whose position title contains the word 'senior'."
  },
  {
    "query" : "query { physician ( where : { position : { _like : \"%senior%\" } } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are the names of the physicians who have 'senior' in their titles."
  },
  {
    "query" : "query { undergoes ( limit : 1 , order_by : { dateundergoes : asc } ) { patient } }",
    "schemaId" : "hospital_1",
    "question" : "Find the patient who has the most recent undergoing treatment?"
  },
  {
    "query" : "query { undergoes ( limit : 1 , order_by : { dateundergoes : asc } ) { patient } }",
    "schemaId" : "hospital_1",
    "question" : "Which patient is undergoing the most recent treatment?"
  },
  {
    "query" : "query { nurse ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "List the names of all distinct nurses ordered by alphabetical order?"
  },
  {
    "query" : "query { nurse ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What is the alphabetically ordered list of all the distinct names of nurses?"
  },
  {
    "query" : "query { nurse ( distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "Find the names of nurses who are nursing an undergoing treatment."
  },
  {
    "query" : "query { nurse ( distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "Which nurses are in charge of patients undergoing treatments?"
  },
  {
    "query" : "query { medication ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "List the names of all distinct medications, ordered in an alphabetical order."
  },
  {
    "query" : "query { medication ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What is the alphabetically ordered list of all distinct medications?"
  },
  {
    "query" : "query { physician ( limit : 1 , order_by : { prescribes_aggregate : { max : { dose : desc_nulls_last } } } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are the names of the physician who prescribed the highest dose?"
  },
  {
    "query" : "query { physician ( limit : 1 , order_by : { prescribes_aggregate : { max : { dose : desc_nulls_last } } } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "Find the physician who prescribed the highest dose. What is his or her name?"
  },
  {
    "query" : "query { affiliated_with ( where : { primaryaffiliation : { _eq : true } } ) { physician department } }",
    "schemaId" : "hospital_1",
    "question" : "List the physicians' employee ids together with their primary affiliation departments' ids."
  },
  {
    "query" : "query { affiliated_with ( where : { primaryaffiliation : { _eq : true } } ) { physician department } }",
    "schemaId" : "hospital_1",
    "question" : "What are each physician's employee id and department id primarily affiliated."
  },
  {
    "query" : "query { department ( where : { affiliated_withs : { primaryaffiliation : { _eq : true } } } , distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "List the names of departments where some physicians are primarily affiliated with."
  },
  {
    "query" : "query { department ( where : { affiliated_withs : { primaryaffiliation : { _eq : true } } } , distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are the names of departments that have primarily affiliated physicians."
  },
  {
    "query" : "query { on_call ( where : { _and : { blockcode : { _eq : 1 } , blockfloor : { _eq : 1 } } } ) { nurse } }",
    "schemaId" : "hospital_1",
    "question" : "What nurses are on call with block floor 1 and block code 1? Tell me their names."
  },
  {
    "query" : "query { on_call ( where : { _and : { blockfloor : { _eq : 1 } , blockcode : { _eq : 1 } } } ) { nurse } }",
    "schemaId" : "hospital_1",
    "question" : "Find the ids of the nurses who are on call in block floor 1 and block code 1."
  },
  {
    "query" : "query { procedures_aggregate { aggregate { max { cost } min { cost } avg { cost } } } }",
    "schemaId" : "hospital_1",
    "question" : "What are the highest cost, lowest cost and average cost of procedures?"
  },
  {
    "query" : "query { procedures_aggregate { aggregate { max { cost } min { cost } avg { cost } } } }",
    "schemaId" : "hospital_1",
    "question" : "Tell me the highest, lowest, and average cost of procedures."
  },
  {
    "query" : "query { procedures ( order_by : { cost : desc } ) { name cost } }",
    "schemaId" : "hospital_1",
    "question" : "List the name and cost of all procedures sorted by the cost from the highest to the lowest."
  },
  {
    "query" : "query { procedures ( order_by : { cost : desc } ) { name cost } }",
    "schemaId" : "hospital_1",
    "question" : "Sort the list of names and costs of all procedures in the descending order of cost."
  },
  {
    "query" : "query { procedures ( limit : 3 , order_by : { cost : asc } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "Find the three most expensive procedures."
  },
  {
    "query" : "query { procedures ( limit : 3 , order_by : { cost : asc } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are the three most costly procedures?"
  },
  {
    "query" : "query { procedures_aggregate ( where : { trained_ins : { physicianByPhysician : { name : { _eq : \"John Wen\" } } } } ) { aggregate { avg { cost } } } }",
    "schemaId" : "hospital_1",
    "question" : "What is the average cost of procedures that physician John Wen was trained in?"
  },
  {
    "query" : "query { procedures_aggregate ( where : { trained_ins : { physicianByPhysician : { name : { _eq : \"John Wen\" } } } } ) { aggregate { avg { cost } } } }",
    "schemaId" : "hospital_1",
    "question" : "Compute the mean price of procedures physician John Wen was trained in."
  },
  {
    "query" : "query { procedures ( where : { trained_ins : { physicianByPhysician : { name : { _eq : \"John Wen\" } } } } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "Find the names of procedures which physician John Wen was trained in."
  },
  {
    "query" : "query { procedures ( where : { trained_ins : { physicianByPhysician : { name : { _eq : \"John Wen\" } } } } ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are the names of procedures physician John Wen was trained in?"
  },
  {
    "query" : "query { appointment_aggregate { aggregate { count } } }",
    "schemaId" : "hospital_1",
    "question" : "How many appointments are there?"
  },
  {
    "query" : "query { appointment_aggregate { aggregate { count } } }",
    "schemaId" : "hospital_1",
    "question" : "Count how many appointments have been made in total."
  },
  {
    "query" : "query { nurse ( distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "Find the names of nurses who are on call."
  },
  {
    "query" : "query { nurse ( distinct_on : name ) { name } }",
    "schemaId" : "hospital_1",
    "question" : "What are the distinct names of nurses on call?"
  },
  {
    "query" : "query { employees { first_name department { department_name } } }",
    "schemaId" : "hr_1",
    "question" : "Display the first name and department name for each employee."
  },
  {
    "query" : "query { employees { first_name department { department_name } } }",
    "schemaId" : "hr_1",
    "question" : "What are the first name and department name of all employees?"
  },
  {
    "query" : "query { employees ( where : { salary : { _lt : 6000 } } ) { first_name last_name salary } }",
    "schemaId" : "hr_1",
    "question" : "List the full name (first and last name), and salary for those employees who earn below 6000."
  },
  {
    "query" : "query { employees ( where : { salary : { _lt : 6000 } } ) { first_name last_name salary } }",
    "schemaId" : "hr_1",
    "question" : "What are the full names and salaries for any employees earning less than 6000?"
  },
  {
    "query" : "query { employees ( where : { last_name : { _eq : \"McEwen\" } } ) { first_name department_id } }",
    "schemaId" : "hr_1",
    "question" : "Display the first name, and department number for all employees whose last name is \"McEwen\"."
  },
  {
    "query" : "query { employees ( where : { last_name : { _eq : \"McEwen\" } } ) { first_name department_id } }",
    "schemaId" : "hr_1",
    "question" : "What are the first names and department numbers for employees with last name McEwen?"
  },
  {
    "query" : "query { employees ( where : { department_id : { _is_null : true } } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "Return all the information for all employees without any department number."
  },
  {
    "query" : "query { employees ( where : { department_id : { _is_null : true } } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "What are all the employees without a department number?"
  },
  {
    "query" : "query { departments ( where : { department_name : { _eq : \"Marketing\" } } ) { department_name location_id manager_id } }",
    "schemaId" : "hr_1",
    "question" : "Display all the information about the department Marketing."
  },
  {
    "query" : "query { departments ( where : { department_name : { _eq : \"Marketing\" } } ) { department_name location_id manager_id } }",
    "schemaId" : "hr_1",
    "question" : "What is all the information about the Marketing department?"
  },
  {
    "query" : "query { employees ( where : { _not : { first_name : { _like : \"%M%\" } } } ) { hire_date } }",
    "schemaId" : "hr_1",
    "question" : "when is the hire date for those employees whose first name does not containing the letter M?"
  },
  {
    "query" : "query { employees ( where : { _not : { first_name : { _like : \"%M%\" } } } ) { hire_date } }",
    "schemaId" : "hr_1",
    "question" : "On what dates were employees without the letter M in their first names hired?"
  },
  {
    "query" : "query { employees ( where : { _not : { first_name : { _like : \"%M%\" } } } ) { first_name last_name hire_date salary department_id } }",
    "schemaId" : "hr_1",
    "question" : "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M."
  },
  {
    "query" : "query { employees ( where : { _not : { first_name : { _like : \"%M%\" } } } ) { first_name last_name hire_date salary department_id } }",
    "schemaId" : "hr_1",
    "question" : "What are the full name, hire date, salary, and department id for employees without the letter M in their first name?"
  },
  {
    "query" : "query { employees ( order_by : { department_id : asc } , where : { _not : { first_name : { _like : \"%M%\" } } } ) { first_name last_name hire_date salary department_id } }",
    "schemaId" : "hr_1",
    "question" : "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number."
  },
  {
    "query" : "query { employees ( order_by : { department_id : asc } , where : { _not : { first_name : { _like : \"%M%\" } } } ) { first_name last_name hire_date salary department_id } }",
    "schemaId" : "hr_1",
    "question" : "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?"
  },
  {
    "query" : "query { employees ( where : { salary : { _gte : 8000 , _lte : 12000 } } ) { phone_number } }",
    "schemaId" : "hr_1",
    "question" : "what is the phone number of employees whose salary is in the range of 8000 and 12000?"
  },
  {
    "query" : "query { employees ( where : { salary : { _gte : 8000 , _lte : 12000 } } ) { phone_number } }",
    "schemaId" : "hr_1",
    "question" : "Return the phone numbers of employees with salaries between 8000 and 12000."
  },
  {
    "query" : "query { employees ( where : { _or : [ { _and : { commission_pct : { _is_null : true } , salary : { _gte : 8000 , _lte : 12000 } } } , { department_id : { _neq : 40 } } ] } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "display all the information of employees whose salary is in the range of 8000 and 12000 and commission is not null or department number does not equal to 40."
  },
  {
    "query" : "query { employees ( where : { _or : [ { _and : { salary : { _gte : 8000 , _lte : 12000 } , commission_pct : { _is_null : true } } } , { department_id : { _neq : 40 } } ] } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "Return all information about employees with salaries between 8000 and 12000 for which commission is not null or where their department id is not 40."
  },
  {
    "query" : "query { employees ( where : { commission_pct : { _is_null : true } } ) { first_name last_name salary } }",
    "schemaId" : "hr_1",
    "question" : "What are the full name (first and last name) and salary for all employees who does not have any value for commission?"
  },
  {
    "query" : "query { employees ( where : { commission_pct : { _is_null : true } } ) { first_name last_name salary } }",
    "schemaId" : "hr_1",
    "question" : "Return the full names and salaries of employees with null commissions."
  },
  {
    "query" : "query { employees ( where : { first_name : { _like : \"%m\" } } ) { first_name last_name salary } }",
    "schemaId" : "hr_1",
    "question" : "Display the first and last name, and salary for those employees whose first name is ending with the letter m."
  },
  {
    "query" : "query { employees ( where : { first_name : { _like : \"%m\" } } ) { first_name last_name salary } }",
    "schemaId" : "hr_1",
    "question" : "Return the full names and salaries for employees with first names that end with the letter m."
  },
  {
    "query" : "query { employees ( where : { hire_date : { _gte : \"2007-11-05\" , _lte : \"2009-07-05\" } } ) { job_id hire_date } }",
    "schemaId" : "hr_1",
    "question" : "Find job id and date of hire for those employees who was hired between November 5th, 2007 and July 5th, 2009."
  },
  {
    "query" : "query { employees ( where : { hire_date : { _gte : \"2007-11-05\" , _lte : \"2009-07-05\" } } ) { job_id hire_date } }",
    "schemaId" : "hr_1",
    "question" : "What are the job ids and dates of hire for employees hired after November 5th, 2007 and before July 5th, 2009?"
  },
  {
    "query" : "query { employees ( where : { _or : [ { department_id : { _eq : 70 } } , { department_id : { _eq : 90 } } ] } ) { first_name last_name } }",
    "schemaId" : "hr_1",
    "question" : "What are the first and last name for those employees who works either in department 70 or 90?"
  },
  {
    "query" : "query { employees ( where : { _or : [ { department_id : { _eq : 70 } } , { department_id : { _eq : 90 } } ] } ) { first_name last_name } }",
    "schemaId" : "hr_1",
    "question" : "What are the full names of employees who with in department 70 or 90?"
  },
  {
    "query" : "query { employees ( where : { manager_id : { _is_null : true } } ) { salary manager_id } }",
    "schemaId" : "hr_1",
    "question" : "Find the salary and manager number for those employees who is working under a manager."
  },
  {
    "query" : "query { employees ( where : { manager_id : { _is_null : true } } ) { salary manager_id } }",
    "schemaId" : "hr_1",
    "question" : "What are the salaries and manager ids for employees who have managers?"
  },
  {
    "query" : "query { employees ( where : { hire_date : { _lt : \"2002-06-21\" } } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "display all the details from Employees table for those employees who was hired before 2002-06-21."
  },
  {
    "query" : "query { employees ( where : { hire_date : { _lt : \"2002-06-21\" } } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "What is all the information about employees hired before June 21, 2002?"
  },
  {
    "query" : "query { employees ( order_by : { salary : desc } , where : { _or : [ { first_name : { _like : \"%D%\" } } , { first_name : { _like : \"%S%\" } } ] } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "display all the information for all employees who have the letters D or S in their first name and also arrange the result in descending order by salary."
  },
  {
    "query" : "query { employees ( order_by : { salary : desc } , where : { _or : [ { first_name : { _like : \"%D%\" } } , { first_name : { _like : \"%S%\" } } ] } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "What is all the information about employees with D or S in their first name, ordered by salary descending?"
  },
  {
    "query" : "query { employees ( where : { hire_date : { _gt : \"1987-09-07\" } } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "display those employees who joined after 7th September, 1987."
  },
  {
    "query" : "query { employees ( where : { hire_date : { _gt : \"1987-09-07\" } } ) { commission_pct department_id email employee_id first_name hire_date job_id last_name manager_id phone_number salary } }",
    "schemaId" : "hr_1",
    "question" : "Which employees were hired after September 7th, 1987?"
  },
  {
    "query" : "query { jobs ( where : { min_salary : { _gt : 9000 } } ) { job_title } }",
    "schemaId" : "hr_1",
    "question" : "display the job title of jobs which minimum salary is greater than 9000."
  },
  {
    "query" : "query { jobs ( where : { min_salary : { _gt : 9000 } } ) { job_title } }",
    "schemaId" : "hr_1",
    "question" : "Which job titles correspond to jobs with salaries over 9000?"
  },
  {
    "query" : "query { employees ( where : { _and : { commission_pct : { _is_null : true } , department_id : { _eq : 50 } , salary : { _gte : 7000 , _lte : 12000 } } } ) { email } }",
    "schemaId" : "hr_1",
    "question" : "display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50."
  },
  {
    "query" : "query { employees ( where : { _and : { salary : { _gte : 7000 , _lte : 12000 } , department_id : { _eq : 50 } , commission_pct : { _is_null : true } } } ) { email } }",
    "schemaId" : "hr_1",
    "question" : "What are the emails of employees with null commission, salary between 7000 and 12000, and who work in department 50?"
  },
  {
    "query" : "query { job_history ( where : { employee : { salary : { _gte : 12000 } } } ) { department_id employee_id end_date job_id start_date } }",
    "schemaId" : "hr_1",
    "question" : "Can you return all detailed info of jobs which was done by any of the employees who is presently earning a salary on and above 12000?"
  },
  {
    "query" : "query { job_history ( where : { employee : { salary : { _gte : 12000 } } } ) { department_id employee_id end_date job_id start_date } }",
    "schemaId" : "hr_1",
    "question" : "What is all the job history info done by employees earning a salary greater than or equal to 12000?"
  },
  {
    "query" : "query { departments ( distinct_on : department_name ) { department_name } }",
    "schemaId" : "hr_1",
    "question" : "find the name of all departments that do actually have one or more employees assigned to them."
  },
  {
    "query" : "query { departments ( distinct_on : department_name ) { department_name } }",
    "schemaId" : "hr_1",
    "question" : "What are the names of departments that have at least one employee."
  },
  {
    "query" : "query { departments ( where : { department_name : { _eq : \"Marketing\" } } ) { department_name location_id manager_id } }",
    "schemaId" : "hr_1",
    "question" : "display all the information about the department Marketing."
  },
  {
    "query" : "query { departments ( where : { department_name : { _eq : \"Marketing\" } } ) { department_name location_id manager_id } }",
    "schemaId" : "hr_1",
    "question" : "What is all the information about the Marketing department?"
  },
  {
    "query" : "query { employees ( where : { department_id : { _eq : 80 } } ) { employee_id job { job_title } } }",
    "schemaId" : "hr_1",
    "question" : "display the employee ID and job name for all those jobs in department 80."
  },
  {
    "query" : "query { employees ( where : { department_id : { _eq : 80 } } ) { employee_id job { job_title } } }",
    "schemaId" : "hr_1",
    "question" : "what are the employee ids and job titles for employees in department 80?"
  },
  {
    "query" : "query { employees ( where : { department : { department_name : { _eq : \"Finance\" } } } ) { first_name job_id } }",
    "schemaId" : "hr_1",
    "question" : "What is the first name and job id for all employees in the Finance department?"
  },
  {
    "query" : "query { employees ( where : { department : { department_name : { _eq : \"Finance\" } } } ) { first_name job_id } }",
    "schemaId" : "hr_1",
    "question" : "Give the first name and job id for all employees in the Finance department."
  },
  {
    "query" : "query { employees { first_name last_name department { department_name location { city state_province } } } }",
    "schemaId" : "hr_1",
    "question" : "display the first and last name, department, city, and state province for each employee."
  },
  {
    "query" : "query { employees { first_name last_name department { department_name location { city state_province } } } }",
    "schemaId" : "hr_1",
    "question" : "What are the full names, departments, cities, and state provinces for each employee?"
  },
  {
    "query" : "query { departments { department_name location { city state_province } } }",
    "schemaId" : "hr_1",
    "question" : "display the department name, city, and state province for each department."
  },
  {
    "query" : "query { departments { department_name location { city state_province } } }",
    "schemaId" : "hr_1",
    "question" : "What are the department names, cities, and state provinces for each department?"
  },
  {
    "query" : "query { authors_aggregate { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "How many authors are there?"
  },
  {
    "query" : "query { authors_aggregate { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "Count the number of authors."
  },
  {
    "query" : "query { inst_aggregate { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "How many institutions are there?"
  },
  {
    "query" : "query { inst_aggregate { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "Count the number of institutions."
  },
  {
    "query" : "query { papers_aggregate { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "How many papers are published in total?"
  },
  {
    "query" : "query { papers_aggregate { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "Count the number of total papers."
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { fname : { _eq : \"Jeremy\" } , lname : { _eq : \"Gibbons\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "What are the titles of papers published by \"Jeremy Gibbons\"?"
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { lname : { _eq : \"Gibbons\" } , fname : { _eq : \"Jeremy\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Find the titles of all the papers written by \"Jeremy Gibbons\""
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { fname : { _eq : \"Aaron\" } , lname : { _eq : \"Turon\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Find all the papers published by \"Aaron Turon\"."
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { fname : { _eq : \"Aaron\" } , lname : { _eq : \"Turon\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Find the titles of all the papers written by \"Aaron Turon\"."
  },
  {
    "query" : "query { authors_aggregate ( where : { _and : { lname : { _eq : \"Ohori\" } , fname : { _eq : \"Atsushi\" } } } ) { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "How many papers have \"Atsushi Ohori\" published?"
  },
  {
    "query" : "query { authors_aggregate ( where : { _and : { fname : { _eq : \"Atsushi\" } , lname : { _eq : \"Ohori\" } } } ) { aggregate { count } } }",
    "schemaId" : "icfp_1",
    "question" : "How many papers are \"Atsushi Ohori\" the author of?"
  },
  {
    "query" : "query { inst ( where : { _and : { authorships : { author : { fname : { _eq : \"Matthias\" } , lname : { _eq : \"Blume\" } } } } } , distinct_on : name ) { name } }",
    "schemaId" : "icfp_1",
    "question" : "What is the name of the institution that \"Matthias Blume\" belongs to?"
  },
  {
    "query" : "query { inst ( where : { _and : { authorships : { author : { lname : { _eq : \"Blume\" } , fname : { _eq : \"Matthias\" } } } } } , distinct_on : name ) { name } }",
    "schemaId" : "icfp_1",
    "question" : "Which institution is the author \"Matthias Blume\" belong to? Give me the name of the institution."
  },
  {
    "query" : "query { inst ( where : { _and : { authorships : { author : { lname : { _eq : \"Ueno\" } , fname : { _eq : \"Katsuhiro\" } } } } } , distinct_on : name ) { name } }",
    "schemaId" : "icfp_1",
    "question" : "Which institution does \"Katsuhiro Ueno\" belong to?"
  },
  {
    "query" : "query { inst ( where : { _and : { authorships : { author : { lname : { _eq : \"Ueno\" } , fname : { _eq : \"Katsuhiro\" } } } } } , distinct_on : name ) { name } }",
    "schemaId" : "icfp_1",
    "question" : "What is the name of the institution the author \"Katsuhiro Ueno\" belongs to?"
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { fname : { _eq : \"Olin\" } , lname : { _eq : \"Shivers\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Find the papers which have \"Olin Shivers\" as an author."
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { fname : { _eq : \"Olin\" } , lname : { _eq : \"Shivers\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Which papers did the author \"Olin Shivers\" write? Give me the paper titles."
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { fname : { _eq : \"Stephanie\" } , lname : { _eq : \"Weirich\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Which papers have \"Stephanie Weirich\" as an author?"
  },
  {
    "query" : "query { papers ( where : { _and : { authorships : { author : { fname : { _eq : \"Stephanie\" } , lname : { _eq : \"Weirich\" } } } } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Find the titles of the papers the author \"Stephanie Weirich\" wrote."
  },
  {
    "query" : "query { papers ( where : { title : { _like : \"%ML%\" } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Find the titles of the papers that contain the word \"ML\"."
  },
  {
    "query" : "query { papers ( where : { title : { _like : \"%ML%\" } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Which papers have the substring \"ML\" in their titles? Return the titles of the papers."
  },
  {
    "query" : "query { papers ( where : { title : { _like : \"%Database%\" } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Which paper's title contains the word \"Database\"?"
  },
  {
    "query" : "query { papers ( where : { title : { _like : \"%Database%\" } } ) { title } }",
    "schemaId" : "icfp_1",
    "question" : "Which papers have the substring \"Database\" in their titles? Show the titles of the papers."
  },
  {
    "query" : "query { authors ( where : { lname : { _eq : \"Ueno\" } } ) { fname } }",
    "schemaId" : "icfp_1",
    "question" : "What is the first name of the author with last name \"Ueno\"?"
  },
  {
    "query" : "query { authors ( where : { lname : { _eq : \"Ueno\" } } ) { fname } }",
    "schemaId" : "icfp_1",
    "question" : "Which authors have last name \"Ueno\"? List their first names."
  },
  {
    "query" : "query { authors ( where : { fname : { _eq : \"Amal\" } } ) { lname } }",
    "schemaId" : "icfp_1",
    "question" : "Find the last name of the author with first name \"Amal\"."
  },
  {
    "query" : "query { authors ( where : { fname : { _eq : \"Amal\" } } ) { lname } }",
    "schemaId" : "icfp_1",
    "question" : "Which authors have first name \"Amal\"? List their last names."
  },
  {
    "query" : "query { authors ( order_by : { fname : asc } ) { fname } }",
    "schemaId" : "icfp_1",
    "question" : "Find the first names of all the authors ordered in alphabetical order."
  },
  {
    "query" : "query { authors ( order_by : { fname : asc } ) { fname } }",
    "schemaId" : "icfp_1",
    "question" : "Sort the first names of all the authors in alphabetical order."
  },
  {
    "query" : "query { authors ( order_by : { lname : asc } ) { lname } }",
    "schemaId" : "icfp_1",
    "question" : "Retrieve all the last names of authors in alphabetical order."
  },
  {
    "query" : "query { authors ( order_by : { lname : asc } ) { lname } }",
    "schemaId" : "icfp_1",
    "question" : "Give me a list of all the last names of authors sorted in alphabetical order"
  },
  {
    "query" : "query { authors ( order_by : { lname : asc } ) { fname lname } }",
    "schemaId" : "icfp_1",
    "question" : "Retrieve all the first and last names of authors in the alphabetical order of last names."
  },
  {
    "query" : "query { authors ( order_by : { lname : asc } ) { fname lname } }",
    "schemaId" : "icfp_1",
    "question" : "Sort the list of all the first and last names of authors in alphabetical order of the last names."
  },
  {
    "query" : "query { rooms ( where : { _and : { baseprice : { _lt : 160 } , beds : { _eq : 2 } , decor : { _eq : \"modern\" } } } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "Find the names of all modern rooms with a base price below $160 and two beds."
  },
  {
    "query" : "query { rooms ( where : { _and : { decor : { _eq : \"modern\" } , beds : { _eq : 2 } , baseprice : { _lt : 160 } } } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "What are the names of modern rooms that have a base price lower than $160 and two beds."
  },
  {
    "query" : "query { rooms ( where : { _and : { maxoccupancy : { _gt : 2 } , baseprice : { _gt : 160 } } } ) { roomname roomid } }",
    "schemaId" : "inn_1",
    "question" : "Find all the rooms that have a price higher than 160 and can accommodate more than 2 people. Report room names and ids."
  },
  {
    "query" : "query { rooms ( where : { _and : { baseprice : { _gt : 160 } , maxoccupancy : { _gt : 2 } } } ) { roomname roomid } }",
    "schemaId" : "inn_1",
    "question" : "What are the room names and ids of all the rooms that cost more than 160 and can accommodate more than two people."
  },
  {
    "query" : "query { reservations ( where : { _and : { firstname : { _eq : \"ROY\" } , lastname : { _eq : \"SWEAZY\" } } } ) { kids } }",
    "schemaId" : "inn_1",
    "question" : "How many kids stay in the rooms reserved by ROY SWEAZY?"
  },
  {
    "query" : "query { reservations ( where : { _and : { lastname : { _eq : \"SWEAZY\" } , firstname : { _eq : \"ROY\" } } } ) { kids } }",
    "schemaId" : "inn_1",
    "question" : "Find the number of kids staying in the rooms reserved by a person called ROY SWEAZ."
  },
  {
    "query" : "query { reservations_aggregate ( where : { _and : { lastname : { _eq : \"SWEAZY\" } , firstname : { _eq : \"ROY\" } } } ) { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "How many times does ROY SWEAZY has reserved a room."
  },
  {
    "query" : "query { reservations_aggregate ( where : { _and : { lastname : { _eq : \"SWEAZY\" } , firstname : { _eq : \"ROY\" } } } ) { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "Find the number of times ROY SWEAZY has reserved a room."
  },
  {
    "query" : "query { reservations ( where : { _and : { firstname : { _eq : \"CONRAD\" } , checkin : { _eq : \"2010-10-23\" } , lastname : { _eq : \"SELBIG\" } } } ) { adults } }",
    "schemaId" : "inn_1",
    "question" : "How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?"
  },
  {
    "query" : "query { reservations ( where : { _and : { firstname : { _eq : \"CONRAD\" } , lastname : { _eq : \"SELBIG\" } , checkin : { _eq : \"2010-10-23\" } } } ) { adults } }",
    "schemaId" : "inn_1",
    "question" : "Find the number of adults for the room reserved and checked in by CONRAD SELBIG on Oct 23, 2010."
  },
  {
    "query" : "query { reservations ( where : { _and : { firstname : { _eq : \"DAMIEN\" } , lastname : { _eq : \"TRACHSEL\" } , checkin : { _eq : \"2010-09-21\" } } } ) { kids } }",
    "schemaId" : "inn_1",
    "question" : "How many kids stay in the room DAMIEN TRACHSEL checked in on Sep 21, 2010?"
  },
  {
    "query" : "query { reservations ( where : { _and : { checkin : { _eq : \"2010-09-21\" } , lastname : { _eq : \"TRACHSEL\" } , firstname : { _eq : \"DAMIEN\" } } } ) { kids } }",
    "schemaId" : "inn_1",
    "question" : "Return the number of kids for the room reserved and checked in by DAMIEN TRACHSEL on  Sep 21, 2010."
  },
  {
    "query" : "query { rooms_aggregate ( where : { bedtype : { _eq : \"King\" } } ) { aggregate { sum { beds } } } }",
    "schemaId" : "inn_1",
    "question" : "How many king beds are there?"
  },
  {
    "query" : "query { rooms_aggregate ( where : { bedtype : { _eq : \"King\" } } ) { aggregate { sum { beds } } } }",
    "schemaId" : "inn_1",
    "question" : "Find the total number of king beds available."
  },
  {
    "query" : "query { rooms ( order_by : { baseprice : asc } , where : { bedtype : { _eq : \"King\" } } ) { roomname decor } }",
    "schemaId" : "inn_1",
    "question" : "List the names and decor of rooms that have a king bed. Sort the list by their price."
  },
  {
    "query" : "query { rooms ( order_by : { baseprice : asc } , where : { bedtype : { _eq : \"King\" } } ) { roomname decor } }",
    "schemaId" : "inn_1",
    "question" : "What are the names and decor of rooms with a king bed? Sort them by their price"
  },
  {
    "query" : "query { rooms ( limit : 1 , order_by : { baseprice : asc } ) { roomname baseprice } }",
    "schemaId" : "inn_1",
    "question" : "Which room has cheapest base price? List the room's name and the base price."
  },
  {
    "query" : "query { rooms ( limit : 1 , order_by : { baseprice : asc } ) { roomname baseprice } }",
    "schemaId" : "inn_1",
    "question" : "What are the room name and base price of the room with the lowest base price?"
  },
  {
    "query" : "query { rooms ( where : { roomname : { _eq : \"Recluse and defiance\" } } ) { decor } }",
    "schemaId" : "inn_1",
    "question" : "What is the decor of room Recluse and defiance?"
  },
  {
    "query" : "query { rooms ( where : { roomname : { _eq : \"Recluse and defiance\" } } ) { decor } }",
    "schemaId" : "inn_1",
    "question" : "Return the decor of the room named \"Recluse and defiance\"."
  },
  {
    "query" : "query { rooms_aggregate ( where : { decor : { _eq : \"modern\" } } ) { aggregate { sum { maxoccupancy } } } }",
    "schemaId" : "inn_1",
    "question" : "What is the total number of people who could stay in the modern rooms in this inn?"
  },
  {
    "query" : "query { rooms_aggregate ( where : { decor : { _eq : \"modern\" } } ) { aggregate { sum { maxoccupancy } } } }",
    "schemaId" : "inn_1",
    "question" : "How many people in total can stay in the modern rooms of this inn?"
  },
  {
    "query" : "query { rooms_aggregate { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "How many rooms are there?"
  },
  {
    "query" : "query { rooms_aggregate { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "What is the total number of rooms available in this inn?"
  },
  {
    "query" : "query { rooms_aggregate ( where : { bedtype : { _eq : \"King\" } } ) { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "Find the number of rooms with a king bed."
  },
  {
    "query" : "query { rooms_aggregate ( where : { bedtype : { _eq : \"King\" } } ) { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "How many rooms have a king bed?"
  },
  {
    "query" : "query { rooms ( limit : 1 , order_by : { maxoccupancy : desc } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "Find the name of the room with the maximum occupancy."
  },
  {
    "query" : "query { rooms ( limit : 1 , order_by : { maxoccupancy : desc } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "What is the name of the room that can accommodate the most people?"
  },
  {
    "query" : "query { rooms ( limit : 1 , order_by : { baseprice : desc } ) { roomid roomname } }",
    "schemaId" : "inn_1",
    "question" : "Find the id and name of the most expensive base price room."
  },
  {
    "query" : "query { rooms ( limit : 1 , order_by : { baseprice : desc } ) { roomid roomname } }",
    "schemaId" : "inn_1",
    "question" : "Which room has the highest base price?"
  },
  {
    "query" : "query { rooms ( where : { decor : { _eq : \"traditional\" } } ) { roomname bedtype } }",
    "schemaId" : "inn_1",
    "question" : "List the type of bed and name of all traditional rooms."
  },
  {
    "query" : "query { rooms ( where : { decor : { _eq : \"traditional\" } } ) { roomname bedtype } }",
    "schemaId" : "inn_1",
    "question" : "What are the bed type and name of all the rooms with traditional decor?"
  },
  {
    "query" : "query { rooms ( order_by : { baseprice : asc } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "List the name of all rooms sorted by their prices."
  },
  {
    "query" : "query { rooms ( order_by : { baseprice : asc } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "Sort all the rooms according to the price. Just report the room names."
  },
  {
    "query" : "query { rooms ( where : { _or : [ { bedtype : { _eq : \"King\" } } , { bedtype : { _eq : \"Queen\" } } ] } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "List the name of rooms with king or queen bed."
  },
  {
    "query" : "query { rooms ( where : { _or : [ { bedtype : { _eq : \"King\" } } , { bedtype : { _eq : \"Queen\" } } ] } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "What are the names of rooms that have either king or queen bed?"
  },
  {
    "query" : "query { rooms_aggregate { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "How many different types of beds are there?"
  },
  {
    "query" : "query { rooms_aggregate { aggregate { count } } }",
    "schemaId" : "inn_1",
    "question" : "Find the number of distinct bed types available in this inn."
  },
  {
    "query" : "query { rooms ( limit : 3 , order_by : { baseprice : desc } ) { roomid roomname } }",
    "schemaId" : "inn_1",
    "question" : "Find the name and id of the top 3 expensive rooms."
  },
  {
    "query" : "query { rooms ( limit : 3 , order_by : { baseprice : desc } ) { roomid roomname } }",
    "schemaId" : "inn_1",
    "question" : "What are the name and id of the three highest priced rooms?"
  },
  {
    "query" : "query { rooms ( where : { baseprice : { _gte : 120 , _lte : 150 } } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "Find the name of rooms whose base price is between 120 and 150."
  },
  {
    "query" : "query { rooms ( where : { baseprice : { _gte : 120 , _lte : 150 } } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "Which rooms cost between 120 and 150? Give me the room names."
  },
  {
    "query" : "query { rooms ( where : { reservations : { firstname : { _like : \"%ROY%\" } } } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "Find the name of rooms booked by some customers whose first name contains ROY."
  },
  {
    "query" : "query { rooms ( where : { reservations : { firstname : { _like : \"%ROY%\" } } } ) { roomname } }",
    "schemaId" : "inn_1",
    "question" : "What are the name of rooms booked by customers whose first name has \"ROY\" in part?"
  },
  {
    "query" : "query { customers ( order_by : { customer_details : asc } ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "List the names of all the customers in alphabetical order."
  },
  {
    "query" : "query { customers ( order_by : { customer_details : asc } ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Sort the customer names in alphabetical order."
  },
  {
    "query" : "query { policies ( where : { customer : { customer_details : { _eq : \"Dayana Robel\" } } } ) { policy_type_code } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Find all the policy type codes associated with the customer \"Dayana Robel\""
  },
  {
    "query" : "query { policies ( where : { customer : { customer_details : { _eq : \"Dayana Robel\" } } } ) { policy_type_code } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "What are the type codes of the policies used by the customer \"Dayana Robel\"?"
  },
  {
    "query" : "query { claim_headers_aggregate { aggregate { sum { amount_piad } avg { amount_piad } } } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Find the total and average amount paid in claim headers."
  },
  {
    "query" : "query { claim_headers_aggregate { aggregate { sum { amount_piad } avg { amount_piad } } } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "What are the total amount and average amount paid in claim headers?"
  },
  {
    "query" : "query { claims_processing_stages_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "How many claim processing stages are there in total?"
  },
  {
    "query" : "query { claims_processing_stages_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Find the number of distinct stages in claim processing."
  },
  {
    "query" : "query { customers ( where : { customer_details : { _like : \"%Diana%\" } } ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Find the names of customers whose name contains \"Diana\"."
  },
  {
    "query" : "query { customers ( where : { customer_details : { _like : \"%Diana%\" } } ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Which customers have the substring \"Diana\" in their names? Return the customer details."
  },
  {
    "query" : "query { customers ( where : { policies : { policy_type_code : { _eq : \"Deputy\" } } } , distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Find the names of the customers who have an deputy policy."
  },
  {
    "query" : "query { customers ( where : { policies : { policy_type_code : { _eq : \"Deputy\" } } } , distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Which customers have an insurance policy with the type code \"Deputy\"? Give me the customer details."
  },
  {
    "query" : "query { customers ( where : { _or : [ { policies : { policy_type_code : { _eq : \"Deputy\" } } } , { policies : { policy_type_code : { _eq : \"Uniform\" } } } ] } , distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Find the names of customers who either have an deputy policy or uniformed policy."
  },
  {
    "query" : "query { customers ( where : { _or : [ { policies : { policy_type_code : { _eq : \"Deputy\" } } } , { policies : { policy_type_code : { _eq : \"Uniform\" } } } ] } , distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Which customers have an insurance policy with the type code \"Deputy\" or \"Uniform\"? Return the customer details."
  },
  {
    "query" : "query { claims_processing_stages ( where : { claim_status_name : { _eq : \"Open\" } } ) { claim_status_description } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "What is the description of the claim status \"Open\"?"
  },
  {
    "query" : "query { claims_processing_stages ( where : { claim_status_name : { _eq : \"Open\" } } ) { claim_status_description } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Find the description of the claim status \"Open\"."
  },
  {
    "query" : "query { claims_processing_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "How many distinct claim outcome codes are there?"
  },
  {
    "query" : "query { claims_processing_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_and_eClaims",
    "question" : "Count the number of distinct claim outcome codes."
  },
  {
    "query" : "query { available_policies { customer_phone } }",
    "schemaId" : "insurance_fnol",
    "question" : "Find all the phone numbers."
  },
  {
    "query" : "query { available_policies { customer_phone } }",
    "schemaId" : "insurance_fnol",
    "question" : "What are all the phone numbers?"
  },
  {
    "query" : "query { available_policies ( where : { policy_type_code : { _eq : \"Life Insurance\" } } ) { customer_phone } }",
    "schemaId" : "insurance_fnol",
    "question" : "What are the customer phone numbers under the policy \"Life Insurance\"?"
  },
  {
    "query" : "query { available_policies ( where : { policy_type_code : { _eq : \"Life Insurance\" } } ) { customer_phone } }",
    "schemaId" : "insurance_fnol",
    "question" : "What are the phone numbers of customers using the policy with the code \"Life Insurance\"?"
  },
  {
    "query" : "query { settlements_aggregate { aggregate { sum { settlement_amount } avg { settlement_amount } } } }",
    "schemaId" : "insurance_fnol",
    "question" : "Find the total and average amount of settlements."
  },
  {
    "query" : "query { settlements_aggregate { aggregate { sum { settlement_amount } avg { settlement_amount } } } }",
    "schemaId" : "insurance_fnol",
    "question" : "Return the sum and average of all settlement amounts."
  },
  {
    "query" : "query { customers_aggregate ( where : { customer_name : { _eq : \"Dayana Robel\" } } ) { aggregate { count } } }",
    "schemaId" : "insurance_fnol",
    "question" : "How many policies are listed for the customer named \"Dayana Robel\"?"
  },
  {
    "query" : "query { customers_aggregate ( where : { customer_name : { _eq : \"Dayana Robel\" } } ) { aggregate { count } } }",
    "schemaId" : "insurance_fnol",
    "question" : "Count the total number of policies used by the customer named \"Dayana Robel\"."
  },
  {
    "query" : "query { available_policies ( where : { customers_policies : { customer : { customer_name : { _eq : \"Dayana Robel\" } } } } , distinct_on : policy_type_code ) { policy_type_code } }",
    "schemaId" : "insurance_fnol",
    "question" : "What are all the policy types of the customer named \"Dayana Robel\"?"
  },
  {
    "query" : "query { available_policies ( where : { customers_policies : { customer : { customer_name : { _eq : \"Dayana Robel\" } } } } , distinct_on : policy_type_code ) { policy_type_code } }",
    "schemaId" : "insurance_fnol",
    "question" : "Tell me the types of the policy used by the customer named \"Dayana Robel\"."
  },
  {
    "query" : "query { services ( order_by : { service_name : asc } ) { service_name } }",
    "schemaId" : "insurance_fnol",
    "question" : "List all the services in the alphabetical order."
  },
  {
    "query" : "query { services ( order_by : { service_name : asc } ) { service_name } }",
    "schemaId" : "insurance_fnol",
    "question" : "Give me a list of all the service names sorted alphabetically."
  },
  {
    "query" : "query { services_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_fnol",
    "question" : "How many services are there?"
  },
  {
    "query" : "query { services_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_fnol",
    "question" : "Count the total number of available services."
  },
  {
    "query" : "query { customers ( where : { customer_name : { _like : \"%Diana%\" } } ) { customer_id } }",
    "schemaId" : "insurance_fnol",
    "question" : "Find the IDs of customers whose name contains \"Diana\"."
  },
  {
    "query" : "query { customers ( where : { customer_name : { _like : \"%Diana%\" } } ) { customer_id } }",
    "schemaId" : "insurance_fnol",
    "question" : "What are the IDs of customers who have \"Diana\" in part of their names?"
  },
  {
    "query" : "query { settlements_aggregate { aggregate { max { settlement_amount } min { settlement_amount } } } }",
    "schemaId" : "insurance_fnol",
    "question" : "What are the maximum and minimum settlement amount on record?"
  },
  {
    "query" : "query { settlements_aggregate { aggregate { max { settlement_amount } min { settlement_amount } } } }",
    "schemaId" : "insurance_fnol",
    "question" : "Find the maximum and minimum settlement amount."
  },
  {
    "query" : "query { customers ( order_by : { customer_id : asc } ) { customer_id customer_name } }",
    "schemaId" : "insurance_fnol",
    "question" : "List all the customers in increasing order of IDs."
  },
  {
    "query" : "query { customers ( order_by : { customer_id : asc } ) { customer_id customer_name } }",
    "schemaId" : "insurance_fnol",
    "question" : "What is the ordered list of customer ids?"
  },
  {
    "query" : "query { customers_policies ( where : { customer : { customer_name : { _like : \"%Diana%\" } } } ) { date_opened date_closed } }",
    "schemaId" : "insurance_fnol",
    "question" : "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\""
  },
  {
    "query" : "query { customers_policies ( where : { customer : { customer_name : { _like : \"%Diana%\" } } } ) { date_opened date_closed } }",
    "schemaId" : "insurance_fnol",
    "question" : "What are the open and close dates of all the policies used by the customer who have \"Diana\" in part of their names?"
  },
  {
    "query" : "query { payments ( order_by : { date_payment_made : asc } ) { payment_method_code date_payment_made amount_payment } }",
    "schemaId" : "insurance_policies",
    "question" : "List the method, date and amount of all the payments, in ascending order of date."
  },
  {
    "query" : "query { payments ( order_by : { date_payment_made : asc } ) { payment_method_code date_payment_made amount_payment } }",
    "schemaId" : "insurance_policies",
    "question" : "What are the method, date and amount of each payment? Sort the list in ascending order of date."
  },
  {
    "query" : "query { claims ( limit : 1 , order_by : { amount_claimed : desc } ) { amount_settled amount_claimed } }",
    "schemaId" : "insurance_policies",
    "question" : "Among all the claims, what is the settlement amount of the claim with the largest claim amount? List both the settlement amount and claim amount."
  },
  {
    "query" : "query { claims ( limit : 1 , order_by : { amount_claimed : desc } ) { amount_settled amount_claimed } }",
    "schemaId" : "insurance_policies",
    "question" : "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount."
  },
  {
    "query" : "query { claims ( limit : 1 , order_by : { amount_settled : asc } ) { amount_settled amount_claimed } }",
    "schemaId" : "insurance_policies",
    "question" : "Among all the claims, what is the amount claimed in the claim with the least amount settled? List both the settlement amount and claim amount."
  },
  {
    "query" : "query { claims ( limit : 1 , order_by : { amount_settled : asc } ) { amount_settled amount_claimed } }",
    "schemaId" : "insurance_policies",
    "question" : "Find the claimed amount in the claim with the least amount settled. Show both the settlement amount and claim amount."
  },
  {
    "query" : "query { claims ( limit : 1 , order_by : { date_claim_made : asc } ) { date_claim_made } }",
    "schemaId" : "insurance_policies",
    "question" : "Of all the claims, what was the earliest date when any claim was made?"
  },
  {
    "query" : "query { claims ( limit : 1 , order_by : { date_claim_made : asc } ) { date_claim_made } }",
    "schemaId" : "insurance_policies",
    "question" : "Tell me the the date when the first claim was made."
  },
  {
    "query" : "query { settlements_aggregate { aggregate { sum { amount_settled } } } }",
    "schemaId" : "insurance_policies",
    "question" : "What is the total amount of settlement made for all the settlements?"
  },
  {
    "query" : "query { settlements_aggregate { aggregate { sum { amount_settled } } } }",
    "schemaId" : "insurance_policies",
    "question" : "Compute the total amount of settlement across all the settlements."
  },
  {
    "query" : "query { settlements { date_claim_made date_claim_settled } }",
    "schemaId" : "insurance_policies",
    "question" : "What are the claim dates and settlement dates of all the settlements?"
  },
  {
    "query" : "query { settlements { date_claim_made date_claim_settled } }",
    "schemaId" : "insurance_policies",
    "question" : "Tell me the the claim date and settlement date for each settlement case."
  },
  {
    "query" : "query { payments_aggregate { aggregate { sum { amount_payment } } } }",
    "schemaId" : "insurance_policies",
    "question" : "What is the total amount of payment?"
  },
  {
    "query" : "query { payments_aggregate { aggregate { sum { amount_payment } } } }",
    "schemaId" : "insurance_policies",
    "question" : "Compute the total amount of payment processed."
  },
  {
    "query" : "query { customers ( distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "insurance_policies",
    "question" : "What are all the distinct details of the customers?"
  },
  {
    "query" : "query { customers ( distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "insurance_policies",
    "question" : "Return the distinct customer details."
  },
  {
    "query" : "query { settlements_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_policies",
    "question" : "How many settlements are there in total?"
  },
  {
    "query" : "query { settlements_aggregate { aggregate { count } } }",
    "schemaId" : "insurance_policies",
    "question" : "Count the total number of settlements made."
  },
  {
    "query" : "query { payments ( where : { payment_method_code : { _eq : \"Visa\" } } ) { payment_id date_payment_made amount_payment } }",
    "schemaId" : "insurance_policies",
    "question" : "Which Payments were processed with Visa? List the payment Id, the date and the amount."
  },
  {
    "query" : "query { payments ( where : { payment_method_code : { _eq : \"Visa\" } } ) { payment_id date_payment_made amount_payment } }",
    "schemaId" : "insurance_policies",
    "question" : "Give me the payment Id, the date and the amount for all the payments processed with Visa."
  },
  {
    "query" : "query { claims_aggregate { aggregate { sum { amount_claimed } } } }",
    "schemaId" : "insurance_policies",
    "question" : "Find the total claimed amount of all the claims."
  },
  {
    "query" : "query { claims_aggregate { aggregate { sum { amount_claimed } } } }",
    "schemaId" : "insurance_policies",
    "question" : "What is total amount claimed summed across all the claims?"
  },
  {
    "query" : "query { editor_aggregate { aggregate { count } } }",
    "schemaId" : "journal_committee",
    "question" : "How many editors are there?"
  },
  {
    "query" : "query { editor ( order_by : { age : asc } ) { name } }",
    "schemaId" : "journal_committee",
    "question" : "List the names of editors in ascending order of age."
  },
  {
    "query" : "query { editor { name age } }",
    "schemaId" : "journal_committee",
    "question" : "What are the names and ages of editors?"
  },
  {
    "query" : "query { editor ( where : { age : { _gt : 25.0 } } ) { name } }",
    "schemaId" : "journal_committee",
    "question" : "List the names of editors who are older than 25."
  },
  {
    "query" : "query { editor ( where : { _or : [ { age : { _eq : 24.0 } } , { age : { _eq : 25.0 } } ] } ) { name } }",
    "schemaId" : "journal_committee",
    "question" : "Show the names of editors of age either 24 or 25."
  },
  {
    "query" : "query { editor ( limit : 1 , order_by : { age : asc } ) { name } }",
    "schemaId" : "journal_committee",
    "question" : "What is the name of the youngest editor?"
  },
  {
    "query" : "query { journal ( distinct_on : theme ) { theme } }",
    "schemaId" : "journal_committee",
    "question" : "Show the distinct themes of journals."
  },
  {
    "query" : "query { editor { name journal_committees { journal { theme } } } }",
    "schemaId" : "journal_committee",
    "question" : "Show the names of editors and the theme of journals for which they serve on committees."
  },
  {
    "query" : "query { editor { name journal_committees { journal { theme } } } }",
    "schemaId" : "journal_committee",
    "question" : "For each journal_committee, find the editor name and the journal theme."
  },
  {
    "query" : "query { journal ( order_by : { theme : asc } ) { theme journal_committees { editor { name age } } } }",
    "schemaId" : "journal_committee",
    "question" : "Show the names and ages of editors and the theme of journals for which they serve on committees, in ascending alphabetical order of theme."
  },
  {
    "query" : "query { journal_aggregate ( where : { journal_committees : { work_type : { _eq : \"Photo\" } } } ) { aggregate { avg { sales } } } }",
    "schemaId" : "journal_committee",
    "question" : "What is the average sales of the journals that have an editor whose work type is 'Photo'?"
  },
  {
    "query" : "query { bank_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "How many bank branches are there?"
  },
  {
    "query" : "query { bank_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "Count the number of bank branches."
  },
  {
    "query" : "query { bank_aggregate { aggregate { sum { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "How many customers are there?"
  },
  {
    "query" : "query { bank_aggregate { aggregate { sum { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "What is the total number of customers across banks?"
  },
  {
    "query" : "query { bank_aggregate ( where : { city : { _eq : \"New York City\" } } ) { aggregate { sum { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "Find the number of customers in the banks at New York City."
  },
  {
    "query" : "query { bank_aggregate ( where : { city : { _eq : \"New York City\" } } ) { aggregate { sum { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "What is the total number of customers who use banks in New York City?"
  },
  {
    "query" : "query { bank_aggregate ( where : { state : { _eq : \"Utah\" } } ) { aggregate { avg { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "Find the average number of customers in all banks of Utah state."
  },
  {
    "query" : "query { bank_aggregate ( where : { state : { _eq : \"Utah\" } } ) { aggregate { avg { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "What is the average number of customers across banks in the state of Utah?"
  },
  {
    "query" : "query { bank_aggregate { aggregate { avg { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "Find the average number of customers cross all banks."
  },
  {
    "query" : "query { bank_aggregate { aggregate { avg { no_of_customers } } } }",
    "schemaId" : "loan_1",
    "question" : "What is the average number of bank customers?"
  },
  {
    "query" : "query { bank ( where : { bname : { _eq : \"morningside\" } } ) { city state } }",
    "schemaId" : "loan_1",
    "question" : "Find the city and state of the bank branch named morningside."
  },
  {
    "query" : "query { bank ( where : { bname : { _eq : \"morningside\" } } ) { city state } }",
    "schemaId" : "loan_1",
    "question" : "What city and state is the bank with the name morningside in?"
  },
  {
    "query" : "query { bank ( where : { state : { _eq : \"New York\" } } ) { bname } }",
    "schemaId" : "loan_1",
    "question" : "Find the branch names of banks in the New York state."
  },
  {
    "query" : "query { bank ( where : { state : { _eq : \"New York\" } } ) { bname } }",
    "schemaId" : "loan_1",
    "question" : "What are the names of banks in the state of New York?"
  },
  {
    "query" : "query { customer ( order_by : { acc_bal : asc } ) { cust_name } }",
    "schemaId" : "loan_1",
    "question" : "List the name of all customers sorted by their account balance in ascending order."
  },
  {
    "query" : "query { customer ( order_by : { acc_bal : asc } ) { cust_name } }",
    "schemaId" : "loan_1",
    "question" : "What are the names of all customers, ordered by account balance?"
  },
  {
    "query" : "query { customer ( where : { no_of_loans : { _eq : 0 } } ) { state acc_type credit_score } }",
    "schemaId" : "loan_1",
    "question" : "Find the state, account type, and credit score of the customer whose number of loan is 0."
  },
  {
    "query" : "query { customer ( where : { no_of_loans : { _eq : 0 } } ) { state acc_type credit_score } }",
    "schemaId" : "loan_1",
    "question" : "What are the states, account types, and credit scores for customers who have 0 loans?"
  },
  {
    "query" : "query { bank_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "Find the number of different cities which banks are located at."
  },
  {
    "query" : "query { bank_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "In how many different cities are banks located?"
  },
  {
    "query" : "query { bank_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "Find the number of different states which banks are located at."
  },
  {
    "query" : "query { bank_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "In how many different states are banks located?"
  },
  {
    "query" : "query { customer_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "How many distinct types of accounts are there?"
  },
  {
    "query" : "query { customer_aggregate { aggregate { count } } }",
    "schemaId" : "loan_1",
    "question" : "Count the number of different account types."
  },
  {
    "query" : "query { customer ( where : { cust_name : { _like : \"%a%\" } } ) { cust_name acc_bal } }",
    "schemaId" : "loan_1",
    "question" : "Find the name and account balance of the customer whose name includes the letter ‘a’."
  },
  {
    "query" : "query { customer ( where : { cust_name : { _like : \"%a%\" } } ) { cust_name acc_bal } }",
    "schemaId" : "loan_1",
    "question" : "What are the names and account balances of customers with the letter a in their names?"
  },
  {
    "query" : "query { customer_aggregate ( where : { _or : [ { state : { _eq : \"Utah\" } } , { state : { _eq : \"Texas\" } } ] } ) { aggregate { sum { acc_bal } } } }",
    "schemaId" : "loan_1",
    "question" : "Find the total account balance of each customer from Utah or Texas."
  },
  {
    "query" : "query { customer_aggregate ( where : { _or : [ { state : { _eq : \"Utah\" } } , { state : { _eq : \"Texas\" } } ] } ) { aggregate { sum { acc_bal } } } }",
    "schemaId" : "loan_1",
    "question" : "What are the total account balances for each customer from Utah or Texas?"
  },
  {
    "query" : "query { bank ( limit : 1 , order_by : { no_of_customers : desc } ) { bname } }",
    "schemaId" : "loan_1",
    "question" : "Find the branch name of the bank that has the most number of customers."
  },
  {
    "query" : "query { bank ( limit : 1 , order_by : { no_of_customers : desc } ) { bname } }",
    "schemaId" : "loan_1",
    "question" : "What is the name of the bank branch with the greatest number of customers?"
  },
  {
    "query" : "query { customer ( limit : 1 , order_by : { credit_score : asc } ) { cust_name } }",
    "schemaId" : "loan_1",
    "question" : "Find the name of customer who has the lowest credit score."
  },
  {
    "query" : "query { customer ( limit : 1 , order_by : { credit_score : asc } ) { cust_name } }",
    "schemaId" : "loan_1",
    "question" : "What is the name of the customer with the worst credit score?"
  },
  {
    "query" : "query { customer ( limit : 1 , order_by : { credit_score : desc } ) { cust_name acc_type acc_bal } }",
    "schemaId" : "loan_1",
    "question" : "Find the name, account type, and account balance of the customer who has the highest credit score."
  },
  {
    "query" : "query { customer ( limit : 1 , order_by : { credit_score : desc } ) { cust_name acc_type acc_bal } }",
    "schemaId" : "loan_1",
    "question" : "What is the name, account type, and account balance corresponding to the customer with the highest credit score?"
  },
  {
    "query" : "query { bank ( distinct_on : bname ) { bname } }",
    "schemaId" : "loan_1",
    "question" : "Find the name of bank branches that provided some loans."
  },
  {
    "query" : "query { bank ( distinct_on : bname ) { bname } }",
    "schemaId" : "loan_1",
    "question" : "What are the names of the different banks that have provided loans?"
  },
  {
    "query" : "query { customer ( where : { loans : { amount : { _gt : 3000 } } } ) { cust_name } }",
    "schemaId" : "loan_1",
    "question" : "Find the the name of the customers who have a loan with amount more than 3000."
  },
  {
    "query" : "query { customer ( where : { loans : { amount : { _gt : 3000 } } } ) { cust_name } }",
    "schemaId" : "loan_1",
    "question" : "What are the names of customers who have a loan of more than 3000 in amount?"
  },
  {
    "query" : "query { bank ( where : { loans : { loan_type : { _eq : \"Business\" } } } ) { bname city } }",
    "schemaId" : "loan_1",
    "question" : "Find the city and name of bank branches that provide business loans."
  },
  {
    "query" : "query { bank ( where : { loans : { loan_type : { _eq : \"Business\" } } } ) { bname city } }",
    "schemaId" : "loan_1",
    "question" : "What are the names and cities of bank branches that offer loans for business?"
  },
  {
    "query" : "query { loan_aggregate ( where : { bank : { state : { _eq : \"New York\" } } } ) { aggregate { sum { amount } } } }",
    "schemaId" : "loan_1",
    "question" : "Find the total amount of loans provided by bank branches in the state of New York."
  },
  {
    "query" : "query { loan_aggregate ( where : { bank : { state : { _eq : \"New York\" } } } ) { aggregate { sum { amount } } } }",
    "schemaId" : "loan_1",
    "question" : "What is the total amount of money loaned by banks in New York state?"
  },
  {
    "query" : "query { services ( where : { organization : { organization_details : { _eq : \"Denesik and Sons Party\" } } } , distinct_on : service_type_code ) { service_type_code } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "What is the distinct service types that are provided by the organization which has detail 'Denesik and Sons Party'?"
  },
  {
    "query" : "query { things { thing_id type_of_thing_code organization { organization_details } } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "List the id and type of each thing, and the details of the organization that owns it."
  },
  {
    "query" : "query { customer_events { date_moved_in customer { customer_id customer_details } } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "What is each customer's move in date, and the corresponding customer id and details?"
  },
  {
    "query" : "query { timed_locations_of_things_aggregate ( where : { thing : { service_details : { _eq : \"Unsatisfied\" } } } ) { aggregate { count } } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "How many distinct locations have the things with service detail 'Unsatisfied' been located in?"
  },
  {
    "query" : "query { timed_status_of_things_aggregate { aggregate { count } } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "How many different status codes of things are there?"
  },
  {
    "query" : "query { residents_aggregate { aggregate { max { date_moved_in } } } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "When is the last day any resident moved in?"
  },
  {
    "query" : "query { residents ( where : { other_details : { _like : \"%Miss%\" } } ) { other_details } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "What are the resident details containing the substring 'Miss'?"
  },
  {
    "query" : "query { customer_events { customer_event_id date_moved_in property_id } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "List the customer event id and the corresponding move in date and property id."
  },
  {
    "query" : "query { residents ( distinct_on : date_moved_in ) { date_moved_in } }",
    "schemaId" : "local_govt_and_lot",
    "question" : "What are the distinct move in dates of the residents?"
  },
  {
    "query" : "query { events ( where : { service : { service_type_code : { _eq : \"Marriage\" } } } ) { event_details } }",
    "schemaId" : "local_govt_in_alabama",
    "question" : "what are the event details of the services that have the type code 'Marriage'?"
  },
  {
    "query" : "query { participants { participant_id participant_type_code participant_details } }",
    "schemaId" : "local_govt_in_alabama",
    "question" : "What are all the the participant ids, type code and details?"
  },
  {
    "query" : "query { participants_aggregate ( where : { participant_type_code : { _eq : \"Organizer\" } } ) { aggregate { count } } }",
    "schemaId" : "local_govt_in_alabama",
    "question" : "How many participants belong to the type 'Organizer'?"
  },
  {
    "query" : "query { services ( order_by : { service_type_code : asc } ) { service_type_code } }",
    "schemaId" : "local_govt_in_alabama",
    "question" : "List the type of the services in alphabetical order."
  },
  {
    "query" : "query { events { service_id event_details } }",
    "schemaId" : "local_govt_in_alabama",
    "question" : "List the service id and details for the events."
  },
  {
    "query" : "query { participants_aggregate ( where : { participant_details : { _like : \"%Dr.%\" } } ) { aggregate { count } } }",
    "schemaId" : "local_govt_in_alabama",
    "question" : "How many events had participants whose details had the substring 'Dr.'"
  },
  {
    "query" : "query { participants_in_events_aggregate { aggregate { count } } }",
    "schemaId" : "local_govt_in_alabama",
    "question" : "What are all the distinct participant ids who attended any events?"
  },
  {
    "query" : "query { customer_master_index ( where : { cmi_cross_references : { source_system_code : { _eq : \"Tax\" } } } ) { cmi_details } }",
    "schemaId" : "local_govt_mdm",
    "question" : "what are the details of the cmi masters that have the cross reference code 'Tax'?"
  },
  {
    "query" : "query { cmi_cross_references ( order_by : { benefits_overpayments_aggregate : { min : { council_tax_id : asc } } } ) { source_system_code benefits_overpayments { council_tax_id } } }",
    "schemaId" : "local_govt_mdm",
    "question" : "What is the tax source system code related to the benefits and overpayments? List the code and the benifit id, order by benifit id."
  },
  {
    "query" : "query { cmi_cross_references { source_system_code master_customer_id parking_fines { council_tax_id } } }",
    "schemaId" : "local_govt_mdm",
    "question" : "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?"
  },
  {
    "query" : "query { electoral_register ( where : { _or : [ { cmi_cross_reference : { source_system_code : { _eq : \"Electoral\" } } } , { cmi_cross_reference : { source_system_code : { _eq : \"Tax\" } } } ] } ) { electoral_register_id } }",
    "schemaId" : "local_govt_mdm",
    "question" : "What are the register ids of electoral registries that have the cross reference source system code 'Electoral' or 'Tax'?"
  },
  {
    "query" : "query { cmi_cross_references_aggregate { aggregate { count } } }",
    "schemaId" : "local_govt_mdm",
    "question" : "How many different source system code for the cmi cross references are there?"
  },
  {
    "query" : "query { customer_master_index ( order_by : { cmi_details : desc } ) { cmi_details } }",
    "schemaId" : "local_govt_mdm",
    "question" : "List all information about customer master index, and sort them by details in descending order."
  },
  {
    "query" : "query { parking_fines { council_tax_id cmi_cross_ref_id } }",
    "schemaId" : "local_govt_mdm",
    "question" : "List the council tax ids and their related cmi cross references of all the parking fines."
  },
  {
    "query" : "query { rent_arrears_aggregate { aggregate { count } } }",
    "schemaId" : "local_govt_mdm",
    "question" : "How many council taxes are collected for renting arrears ?"
  },
  {
    "query" : "query { cmi_cross_references ( where : { customer_master_index : { cmi_details : { _eq : \"Gottlieb ,  Becker and Wyman\" } } } , distinct_on : source_system_code ) { source_system_code } }",
    "schemaId" : "local_govt_mdm",
    "question" : "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?"
  },
  {
    "query" : "query { cmi_cross_references ( where : { source_system_code : { _like : \"%en%\" } } , distinct_on : source_system_code ) { source_system_code } }",
    "schemaId" : "local_govt_mdm",
    "question" : "Which distinct source system code includes the substring 'en'?"
  },
  {
    "query" : "query { technician_aggregate { aggregate { count } } }",
    "schemaId" : "machine_repair",
    "question" : "How many technicians are there?"
  },
  {
    "query" : "query { technician_aggregate { aggregate { count } } }",
    "schemaId" : "machine_repair",
    "question" : "What is the number of technicians?"
  },
  {
    "query" : "query { technician ( order_by : { age : asc } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "List the names of technicians in ascending order of age."
  },
  {
    "query" : "query { technician ( order_by : { age : asc } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "What are the names of the technicians by ascending order of age?"
  },
  {
    "query" : "query { technician { team starting_year } }",
    "schemaId" : "machine_repair",
    "question" : "What are the team and starting year of technicians?"
  },
  {
    "query" : "query { technician { team starting_year } }",
    "schemaId" : "machine_repair",
    "question" : "What is the team and starting year for each technician?"
  },
  {
    "query" : "query { technician ( where : { team : { _neq : \"NYY\" } } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "List the name of technicians whose team is not \"NYY\"."
  },
  {
    "query" : "query { technician ( where : { team : { _neq : \"NYY\" } } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "What is the name of the technician whose team is not 'NYY'?"
  },
  {
    "query" : "query { technician ( where : { _or : [ { age : { _eq : 36 } } , { age : { _eq : 37 } } ] } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "Show the name of technicians aged either 36 or 37"
  },
  {
    "query" : "query { technician ( where : { _or : [ { age : { _eq : 36 } } , { age : { _eq : 37 } } ] } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "What are the names of the technicians aged either 36 or 37?"
  },
  {
    "query" : "query { technician ( limit : 1 , order_by : { age : desc } ) { starting_year } }",
    "schemaId" : "machine_repair",
    "question" : "What is the starting year of the oldest technicians?"
  },
  {
    "query" : "query { technician ( limit : 1 , order_by : { age : desc } ) { starting_year } }",
    "schemaId" : "machine_repair",
    "question" : "What is the starting year for the oldest technician?"
  },
  {
    "query" : "query { technician { name repair_assignments { machine { machine_series } } } }",
    "schemaId" : "machine_repair",
    "question" : "Show names of technicians and series of machines they are assigned to repair."
  },
  {
    "query" : "query { technician { name repair_assignments { machine { machine_series } } } }",
    "schemaId" : "machine_repair",
    "question" : "What are the names of technicians and the machine series that they repair?"
  },
  {
    "query" : "query { machine ( order_by : { quality_rank : asc } ) { repair_assignments { technician { name } } } }",
    "schemaId" : "machine_repair",
    "question" : "Show names of technicians in ascending order of quality rank of the machine they are assigned."
  },
  {
    "query" : "query { machine ( order_by : { quality_rank : asc } ) { repair_assignments { technician { name } } } }",
    "schemaId" : "machine_repair",
    "question" : "What are the names of the technicians by ascending order of quality rank for the machine they are assigned?"
  },
  {
    "query" : "query { technician ( where : { repair_assignments : { machine : { value_points : { _gt : 70.0 } } } } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "Show names of technicians who are assigned to repair machines with value point more than 70."
  },
  {
    "query" : "query { technician ( where : { repair_assignments : { machine : { value_points : { _gt : 70.0 } } } } ) { name } }",
    "schemaId" : "machine_repair",
    "question" : "What are the names of the technicians that are assigned to repair machines with more point values than 70?"
  },
  {
    "query" : "query { manufacturers ( where : { name : { _eq : \"Sony\" } } ) { founder } }",
    "schemaId" : "manufactory_1",
    "question" : "Who is the founder of Sony?"
  },
  {
    "query" : "query { manufacturers ( where : { name : { _eq : \"Sony\" } } ) { founder } }",
    "schemaId" : "manufactory_1",
    "question" : "Return the founder of Sony."
  },
  {
    "query" : "query { manufacturers ( where : { founder : { _eq : \"James\" } } ) { headquarter } }",
    "schemaId" : "manufactory_1",
    "question" : "Where is the headquarter of the company founded by James?"
  },
  {
    "query" : "query { manufacturers ( where : { founder : { _eq : \"James\" } } ) { headquarter } }",
    "schemaId" : "manufactory_1",
    "question" : "What is the headquarter of the company whose founder is James?"
  },
  {
    "query" : "query { manufacturers ( order_by : { revenue : desc } ) { name headquarter } }",
    "schemaId" : "manufactory_1",
    "question" : "Find all manufacturers' names and their headquarters, sorted by the ones with highest revenue first."
  },
  {
    "query" : "query { manufacturers ( order_by : { revenue : desc } ) { name headquarter } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names and headquarters of all manufacturers, ordered by revenue descending?"
  },
  {
    "query" : "query { manufacturers_aggregate { aggregate { avg { revenue } max { revenue } sum { revenue } } } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the average, maximum and total revenues of all companies?"
  },
  {
    "query" : "query { manufacturers_aggregate { aggregate { avg { revenue } max { revenue } sum { revenue } } } }",
    "schemaId" : "manufactory_1",
    "question" : "Return the average, maximum, and total revenues across all manufacturers."
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { founder : { _eq : \"Andy\" } } ) { aggregate { count } } }",
    "schemaId" : "manufactory_1",
    "question" : "How many companies were created by Andy?"
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { founder : { _eq : \"Andy\" } } ) { aggregate { count } } }",
    "schemaId" : "manufactory_1",
    "question" : "Return the number of companies created by Andy."
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { headquarter : { _eq : \"Austin\" } } ) { aggregate { sum { revenue } } } }",
    "schemaId" : "manufactory_1",
    "question" : "Find the total revenue created by the companies whose headquarter is located at Austin."
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { headquarter : { _eq : \"Austin\" } } ) { aggregate { sum { revenue } } } }",
    "schemaId" : "manufactory_1",
    "question" : "What is the sum of revenue from companies with headquarters in Austin?"
  },
  {
    "query" : "query { manufacturers ( distinct_on : headquarter ) { headquarter } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the different cities listed?"
  },
  {
    "query" : "query { manufacturers ( distinct_on : headquarter ) { headquarter } }",
    "schemaId" : "manufactory_1",
    "question" : "Give the distinct headquarters of manufacturers."
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { _or : [ { headquarter : { _eq : \"Tokyo\" } } , { headquarter : { _eq : \"Beijing\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "manufactory_1",
    "question" : "Find the number of manufactures that are based in Tokyo or Beijing."
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { _or : [ { headquarter : { _eq : \"Tokyo\" } } , { headquarter : { _eq : \"Beijing\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "manufactory_1",
    "question" : "How many manufacturers have headquarters in either Tokyo or Beijing?"
  },
  {
    "query" : "query { manufacturers ( where : { name : { _like : \"S%\" } } ) { founder } }",
    "schemaId" : "manufactory_1",
    "question" : "Find the founder of the company whose name begins with the letter 'S'."
  },
  {
    "query" : "query { manufacturers ( where : { name : { _like : \"S%\" } } ) { founder } }",
    "schemaId" : "manufactory_1",
    "question" : "Who is the founders of companies whose first letter is S?"
  },
  {
    "query" : "query { manufacturers ( where : { revenue : { _gte : 100.0 , _lte : 150.0 } } ) { name } }",
    "schemaId" : "manufactory_1",
    "question" : "Find the name of companies whose revenue is between 100 and 150."
  },
  {
    "query" : "query { manufacturers ( where : { revenue : { _gte : 100.0 , _lte : 150.0 } } ) { name } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names of companies with revenue between 100 and 150?"
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { _or : [ { headquarter : { _eq : \"Tokyo\" } } , { headquarter : { _eq : \"Taiwan\" } } ] } ) { aggregate { sum { revenue } } } }",
    "schemaId" : "manufactory_1",
    "question" : "What is the total revenue of all companies whose main office is at Tokyo or Taiwan?"
  },
  {
    "query" : "query { manufacturers_aggregate ( where : { _or : [ { headquarter : { _eq : \"Tokyo\" } } , { headquarter : { _eq : \"Taiwan\" } } ] } ) { aggregate { sum { revenue } } } }",
    "schemaId" : "manufactory_1",
    "question" : "Return the total revenue of companies with headquarters in Tokyo or Taiwan."
  },
  {
    "query" : "query { manufacturers ( limit : 1 , order_by : { revenue : desc } ) { name headquarter founder } }",
    "schemaId" : "manufactory_1",
    "question" : "Find the name, headquarter and founder of the manufacturer that has the highest revenue."
  },
  {
    "query" : "query { manufacturers ( limit : 1 , order_by : { revenue : desc } ) { name headquarter founder } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names, headquarters and founders of the company with the highest revenue?"
  },
  {
    "query" : "query { manufacturers ( order_by : { revenue : desc } ) { name headquarter revenue } }",
    "schemaId" : "manufactory_1",
    "question" : "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order."
  },
  {
    "query" : "query { manufacturers ( order_by : { revenue : desc } ) { name headquarter revenue } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names, headquarters and revenues for manufacturers, sorted by revenue descending?"
  },
  {
    "query" : "query { products { name } }",
    "schemaId" : "manufactory_1",
    "question" : "Select the names of all the products in the store."
  },
  {
    "query" : "query { products { name } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names of all products?"
  },
  {
    "query" : "query { products { name price } }",
    "schemaId" : "manufactory_1",
    "question" : "Select the names and the prices of all the products in the store."
  },
  {
    "query" : "query { products { name price } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names and prices of all products in the store?"
  },
  {
    "query" : "query { products ( where : { price : { _lte : 200 } } ) { name } }",
    "schemaId" : "manufactory_1",
    "question" : "Select the name of the products with a price less than or equal to $200."
  },
  {
    "query" : "query { products ( where : { price : { _lte : 200 } } ) { name } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names of products with price at most 200?"
  },
  {
    "query" : "query { products ( where : { price : { _gte : 60 , _lte : 120 } } ) { manufacturer name price } }",
    "schemaId" : "manufactory_1",
    "question" : "Find all information of all the products with a price between $60 and $120."
  },
  {
    "query" : "query { products ( where : { price : { _gte : 60 , _lte : 120 } } ) { manufacturer name price } }",
    "schemaId" : "manufactory_1",
    "question" : "What is all the information of all the products that have a price between 60 and 120?"
  },
  {
    "query" : "query { products_aggregate { aggregate { avg { price } } } }",
    "schemaId" : "manufactory_1",
    "question" : "Compute the average price of all the products."
  },
  {
    "query" : "query { products_aggregate { aggregate { avg { price } } } }",
    "schemaId" : "manufactory_1",
    "question" : "What is the average price across all products?"
  },
  {
    "query" : "query { products_aggregate ( where : { manufacturer : { _eq : 2 } } ) { aggregate { avg { price } } } }",
    "schemaId" : "manufactory_1",
    "question" : "Compute the average price of all products with manufacturer code equal to 2."
  },
  {
    "query" : "query { products_aggregate ( where : { manufacturer : { _eq : 2 } } ) { aggregate { avg { price } } } }",
    "schemaId" : "manufactory_1",
    "question" : "What is the average price of products with manufacturer codes equal to 2?"
  },
  {
    "query" : "query { products_aggregate ( where : { price : { _gte : 180 } } ) { aggregate { count } } }",
    "schemaId" : "manufactory_1",
    "question" : "Compute the number of products with a price larger than or equal to $180."
  },
  {
    "query" : "query { products_aggregate ( where : { price : { _gte : 180 } } ) { aggregate { count } } }",
    "schemaId" : "manufactory_1",
    "question" : "How many products have prices of at least 180?"
  },
  {
    "query" : "query { products ( order_by : { price : asc , name : asc } , where : { price : { _gte : 180 } } ) { name price } }",
    "schemaId" : "manufactory_1",
    "question" : "Select the name and price of all products with a price larger than or equal to $180, and sort first by price (in descending order), and then by name  (in ascending order)."
  },
  {
    "query" : "query { products ( order_by : { price : asc , name : asc } , where : { price : { _gte : 180 } } ) { name price } }",
    "schemaId" : "manufactory_1",
    "question" : "What are the names and prices of products that cost at least 180, sorted by price decreasing and name ascending?"
  },
  {
    "query" : "query { products { manufacturer name price } }",
    "schemaId" : "manufactory_1",
    "question" : "Select all the data from the products and each product's manufacturer."
  },
  {
    "query" : "query { products { manufacturer name price } }",
    "schemaId" : "manufactory_1",
    "question" : "What is all the product data, as well as  each product's manufacturer?"
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { price : asc } ) { name price } }",
    "schemaId" : "manufactory_1",
    "question" : "Select the name and price of the cheapest product."
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { price : asc } ) { name price } }",
    "schemaId" : "manufactory_1",
    "question" : "What is the name and price of the cheapest product?"
  },
  {
    "query" : "query { furniture_aggregate { aggregate { sum { num_of_component } } } }",
    "schemaId" : "manufacturer",
    "question" : "How many furniture components are there in total?"
  },
  {
    "query" : "query { furniture ( limit : 1 , order_by : { market_rate : desc } ) { name furniture_id } }",
    "schemaId" : "manufacturer",
    "question" : "Return the name and id of the furniture with the highest market rate."
  },
  {
    "query" : "query { furniture_aggregate ( limit : 2 , order_by : { market_rate : desc } ) { aggregate { sum { market_rate } } } }",
    "schemaId" : "manufacturer",
    "question" : "find the total market rate of the furnitures that have the top 2 market shares."
  },
  {
    "query" : "query { furniture ( where : { num_of_component : { _gt : 10 } } ) { num_of_component name } }",
    "schemaId" : "manufacturer",
    "question" : "Find the component amounts and names of all furnitures that have more than 10 components."
  },
  {
    "query" : "query { furniture ( limit : 1 , order_by : { market_rate : asc } ) { name num_of_component } }",
    "schemaId" : "manufacturer",
    "question" : "Find the name and component amount of the least popular furniture."
  },
  {
    "query" : "query { manufacturer ( limit : 1 , order_by : { num_of_shops : desc } ) { open_year name } }",
    "schemaId" : "manufacturer",
    "question" : "Which manufacturer has the most number of shops? List its name and year of opening."
  },
  {
    "query" : "query { manufacturer_aggregate ( where : { num_of_shops : { _gt : 20 } } ) { aggregate { avg { num_of_factories } } } }",
    "schemaId" : "manufacturer",
    "question" : "Find the average number of factories for the manufacturers that have more than 20 shops."
  },
  {
    "query" : "query { manufacturer ( order_by : { open_year : asc } ) { name manufacturer_id } }",
    "schemaId" : "manufacturer",
    "question" : "List all manufacturer names and ids ordered by their opening year."
  },
  {
    "query" : "query { manufacturer ( where : { _or : [ { num_of_shops : { _gt : 10 } } , { num_of_factories : { _lt : 10 } } ] } ) { name open_year } }",
    "schemaId" : "manufacturer",
    "question" : "Give me the name and year of opening of the manufacturers that have either less than 10 factories or more than 10 shops."
  },
  {
    "query" : "query { manufacturer_aggregate ( where : { open_year : { _lt : 1990.0 } } ) { aggregate { max { num_of_shops } avg { num_of_factories } } } }",
    "schemaId" : "manufacturer",
    "question" : "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990."
  },
  {
    "query" : "query { manufacturer ( limit : 1 , order_by : { furniture_manufactes_aggregate : { max : { price_in_dollar : desc_nulls_last } } } ) { manufacturer_id num_of_shops } }",
    "schemaId" : "manufacturer",
    "question" : "Find the id and number of shops for the company that produces the most expensive furniture."
  },
  {
    "query" : "query { furniture { name furniture_manufactes { price_in_dollar } } }",
    "schemaId" : "manufacturer",
    "question" : "Give me the names and prices of furnitures which some companies are manufacturing."
  },
  {
    "query" : "query { country_aggregate { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "How many countries are there in total?"
  },
  {
    "query" : "query { country_aggregate { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "Count the number of countries."
  },
  {
    "query" : "query { country { country_name capital } }",
    "schemaId" : "match_season",
    "question" : "Show the country name and capital of all countries."
  },
  {
    "query" : "query { country { country_name capital } }",
    "schemaId" : "match_season",
    "question" : "What are the names and capitals of each country?"
  },
  {
    "query" : "query { country ( where : { official_native_language : { _like : \"%English%\" } } ) { official_native_language } }",
    "schemaId" : "match_season",
    "question" : "Show all official native languages that contain the word \"English\"."
  },
  {
    "query" : "query { country ( where : { official_native_language : { _like : \"%English%\" } } ) { official_native_language } }",
    "schemaId" : "match_season",
    "question" : "What are the official native languages that contain the string \"English\"."
  },
  {
    "query" : "query { match_season ( distinct_on : position ) { position } }",
    "schemaId" : "match_season",
    "question" : "Show all distinct positions of matches."
  },
  {
    "query" : "query { match_season ( distinct_on : position ) { position } }",
    "schemaId" : "match_season",
    "question" : "What are the different positions for match season?"
  },
  {
    "query" : "query { match_season ( where : { college : { _eq : \"UCLA\" } } ) { player } }",
    "schemaId" : "match_season",
    "question" : "Show the players from college UCLA."
  },
  {
    "query" : "query { match_season ( where : { college : { _eq : \"UCLA\" } } ) { player } }",
    "schemaId" : "match_season",
    "question" : "Who are the players from UCLA?"
  },
  {
    "query" : "query { match_season ( where : { _or : [ { college : { _eq : \"UCLA\" } } , { college : { _eq : \"Duke\" } } ] } , distinct_on : position ) { position } }",
    "schemaId" : "match_season",
    "question" : "Show the distinct position of players from college UCLA or Duke."
  },
  {
    "query" : "query { match_season ( where : { _or : [ { college : { _eq : \"UCLA\" } } , { college : { _eq : \"Duke\" } } ] } , distinct_on : position ) { position } }",
    "schemaId" : "match_season",
    "question" : "What are the different positions of players from UCLA or Duke colleges?"
  },
  {
    "query" : "query { match_season ( where : { position : { _eq : \"Defender\" } } ) { draft_pick_number draft_class } }",
    "schemaId" : "match_season",
    "question" : "Show the draft pick numbers and draft classes of players whose positions are defenders."
  },
  {
    "query" : "query { match_season ( where : { position : { _eq : \"Defender\" } } ) { draft_pick_number draft_class } }",
    "schemaId" : "match_season",
    "question" : "What are the draft pick numbers and draft classes for players who play the Defender position?"
  },
  {
    "query" : "query { match_season_aggregate { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "How many distinct teams are involved in match seasons?"
  },
  {
    "query" : "query { match_season_aggregate { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "Count the number of different teams involved in match season."
  },
  {
    "query" : "query { player { player years_played } }",
    "schemaId" : "match_season",
    "question" : "Show the players and the years played."
  },
  {
    "query" : "query { player { player years_played } }",
    "schemaId" : "match_season",
    "question" : "Who are the different players and how many years has each played?"
  },
  {
    "query" : "query { team { name } }",
    "schemaId" : "match_season",
    "question" : "Show all team names."
  },
  {
    "query" : "query { team { name } }",
    "schemaId" : "match_season",
    "question" : "What are the names of all teams?"
  },
  {
    "query" : "query { match_season { season player countryByCountry { country_name } } }",
    "schemaId" : "match_season",
    "question" : "Show the season, the player, and the name of the country that player belongs to."
  },
  {
    "query" : "query { match_season { season player countryByCountry { country_name } } }",
    "schemaId" : "match_season",
    "question" : "For each player, what are their name, season, and country that they belong to?"
  },
  {
    "query" : "query { match_season ( where : { countryByCountry : { country_name : { _eq : \"Indonesia\" } } } ) { player } }",
    "schemaId" : "match_season",
    "question" : "Which players are from Indonesia?"
  },
  {
    "query" : "query { match_season ( where : { countryByCountry : { country_name : { _eq : \"Indonesia\" } } } ) { player } }",
    "schemaId" : "match_season",
    "question" : "Who are the players from Indonesia?"
  },
  {
    "query" : "query { match_season ( where : { countryByCountry : { capital : { _eq : \"Dublin\" } } } , distinct_on : position ) { position } }",
    "schemaId" : "match_season",
    "question" : "What are the distinct positions of the players from a country whose capital is Dublin?"
  },
  {
    "query" : "query { match_season ( where : { countryByCountry : { capital : { _eq : \"Dublin\" } } } , distinct_on : position ) { position } }",
    "schemaId" : "match_season",
    "question" : "Give the different positions of players who play for the country with the capital Dublin."
  },
  {
    "query" : "query { country ( where : { _or : [ { match_seasons : { college : { _eq : \"Maryland\" } } } , { match_seasons : { college : { _eq : \"Duke\" } } } ] } ) { official_native_language } }",
    "schemaId" : "match_season",
    "question" : "What are the official languages of the countries of players from Maryland or Duke college?"
  },
  {
    "query" : "query { country ( where : { _or : [ { match_seasons : { college : { _eq : \"Maryland\" } } } , { match_seasons : { college : { _eq : \"Duke\" } } } ] } ) { official_native_language } }",
    "schemaId" : "match_season",
    "question" : "Return the official native languages of countries who have players from Maryland or Duke colleges."
  },
  {
    "query" : "query { country_aggregate ( where : { match_seasons : { position : { _eq : \"Defender\" } } } ) { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "How many distinct official languages are there among countries of players whose positions are defenders."
  },
  {
    "query" : "query { country_aggregate ( where : { match_seasons : { position : { _eq : \"Defender\" } } } ) { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "Count the number of different official languages corresponding to countries that players who play Defender are from."
  },
  {
    "query" : "query { match_season { season player teamByTeam { name } } }",
    "schemaId" : "match_season",
    "question" : "Show the season, the player, and the name of the team that players belong to."
  },
  {
    "query" : "query { match_season { season player teamByTeam { name } } }",
    "schemaId" : "match_season",
    "question" : "Who are the different players, what season do they play in, and what is the name of the team they are on?"
  },
  {
    "query" : "query { match_season ( where : { teamByTeam : { name : { _eq : \"Ryley Goldner\" } } } ) { position } }",
    "schemaId" : "match_season",
    "question" : "Show the positions of the players from the team with name \"Ryley Goldner\"."
  },
  {
    "query" : "query { match_season ( where : { teamByTeam : { name : { _eq : \"Ryley Goldner\" } } } ) { position } }",
    "schemaId" : "match_season",
    "question" : "Return the positions of players on the team Ryley Goldner."
  },
  {
    "query" : "query { match_season_aggregate ( where : { teamByTeam : { name : { _eq : \"Columbus Crew\" } } } ) { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "How many distinct colleges are associated with players from the team with name \"Columbus Crew\"."
  },
  {
    "query" : "query { match_season_aggregate ( where : { teamByTeam : { name : { _eq : \"Columbus Crew\" } } } ) { aggregate { count } } }",
    "schemaId" : "match_season",
    "question" : "Count the number of different colleges that players who play for Columbus Crew are from."
  },
  {
    "query" : "query { player ( where : { teamByTeam : { name : { _eq : \"Columbus Crew\" } } } ) { player years_played } }",
    "schemaId" : "match_season",
    "question" : "Show the players and years played for players from team \"Columbus Crew\"."
  },
  {
    "query" : "query { player ( where : { teamByTeam : { name : { _eq : \"Columbus Crew\" } } } ) { player years_played } }",
    "schemaId" : "match_season",
    "question" : "What are the players who played for Columbus Crew, and how many years did each play for?"
  },
  {
    "query" : "query { match_season ( order_by : { college : asc } ) { player } }",
    "schemaId" : "match_season",
    "question" : "Return all players sorted by college in ascending alphabetical order."
  },
  {
    "query" : "query { match_season ( order_by : { college : asc } ) { player } }",
    "schemaId" : "match_season",
    "question" : "What are all the players who played in match season, sorted by college in ascending alphabetical order?"
  },
  {
    "query" : "query { enzyme_aggregate { aggregate { count } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "How many kinds of enzymes are there?"
  },
  {
    "query" : "query { enzyme_aggregate { aggregate { count } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What is the total count of enzymes?"
  },
  {
    "query" : "query { enzyme ( order_by : { name : desc } ) { name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "List the name of enzymes in descending lexicographical order."
  },
  {
    "query" : "query { enzyme ( order_by : { name : desc } ) { name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What are the names of enzymes in descending order?"
  },
  {
    "query" : "query { enzyme { name location } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "List the names and the locations that the enzymes can make an effect."
  },
  {
    "query" : "query { enzyme { name location } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What are the names and locations of all enzymes listed?"
  },
  {
    "query" : "query { enzyme_aggregate { aggregate { max { omim } } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What is the maximum Online Mendelian Inheritance in Man (OMIM) value of the enzymes?"
  },
  {
    "query" : "query { enzyme_aggregate { aggregate { max { omim } } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What is the maximum OMIM value in the database?"
  },
  {
    "query" : "query { enzyme ( where : { location : { _eq : \"Cytosol\" } } ) { product chromosome porphyria } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?"
  },
  {
    "query" : "query { enzyme ( where : { location : { _eq : \"Cytosol\" } } ) { product chromosome porphyria } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What is the product, chromosome, and porphyria of the enzymes located at 'Cytosol'?"
  },
  {
    "query" : "query { enzyme ( where : { product : { _neq : \"Heme\" } } ) { name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What are the names of enzymes who does not produce 'Heme'?"
  },
  {
    "query" : "query { enzyme ( where : { product : { _neq : \"Heme\" } } ) { name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What are the names of enzymes whose product is not 'Heme'?"
  },
  {
    "query" : "query { medicine ( where : { fda_approved : { _eq : \"Yes\" } } ) { name trade_name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What are the names and trade names of the medicines which has 'Yes' value in the FDA record?"
  },
  {
    "query" : "query { medicine ( where : { fda_approved : { _eq : \"Yes\" } } ) { name trade_name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What are the names and trade names of the medcines that are FDA approved?"
  },
  {
    "query" : "query { medicine_aggregate ( where : { fda_approved : { _eq : \"No\" } } ) { aggregate { count } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "How many medicines have the FDA approval status 'No' ?"
  },
  {
    "query" : "query { medicine_aggregate ( where : { fda_approved : { _eq : \"No\" } } ) { aggregate { count } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "How many medicines were not approved by the FDA?"
  },
  {
    "query" : "query { medicine_aggregate { aggregate { count } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "How many distinct FDA approval statuses are there for the medicines?"
  },
  {
    "query" : "query { medicine_aggregate { aggregate { count } } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "How many different FDA approval statuses exist for medicines?"
  },
  {
    "query" : "query { enzyme ( where : { name : { _like : \"%ALA%\" } } ) { name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "Which enzyme names have the substring \"ALA\"?"
  },
  {
    "query" : "query { enzyme ( where : { name : { _like : \"%ALA%\" } } ) { name } }",
    "schemaId" : "medicine_enzyme_interaction",
    "question" : "What are the names of enzymes that include the string 'ALA'?"
  },
  {
    "query" : "query { camera_lens_aggregate ( where : { focal_length_mm : { _gt : 15.0 } } ) { aggregate { count } } }",
    "schemaId" : "mountain_photos",
    "question" : "How many camera lenses have a focal length longer than 15 mm?"
  },
  {
    "query" : "query { camera_lens ( order_by : { max_aperture : desc } ) { brand name } }",
    "schemaId" : "mountain_photos",
    "question" : "Find the brand and name for each camera lens, and sort in descending order of maximum aperture."
  },
  {
    "query" : "query { photos { id color name } }",
    "schemaId" : "mountain_photos",
    "question" : "List the id, color scheme, and name for all the photos."
  },
  {
    "query" : "query { mountain_aggregate { aggregate { max { height } avg { height } } } }",
    "schemaId" : "mountain_photos",
    "question" : "What are the maximum and average height of the mountains?"
  },
  {
    "query" : "query { mountain_aggregate ( where : { country : { _eq : \"Morocco\" } } ) { aggregate { avg { prominence } } } }",
    "schemaId" : "mountain_photos",
    "question" : "What are the average prominence of the mountains in country 'Morocco'?"
  },
  {
    "query" : "query { mountain ( where : { range : { _neq : \"Aberdare Range\" } } ) { name height prominence } }",
    "schemaId" : "mountain_photos",
    "question" : "What are the name, height and prominence of mountains which do not belong to the range 'Aberdare Range'?"
  },
  {
    "query" : "query { mountain ( where : { height : { _gt : 4000.0 } } ) { id name } }",
    "schemaId" : "mountain_photos",
    "question" : "What are the id and name of the photos for mountains?"
  },
  {
    "query" : "query { camera_lens ( where : { _or : [ { brand : { _eq : \"Sigma\" } } , { brand : { _eq : \"Olympus\" } } ] } ) { name } }",
    "schemaId" : "mountain_photos",
    "question" : "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?"
  },
  {
    "query" : "query { camera_lens_aggregate { aggregate { count } } }",
    "schemaId" : "mountain_photos",
    "question" : "How many different kinds of lens brands are there?"
  },
  {
    "query" : "query { photos_aggregate ( where : { mountain : { country : { _eq : \"Ethiopia\" } } } ) { aggregate { count } } }",
    "schemaId" : "mountain_photos",
    "question" : "How many distinct kinds of camera lenses are used to take photos of mountains in the country 'Ethiopia'?"
  },
  {
    "query" : "query { camera_lens ( where : { name : { _like : \"%Digital%\" } } ) { name } }",
    "schemaId" : "mountain_photos",
    "question" : "List the camera lens names containing substring \"Digital\"."
  },
  {
    "query" : "query { movie ( where : { director : { _eq : \"Steven Spielberg\" } } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "Find the titles of all movies directed by steven spielberg."
  },
  {
    "query" : "query { movie ( where : { director : { _eq : \"Steven Spielberg\" } } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "What are the names of all movies directed by Steven Spielberg?"
  },
  {
    "query" : "query { movie ( where : { _and : { year : { _gt : 2000 } , director : { _eq : \"James Cameron\" } } } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "What is the name of the movie produced after 2000 and directed by James Cameron?"
  },
  {
    "query" : "query { movie ( where : { _and : { year : { _gt : 2000 } , director : { _eq : \"James Cameron\" } } } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "What are the titles of all movies that James Cameron directed after 2000?"
  },
  {
    "query" : "query { movie_aggregate ( where : { year : { _lt : 2000 } } ) { aggregate { count } } }",
    "schemaId" : "movie_1",
    "question" : "How many movies were made before 2000?"
  },
  {
    "query" : "query { movie_aggregate ( where : { year : { _lt : 2000 } } ) { aggregate { count } } }",
    "schemaId" : "movie_1",
    "question" : "How many movies were made before 2000?"
  },
  {
    "query" : "query { movie ( where : { title : { _eq : \"Avatar\" } } ) { director } }",
    "schemaId" : "movie_1",
    "question" : "Who is the director of movie Avatar?"
  },
  {
    "query" : "query { movie ( where : { title : { _eq : \"Avatar\" } } ) { director } }",
    "schemaId" : "movie_1",
    "question" : "Who directed Avatar?"
  },
  {
    "query" : "query { reviewer_aggregate { aggregate { count } } }",
    "schemaId" : "movie_1",
    "question" : "How many reviewers listed?"
  },
  {
    "query" : "query { reviewer_aggregate { aggregate { count } } }",
    "schemaId" : "movie_1",
    "question" : "How many reviewers are there?"
  },
  {
    "query" : "query { reviewer ( where : { name : { _like : \"%Mike%\" } } ) { rid } }",
    "schemaId" : "movie_1",
    "question" : "What is the id of the reviewer whose name has substring “Mike”?"
  },
  {
    "query" : "query { reviewer ( where : { name : { _like : \"%Mike%\" } } ) { rid } }",
    "schemaId" : "movie_1",
    "question" : "What is the id of the reviewer whose name includes the word \"Mike\"?"
  },
  {
    "query" : "query { reviewer ( where : { name : { _eq : \"Daniel Lewis\" } } ) { rid } }",
    "schemaId" : "movie_1",
    "question" : "What is the reviewer id of Daniel Lewis?"
  },
  {
    "query" : "query { reviewer ( where : { name : { _eq : \"Daniel Lewis\" } } ) { rid } }",
    "schemaId" : "movie_1",
    "question" : "What is the id of the reviewer named Daniel Lewis?"
  },
  {
    "query" : "query { rating_aggregate ( where : { stars : { _gt : 3 } } ) { aggregate { count } } }",
    "schemaId" : "movie_1",
    "question" : "What is the total number of ratings that has more than 3 stars?"
  },
  {
    "query" : "query { rating_aggregate ( where : { stars : { _gt : 3 } } ) { aggregate { count } } }",
    "schemaId" : "movie_1",
    "question" : "How many movie ratings have more than 3 stars?"
  },
  {
    "query" : "query { rating_aggregate { aggregate { max { stars } min { stars } } } }",
    "schemaId" : "movie_1",
    "question" : "What is the lowest and highest rating star?"
  },
  {
    "query" : "query { rating_aggregate { aggregate { max { stars } min { stars } } } }",
    "schemaId" : "movie_1",
    "question" : "What is the maximum and mininum number of stars a rating can receive?"
  },
  {
    "query" : "query { movie ( order_by : { year : asc } , where : { ratings : { stars : { _gte : 4 } } } , distinct_on : year ) { year } }",
    "schemaId" : "movie_1",
    "question" : "Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order of year."
  },
  {
    "query" : "query { movie ( order_by : { year : asc } , where : { ratings : { stars : { _gte : 4 } } } , distinct_on : year ) { year } }",
    "schemaId" : "movie_1",
    "question" : "In what years did a movie receive a 4 or 5 star rating, and list the years from oldest to most recently?"
  },
  {
    "query" : "query { movie ( where : { ratings : { stars : { _eq : 5 } } } ) { director title } }",
    "schemaId" : "movie_1",
    "question" : "What are the names of directors who directed movies with 5 star rating? Also return the title of these movies."
  },
  {
    "query" : "query { movie ( where : { ratings : { stars : { _eq : 5 } } } ) { director title } }",
    "schemaId" : "movie_1",
    "question" : "What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?"
  },
  {
    "query" : "query { reviewer ( where : { ratings : { ratingdate : { _eq : \"null\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "movie_1",
    "question" : "Find the names of all reviewers who have ratings with a NULL value for the date."
  },
  {
    "query" : "query { reviewer ( where : { ratings : { ratingdate : { _eq : \"null\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "movie_1",
    "question" : "What are the different names of all reviewers whose ratings do not have a date field?"
  },
  {
    "query" : "query { reviewer ( where : { ratings : { movie : { title : { _eq : \"Gone with the Wind\" } } } } , distinct_on : name ) { name } }",
    "schemaId" : "movie_1",
    "question" : "Find the names of all reviewers who rated Gone with the Wind."
  },
  {
    "query" : "query { reviewer ( where : { ratings : { movie : { title : { _eq : \"Gone with the Wind\" } } } } , distinct_on : name ) { name } }",
    "schemaId" : "movie_1",
    "question" : "What are the names of all the different reviewers who rates Gone with the Wind?"
  },
  {
    "query" : "query { movie ( limit : 3 , order_by : { ratings_aggregate : { max : { stars : desc_nulls_last } } } ) { title year } }",
    "schemaId" : "movie_1",
    "question" : "What are the names and years of the movies that has the top 3 highest rating star?"
  },
  {
    "query" : "query { movie ( limit : 3 , order_by : { ratings_aggregate : { max : { stars : desc_nulls_last } } } ) { title year } }",
    "schemaId" : "movie_1",
    "question" : "What are the names and years released for the movies with the top 3 highest ratings?"
  },
  {
    "query" : "query { movie ( where : { ratings : { stars : { _gte : 3 , _lte : 5 } } } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "What are the titles of all movies that have rating star is between 3 and 5?"
  },
  {
    "query" : "query { movie ( where : { ratings : { stars : { _gte : 3 , _lte : 5 } } } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "What are the titles of all movies that have between 3 and 5 stars?"
  },
  {
    "query" : "query { reviewer ( where : { ratings : { stars : { _gt : 3 } } } ) { name } }",
    "schemaId" : "movie_1",
    "question" : "Find the names of reviewers who had given higher than 3 star ratings."
  },
  {
    "query" : "query { reviewer ( where : { ratings : { stars : { _gt : 3 } } } ) { name } }",
    "schemaId" : "movie_1",
    "question" : "What are the names of the reviewers who have rated a movie more than 3 stars before?"
  },
  {
    "query" : "query { rating ( where : { stars : { _neq : 4 } } ) { rid } }",
    "schemaId" : "movie_1",
    "question" : "Find the ids of reviewers who didn't only give 4 star."
  },
  {
    "query" : "query { rating ( where : { stars : { _neq : 4 } } ) { rid } }",
    "schemaId" : "movie_1",
    "question" : "What are the ids of all reviewers who have not given 4 stars at least once?"
  },
  {
    "query" : "query { movie ( where : { _or : [ { director : { _eq : \"James Cameron\" } } , { year : { _lt : 1980 } } ] } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "What are names of the movies that are either made before 1980 or directed by James Cameron?"
  },
  {
    "query" : "query { movie ( where : { _or : [ { director : { _eq : \"James Cameron\" } } , { year : { _lt : 1980 } } ] } ) { title } }",
    "schemaId" : "movie_1",
    "question" : "What are the names of all movies made before 1980 or had James Cameron as the director?"
  },
  {
    "query" : "query { song ( limit : 1 , order_by : { releasedate : desc } ) { song_name releasedate } }",
    "schemaId" : "music_1",
    "question" : "What is the name of the song that was released in the most recent year?"
  },
  {
    "query" : "query { song ( limit : 1 , order_by : { releasedate : desc } ) { song_name releasedate } }",
    "schemaId" : "music_1",
    "question" : "What is the name of the song that was released most recently?"
  },
  {
    "query" : "query { files ( limit : 1 , order_by : { duration : desc } ) { f_id } }",
    "schemaId" : "music_1",
    "question" : "What is the id of the longest song?"
  },
  {
    "query" : "query { files ( limit : 1 , order_by : { duration : desc } ) { f_id } }",
    "schemaId" : "music_1",
    "question" : "Find the id of the song that lasts the longest."
  },
  {
    "query" : "query { song ( where : { languages : { _eq : \"english\" } } ) { song_name } }",
    "schemaId" : "music_1",
    "question" : "Find the names of all English songs."
  },
  {
    "query" : "query { song ( where : { languages : { _eq : \"english\" } } ) { song_name } }",
    "schemaId" : "music_1",
    "question" : "What are the names of all songs in English?"
  },
  {
    "query" : "query { files ( where : { formats : { _eq : \"mp3\" } } ) { f_id } }",
    "schemaId" : "music_1",
    "question" : "What are the id of songs whose format is mp3."
  },
  {
    "query" : "query { files ( where : { formats : { _eq : \"mp3\" } } ) { f_id } }",
    "schemaId" : "music_1",
    "question" : "What are the id of all the files in mp3 format?"
  },
  {
    "query" : "query { song ( limit : 1 , order_by : { file : { duration : asc } } ) { artist_name } }",
    "schemaId" : "music_1",
    "question" : "What is the name of the artist who produced the shortest song?"
  },
  {
    "query" : "query { song ( limit : 1 , order_by : { file : { duration : asc } } ) { artist_name } }",
    "schemaId" : "music_1",
    "question" : "What are the names of the artists who sang the shortest song?"
  },
  {
    "query" : "query { artist ( limit : 3 , order_by : { songs_aggregate : { max : { rating : desc_nulls_last }  } } ) { artist_name country } }",
    "schemaId" : "music_1",
    "question" : "What are the names and countries of origin for the artists who produced the top three highly rated songs."
  },
  {
    "query" : "query { artist ( limit : 3 , order_by : { songs_aggregate : { max : { rating : desc_nulls_last }  } } ) { artist_name country } }",
    "schemaId" : "music_1",
    "question" : "What are the names of the singers who sang the top 3 most highly rated songs and what countries do they hail from?"
  },
  {
    "query" : "query { artist_aggregate ( where : { country : { _eq : \"Bangladesh\" } } ) { aggregate { count } } }",
    "schemaId" : "music_1",
    "question" : "How many artists are from Bangladesh?"
  },
  {
    "query" : "query { artist_aggregate ( where : { country : { _eq : \"Bangladesh\" } } ) { aggregate { count } } }",
    "schemaId" : "music_1",
    "question" : "How many Bangladeshi artists are listed?"
  },
  {
    "query" : "query { song_aggregate ( where : { artist : { gender : { _eq : \"Female\" } } } ) { aggregate { avg { rating } } } }",
    "schemaId" : "music_1",
    "question" : "What is the average rating of songs produced by female artists?"
  },
  {
    "query" : "query { song_aggregate ( where : { artist : { gender : { _eq : \"Female\" } } } ) { aggregate { avg { rating } } } }",
    "schemaId" : "music_1",
    "question" : "How many songs, on average, are sung by a female artist?"
  },
  {
    "query" : "query { artist ( where : { _and : { songs : { languages : { _eq : \"bangla\" } } , gender : { _eq : \"Female\" } } } ) { country } }",
    "schemaId" : "music_1",
    "question" : "What is the country of origin of the artist who is female and produced a song in Bangla?"
  },
  {
    "query" : "query { artist ( where : { _and : { songs : { languages : { _eq : \"bangla\" } } , gender : { _eq : \"Female\" } } } ) { country } }",
    "schemaId" : "music_1",
    "question" : "What countries are the female artists who sung in the language Bangla from?"
  },
  {
    "query" : "query { files_aggregate ( where : { _and : { formats : { _eq : \"mp3\" } , songs : { resolution : { _lt : 800 } } } } ) { aggregate { count } } }",
    "schemaId" : "music_1",
    "question" : "How many songs are there that have mp3 format and resolution below 800?"
  },
  {
    "query" : "query { files_aggregate ( where : { _and : { formats : { _eq : \"mp3\" } , songs : { resolution : { _lt : 800 } } } } ) { aggregate { count } } }",
    "schemaId" : "music_1",
    "question" : "What is the total count for the songs that are in mp3 format and whose resolution below 800?"
  },
  {
    "query" : "query { song ( limit : 1 , order_by : { resolution : asc } ) { artist { gender artist_name } } }",
    "schemaId" : "music_1",
    "question" : "Return the gender and name of artist who produced the song with the lowest resolution."
  },
  {
    "query" : "query { song ( limit : 1 , order_by : { resolution : asc } ) { artist { gender artist_name } } }",
    "schemaId" : "music_1",
    "question" : "What is the gender and name of the artist who sang the song with the smallest resolution?"
  },
  {
    "query" : "query { artist ( where : { songs : { song_name : { _like : \"%love%\" } } } ) { artist_name country } }",
    "schemaId" : "music_1",
    "question" : "What is the name and country of origin of the artist who released a song that has \"love\" in its title?"
  },
  {
    "query" : "query { artist ( where : { songs : { song_name : { _like : \"%love%\" } } } ) { artist_name country } }",
    "schemaId" : "music_1",
    "question" : "What are the names of the artists who released a song that has the word love in its title, and where are the artists from?"
  },
  {
    "query" : "query { artist ( where : { songs : { releasedate : { _like : \"%Mar%\" } } } ) { artist_name gender } }",
    "schemaId" : "music_1",
    "question" : "List the name and gender for all artists who released songs in March."
  },
  {
    "query" : "query { artist ( where : { songs : { releasedate : { _like : \"%Mar%\" } } } ) { artist_name gender } }",
    "schemaId" : "music_1",
    "question" : "What are the names and genders of all artists who released songs in the month of March?"
  },
  {
    "query" : "query { genre ( order_by : { g_name : asc } ) { g_name rating } }",
    "schemaId" : "music_1",
    "question" : "List the names of all genres in alphabetical oder, together with its ratings."
  },
  {
    "query" : "query { genre ( order_by : { g_name : asc } ) { g_name rating } }",
    "schemaId" : "music_1",
    "question" : "What are the names of all genres in alphabetical order, combined with its ratings?"
  },
  {
    "query" : "query { song ( order_by : { resolution : asc } ) { song_name } }",
    "schemaId" : "music_1",
    "question" : "Give me a list of the names of all songs ordered by their resolution."
  },
  {
    "query" : "query { song ( order_by : { resolution : asc } ) { song_name } }",
    "schemaId" : "music_1",
    "question" : "What are the names of all songs that are ordered by their resolution numbers?"
  },
  {
    "query" : "query { artist ( where : { _and : { country : { _eq : \"UK\" } , gender : { _eq : \"Male\" } } } ) { artist_name } }",
    "schemaId" : "music_1",
    "question" : "What are the names of artists who are Male and are from UK?"
  },
  {
    "query" : "query { artist ( where : { _and : { gender : { _eq : \"Male\" } , country : { _eq : \"UK\" } } } ) { artist_name } }",
    "schemaId" : "music_1",
    "question" : "What are the names of all male British artists?"
  },
  {
    "query" : "query { song ( where : { _or : [ { genre_is : { _eq : \"modern\" } } , { languages : { _eq : \"english\" } } ] } ) { song_name } }",
    "schemaId" : "music_1",
    "question" : "Find the names of songs whose genre is modern or language is English."
  },
  {
    "query" : "query { song ( where : { _or : [ { genre_is : { _eq : \"modern\" } } , { languages : { _eq : \"english\" } } ] } ) { song_name } }",
    "schemaId" : "music_1",
    "question" : "What are the names of the songs that are modern or sung in English?"
  },
  {
    "query" : "query { song_aggregate ( where : { languages : { _eq : \"bangla\" } } ) { aggregate { avg { rating } avg { resolution } } } }",
    "schemaId" : "music_1",
    "question" : "What are the average rating and resolution of songs that are in Bangla?"
  },
  {
    "query" : "query { song_aggregate ( where : { languages : { _eq : \"bangla\" } } ) { aggregate { avg { rating } avg { resolution } } } }",
    "schemaId" : "music_1",
    "question" : "What is the average rating and resolution of all bangla songs?"
  },
  {
    "query" : "query { song ( order_by : { rating : asc } , where : { languages : { _eq : \"english\" } } ) { f_id genre_is artist_name } }",
    "schemaId" : "music_1",
    "question" : "List the id, genre and artist name of English songs ordered by rating."
  },
  {
    "query" : "query { song ( order_by : { rating : asc } , where : { languages : { _eq : \"english\" } } ) { f_id genre_is artist_name } }",
    "schemaId" : "music_1",
    "question" : "What is the id, genre, and name of the artist for every English song ordered by ascending rating?"
  },
  {
    "query" : "query { files ( order_by : { songs_aggregate : { min : { song_name : asc } } } , where : { songs : { genre_is : { _eq : \"pop\" } } } ) { duration file_size formats } }",
    "schemaId" : "music_1",
    "question" : "List the duration, file size and format of songs whose genre is pop, ordered by title?"
  },
  {
    "query" : "query { files ( order_by : { songs_aggregate : { min : { song_name : asc } } } , where : { songs : { genre_is : { _eq : \"pop\" } } } ) { duration file_size formats } }",
    "schemaId" : "music_1",
    "question" : "What is the duration, file size, and song format for every pop song, ordered by title alphabetically?"
  },
  {
    "query" : "query { band_aggregate { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many bands are there?"
  },
  {
    "query" : "query { band_aggregate { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "Find the number of bands."
  },
  {
    "query" : "query { albums ( distinct_on : label ) { label } }",
    "schemaId" : "music_2",
    "question" : "What are all the labels?"
  },
  {
    "query" : "query { albums ( distinct_on : label ) { label } }",
    "schemaId" : "music_2",
    "question" : "What are the different album labels listed?"
  },
  {
    "query" : "query { albums ( where : { year : { _eq : 2012 } } ) { label title type year } }",
    "schemaId" : "music_2",
    "question" : "Find all the albums in 2012."
  },
  {
    "query" : "query { albums ( where : { year : { _eq : 2012 } } ) { label title type year } }",
    "schemaId" : "music_2",
    "question" : "return all columns of the albums created in the year of 2012."
  },
  {
    "query" : "query { performance ( where : { band : { firstname : { _eq : \"Solveig\" } } } , distinct_on : stageposition ) { stageposition } }",
    "schemaId" : "music_2",
    "question" : "Find all the stage positions of the musicians with first name \"Solveig\""
  },
  {
    "query" : "query { performance ( where : { band : { firstname : { _eq : \"Solveig\" } } } , distinct_on : stageposition ) { stageposition } }",
    "schemaId" : "music_2",
    "question" : "What are the different stage positions for all musicians whose first name is \"Solveig\"?"
  },
  {
    "query" : "query { songs_aggregate { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many songs are there?"
  },
  {
    "query" : "query { songs_aggregate { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "Count the number of songs."
  },
  {
    "query" : "query { songs ( where : { performances : { band : { lastname : { _eq : \"Heilo\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "Find all the songs performed by artist with last name \"Heilo\""
  },
  {
    "query" : "query { songs ( where : { performances : { band : { lastname : { _eq : \"Heilo\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "What are the names of the songs by the artist whose last name is \"Heilo\"?"
  },
  {
    "query" : "query { songs ( where : { performances : { band : { firstname : { _eq : \"Marianne\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "Find all the songs produced by artists with first name \"Marianne\"."
  },
  {
    "query" : "query { songs ( where : { performances : { band : { firstname : { _eq : \"Marianne\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "What are the names of all songs produced by the artist with the first name \"Marianne\"?"
  },
  {
    "query" : "query { albums_aggregate { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many unique labels are there for albums?"
  },
  {
    "query" : "query { albums_aggregate { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "What are the unique labels for the albums?"
  },
  {
    "query" : "query { songs ( where : { title : { _like : \"% the %\" } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "Find all the songs whose name contains the word \"the\"."
  },
  {
    "query" : "query { songs ( where : { title : { _like : \"% the %\" } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "What are the names of the songs whose title has the word \"the\"?"
  },
  {
    "query" : "query { instruments ( distinct_on : instrument ) { instrument } }",
    "schemaId" : "music_2",
    "question" : "What are all the instruments used?"
  },
  {
    "query" : "query { instruments ( distinct_on : instrument ) { instrument } }",
    "schemaId" : "music_2",
    "question" : "What are the different instruments listed in the database?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { instrument : { _eq : \"drums\" } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many songs have used the instrument \"drums\"?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { instrument : { _eq : \"drums\" } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many songs use drums as an instrument?"
  },
  {
    "query" : "query { instruments ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { instrument } }",
    "schemaId" : "music_2",
    "question" : "What instruments does the the song \"Le Pop\" use?"
  },
  {
    "query" : "query { instruments ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { instrument } }",
    "schemaId" : "music_2",
    "question" : "What are the instruments are used in the song \"Le Pop\"?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many instruments does the song \"Le Pop\" use?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many different instruments are used in the song \"Le Pop\"?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { band : { lastname : { _eq : \"Heilo\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many instrument does the musician with last name \"Heilo\" use?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { band : { lastname : { _eq : \"Heilo\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many different instruments does the musician with the last name \"Heilo\" use?"
  },
  {
    "query" : "query { instruments ( where : { band : { lastname : { _eq : \"Heilo\" } } } ) { instrument } }",
    "schemaId" : "music_2",
    "question" : "Find all the instruments ever used by the musician with last name \"Heilo\"?"
  },
  {
    "query" : "query { instruments ( where : { band : { lastname : { _eq : \"Heilo\" } } } ) { instrument } }",
    "schemaId" : "music_2",
    "question" : "What are all the instruments used by the musician with the last name \"Heilo\"?"
  },
  {
    "query" : "query { vocals ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { type } }",
    "schemaId" : "music_2",
    "question" : "What are the vocal types used in song \"Le Pop\"?"
  },
  {
    "query" : "query { vocals ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { type } }",
    "schemaId" : "music_2",
    "question" : "What are the types of vocals used in the song \"Le Pop\"?"
  },
  {
    "query" : "query { vocals_aggregate ( where : { song : { title : { _eq : \"Demon Kitty Rag\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "Find the number of vocal types used in song \"Demon Kitty Rag\"?"
  },
  {
    "query" : "query { vocals_aggregate ( where : { song : { title : { _eq : \"Demon Kitty Rag\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "What are the types of vocals used in the song \"Demon Kitty Rag\"?"
  },
  {
    "query" : "query { songs_aggregate ( where : { vocals : { type : { _eq : \"lead\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many songs have a lead vocal?"
  },
  {
    "query" : "query { songs_aggregate ( where : { vocals : { type : { _eq : \"lead\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many songs have vocals of type lead?"
  },
  {
    "query" : "query { vocals ( distinct_on : type ) { type } }",
    "schemaId" : "music_2",
    "question" : "Find all the vocal types."
  },
  {
    "query" : "query { vocals ( distinct_on : type ) { type } }",
    "schemaId" : "music_2",
    "question" : "What are the different types of vocals?"
  },
  {
    "query" : "query { albums ( where : { year : { _eq : 2010 } } ) { label title type year } }",
    "schemaId" : "music_2",
    "question" : "What are the albums produced in year 2010?"
  },
  {
    "query" : "query { albums ( where : { year : { _eq : 2010 } } ) { label title type year } }",
    "schemaId" : "music_2",
    "question" : "What information is there on albums from 2010?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { song : { title : { _eq : \"Badlands\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many instruments does the song \"Badlands\" use?"
  },
  {
    "query" : "query { instruments_aggregate ( where : { song : { title : { _eq : \"Badlands\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many different instruments are used in the song \"Badlands\"?"
  },
  {
    "query" : "query { vocals ( where : { song : { title : { _eq : \"Badlands\" } } } ) { type } }",
    "schemaId" : "music_2",
    "question" : "What are the vocal types used in song \"Badlands\"?"
  },
  {
    "query" : "query { vocals ( where : { song : { title : { _eq : \"Badlands\" } } } ) { type } }",
    "schemaId" : "music_2",
    "question" : "What types of vocals are used in the song \"Badlands\"?"
  },
  {
    "query" : "query { vocals_aggregate ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "Find the number of vocal types used in song \"Le Pop\""
  },
  {
    "query" : "query { vocals_aggregate ( where : { song : { title : { _eq : \"Le Pop\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many vocal types are used in the song \"Le Pop\"?"
  },
  {
    "query" : "query { songs_aggregate ( where : { vocals : { type : { _eq : \"shared\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many songs have a shared vocal?"
  },
  {
    "query" : "query { songs_aggregate ( where : { vocals : { type : { _eq : \"shared\" } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many different songs have shared vocals?"
  },
  {
    "query" : "query { songs ( where : { tracklists : { album : { title : { _eq : \"A Kiss Before You Go: Live in Hamburg\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "What are the songs in album \"A Kiss Before You Go: Live in Hamburg\"?"
  },
  {
    "query" : "query { songs ( where : { tracklists : { album : { title : { _eq : \"A Kiss Before You Go: Live in Hamburg\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "What are the song titles on the album \"A Kiss Before You Go: Live in Hamburg\"?"
  },
  {
    "query" : "query { songs ( where : { tracklists : { album : { label : { _eq : \"Universal Music Group\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "What are all the songs in albums under label \"Universal Music Group\"?"
  },
  {
    "query" : "query { songs ( where : { tracklists : { album : { label : { _eq : \"Universal Music Group\" } } } } ) { title } }",
    "schemaId" : "music_2",
    "question" : "What are the names of all the songs whose album is under the label of \"Universal Music Group\"?"
  },
  {
    "query" : "query { songs_aggregate ( where : { tracklists : { album : { type : { _eq : \"Studio\" } } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "Find the number of songs in all the studio albums."
  },
  {
    "query" : "query { songs_aggregate ( where : { tracklists : { album : { type : { _eq : \"Studio\" } } } } ) { aggregate { count } } }",
    "schemaId" : "music_2",
    "question" : "How many songs appear in studio albums?"
  },
  {
    "query" : "query { artist_aggregate { aggregate { count } } }",
    "schemaId" : "music_4",
    "question" : "How many artists are there?"
  },
  {
    "query" : "query { artist_aggregate { aggregate { count } } }",
    "schemaId" : "music_4",
    "question" : "Count the number of artists."
  },
  {
    "query" : "query { artist { age } }",
    "schemaId" : "music_4",
    "question" : "List the age of all music artists."
  },
  {
    "query" : "query { artist { age } }",
    "schemaId" : "music_4",
    "question" : "What are the ages of all music artists?"
  },
  {
    "query" : "query { artist_aggregate { aggregate { avg { age } } } }",
    "schemaId" : "music_4",
    "question" : "What is the average age of all artists?"
  },
  {
    "query" : "query { artist_aggregate { aggregate { avg { age } } } }",
    "schemaId" : "music_4",
    "question" : "Return the average age across all artists."
  },
  {
    "query" : "query { artist ( where : { artist : { _eq : \"Triumfall\" } } ) { famous_title } }",
    "schemaId" : "music_4",
    "question" : "What are the famous titles of the artist \"Triumfall\"?"
  },
  {
    "query" : "query { artist ( where : { artist : { _eq : \"Triumfall\" } } ) { famous_title } }",
    "schemaId" : "music_4",
    "question" : "Return the famous titles of the artist called \"Triumfall\"."
  },
  {
    "query" : "query { artist ( distinct_on : famous_release_date ) { famous_release_date } }",
    "schemaId" : "music_4",
    "question" : "What are the distinct Famous release dates?"
  },
  {
    "query" : "query { artist ( distinct_on : famous_release_date ) { famous_release_date } }",
    "schemaId" : "music_4",
    "question" : "Give the distinct famous release dates for all artists."
  },
  {
    "query" : "query { music_festival { date_of_ceremony result } }",
    "schemaId" : "music_4",
    "question" : "Return the dates of ceremony and the results of all music festivals"
  },
  {
    "query" : "query { music_festival { date_of_ceremony result } }",
    "schemaId" : "music_4",
    "question" : "What are the dates of ceremony and results for each music festival?"
  },
  {
    "query" : "query { music_festival ( where : { result : { _eq : \"Awarded\" } } ) { category } }",
    "schemaId" : "music_4",
    "question" : "What are the category of music festivals with result \"Awarded\"?"
  },
  {
    "query" : "query { music_festival ( where : { result : { _eq : \"Awarded\" } } ) { category } }",
    "schemaId" : "music_4",
    "question" : "Return the categories of music festivals that have the result \"Awarded\"."
  },
  {
    "query" : "query { volume_aggregate { aggregate { max { weeks_on_top } min { weeks_on_top } } } }",
    "schemaId" : "music_4",
    "question" : "What are the maximum and minimum week on top of all volumes?"
  },
  {
    "query" : "query { volume_aggregate { aggregate { max { weeks_on_top } min { weeks_on_top } } } }",
    "schemaId" : "music_4",
    "question" : "Give the maximum and minimum weeks on top across all volumes."
  },
  {
    "query" : "query { volume ( where : { weeks_on_top : { _gt : 1.0 } } ) { song } }",
    "schemaId" : "music_4",
    "question" : "What are the songs in volumes with more than 1 week on top?"
  },
  {
    "query" : "query { volume ( where : { weeks_on_top : { _gt : 1.0 } } ) { song } }",
    "schemaId" : "music_4",
    "question" : "Give the songs included in volumes that have more than 1 week on top."
  },
  {
    "query" : "query { volume ( order_by : { song : asc } ) { song } }",
    "schemaId" : "music_4",
    "question" : "Please list all songs in volumes in ascending alphabetical order."
  },
  {
    "query" : "query { volume ( order_by : { song : asc } ) { song } }",
    "schemaId" : "music_4",
    "question" : "What are the the songs in volumes, listed in ascending order?"
  },
  {
    "query" : "query { volume_aggregate { aggregate { count } } }",
    "schemaId" : "music_4",
    "question" : "How many distinct artists do the volumes associate to?"
  },
  {
    "query" : "query { volume_aggregate { aggregate { count } } }",
    "schemaId" : "music_4",
    "question" : "Count the number of distinct artists who have volumes."
  },
  {
    "query" : "query { music_festival ( where : { volumeByVolume : { weeks_on_top : { _gt : 2.0 } } } ) { date_of_ceremony } }",
    "schemaId" : "music_4",
    "question" : "Please show the date of ceremony of the volumes that last more than 2 weeks on top."
  },
  {
    "query" : "query { music_festival ( where : { volumeByVolume : { weeks_on_top : { _gt : 2.0 } } } ) { date_of_ceremony } }",
    "schemaId" : "music_4",
    "question" : "What are the dates of ceremony at music festivals corresponding to volumes that lasted more than 2 weeks on top?"
  },
  {
    "query" : "query { volume ( where : { music_festivals : { result : { _eq : \"Nominated\" } } } ) { song } }",
    "schemaId" : "music_4",
    "question" : "Please show the songs that have result \"nominated\" at music festivals."
  },
  {
    "query" : "query { volume ( where : { music_festivals : { result : { _eq : \"Nominated\" } } } ) { song } }",
    "schemaId" : "music_4",
    "question" : "What are the songs in volumes that have resulted in a nomination at music festivals?"
  },
  {
    "query" : "query { volume ( where : { artist : { artist : { _eq : \"Gorgoroth\" } } } ) { issue_date } }",
    "schemaId" : "music_4",
    "question" : "What are the issue dates of volumes associated with the artist \"Gorgoroth\"?"
  },
  {
    "query" : "query { volume ( where : { artist : { artist : { _eq : \"Gorgoroth\" } } } ) { issue_date } }",
    "schemaId" : "music_4",
    "question" : "Return the issue dates of volumes that are by the artist named Gorgoroth."
  },
  {
    "query" : "query { volume ( where : { artist : { age : { _gte : 32 } } } ) { song } }",
    "schemaId" : "music_4",
    "question" : "What are the songs in volumes associated with the artist aged 32 or older?"
  },
  {
    "query" : "query { volume ( where : { artist : { age : { _gte : 32 } } } ) { song } }",
    "schemaId" : "music_4",
    "question" : "Return names of songs in volumes that are by artists that are at least 32 years old."
  },
  {
    "query" : "query { volume_aggregate ( where : { artist : { age : { _lte : 25 } } } ) { aggregate { avg { weeks_on_top } } } }",
    "schemaId" : "music_4",
    "question" : "What is the average weeks on top of volumes associated with the artist aged 25 or younger?"
  },
  {
    "query" : "query { volume_aggregate ( where : { artist : { age : { _lte : 25 } } } ) { aggregate { avg { weeks_on_top } } } }",
    "schemaId" : "music_4",
    "question" : "Return the average number of weeks on top for volumes by artists that are at most 25 years old."
  },
  {
    "query" : "query { artist ( where : { volumes : { weeks_on_top : { _gt : 2.0 } } } ) { famous_title } }",
    "schemaId" : "music_4",
    "question" : "What are the famous title of the artists associated with volumes with more than 2 weeks on top?"
  },
  {
    "query" : "query { artist ( where : { volumes : { weeks_on_top : { _gt : 2.0 } } } ) { famous_title } }",
    "schemaId" : "music_4",
    "question" : "Return the famous titles for artists that have volumes that lasted more than 2 weeks on top."
  },
  {
    "query" : "query { artist ( order_by : { age : desc } ) { famous_title age } }",
    "schemaId" : "music_4",
    "question" : "Please list the age and famous title of artists in descending order of age."
  },
  {
    "query" : "query { artist ( order_by : { age : desc } ) { famous_title age } }",
    "schemaId" : "music_4",
    "question" : "What are the famous titles and ages of each artist, listed in descending order by age?"
  },
  {
    "query" : "query { artist ( limit : 1 , order_by : { age : desc } ) { famous_release_date } }",
    "schemaId" : "music_4",
    "question" : "What is the famous release date of the artist with the oldest age?"
  },
  {
    "query" : "query { artist ( limit : 1 , order_by : { age : desc } ) { famous_release_date } }",
    "schemaId" : "music_4",
    "question" : "Return the famous release date for the oldest artist."
  },
  {
    "query" : "query { volume ( limit : 1 , order_by : { weeks_on_top : desc } ) { song } }",
    "schemaId" : "music_4",
    "question" : "What is the song in the volume with the maximum weeks on top?"
  },
  {
    "query" : "query { volume ( limit : 1 , order_by : { weeks_on_top : desc } ) { song } }",
    "schemaId" : "music_4",
    "question" : "Return the song in the volume that has spent the most weeks on top?"
  },
  {
    "query" : "query { music_festival ( where : { _and : { result : { _eq : \"Awarded\" } , category : { _eq : \"Best Song\" } } } ) { date_of_ceremony } }",
    "schemaId" : "music_4",
    "question" : "What are the date of ceremony of music festivals with category \"Best Song\" and result \"Awarded\"?"
  },
  {
    "query" : "query { music_festival ( where : { _and : { result : { _eq : \"Awarded\" } , category : { _eq : \"Best Song\" } } } ) { date_of_ceremony } }",
    "schemaId" : "music_4",
    "question" : "Return the dates of ceremony corresponding to music festivals that had the category \"Best Song\" and result \"Awarded\"."
  },
  {
    "query" : "query { volume ( limit : 1 , order_by : { weeks_on_top : asc } ) { issue_date } }",
    "schemaId" : "music_4",
    "question" : "What is the issue date of the volume with the minimum weeks on top?"
  },
  {
    "query" : "query { volume ( limit : 1 , order_by : { weeks_on_top : asc } ) { issue_date } }",
    "schemaId" : "music_4",
    "question" : "Return the issue date of the volume that has spent the fewest weeks on top."
  },
  {
    "query" : "query { volume_aggregate { aggregate { count } } }",
    "schemaId" : "music_4",
    "question" : "How many distinct artists have volumes?"
  },
  {
    "query" : "query { volume_aggregate { aggregate { count } } }",
    "schemaId" : "music_4",
    "question" : "Count the number of artists who have had volumes."
  },
  {
    "query" : "query { volume ( where : { artist : { age : { _lte : 23 } } } ) { issue_date } }",
    "schemaId" : "music_4",
    "question" : "What are the issue dates of volumes associated with the artist aged 23 or younger?"
  },
  {
    "query" : "query { volume ( where : { artist : { age : { _lte : 23 } } } ) { issue_date } }",
    "schemaId" : "music_4",
    "question" : "Return the issue dates of volumes by artists who are at most 23 years old?"
  },
  {
    "query" : "query { actor_aggregate { aggregate { count } } }",
    "schemaId" : "musical",
    "question" : "How many actors are there?"
  },
  {
    "query" : "query { actor_aggregate { aggregate { count } } }",
    "schemaId" : "musical",
    "question" : "Count the number of actors."
  },
  {
    "query" : "query { actor ( order_by : { name : asc } ) { name } }",
    "schemaId" : "musical",
    "question" : "List the name of actors in ascending alphabetical order."
  },
  {
    "query" : "query { actor ( order_by : { name : asc } ) { name } }",
    "schemaId" : "musical",
    "question" : "What are the names of actors, ordered alphabetically?"
  },
  {
    "query" : "query { actor { character duration } }",
    "schemaId" : "musical",
    "question" : "What are the characters and duration of actors?"
  },
  {
    "query" : "query { actor { character duration } }",
    "schemaId" : "musical",
    "question" : "Return the characters and durations for each actor."
  },
  {
    "query" : "query { actor ( where : { age : { _neq : 20 } } ) { name } }",
    "schemaId" : "musical",
    "question" : "List the name of actors whose age is not 20."
  },
  {
    "query" : "query { actor ( where : { age : { _neq : 20 } } ) { name } }",
    "schemaId" : "musical",
    "question" : "What are the names of actors who are not 20 years old?"
  },
  {
    "query" : "query { actor ( order_by : { age : desc } ) { character } }",
    "schemaId" : "musical",
    "question" : "What are the characters of actors in descending order of age?"
  },
  {
    "query" : "query { actor ( order_by : { age : desc } ) { character } }",
    "schemaId" : "musical",
    "question" : "Return the characters for actors, ordered by age descending."
  },
  {
    "query" : "query { actor ( limit : 1 , order_by : { age : desc } ) { duration } }",
    "schemaId" : "musical",
    "question" : "What is the duration of the oldest actor?"
  },
  {
    "query" : "query { actor ( limit : 1 , order_by : { age : desc } ) { duration } }",
    "schemaId" : "musical",
    "question" : "Return the duration of the actor with the greatest age."
  },
  {
    "query" : "query { musical ( where : { nominee : { _eq : \"Bob Fosse\" } } ) { name } }",
    "schemaId" : "musical",
    "question" : "What are the names of musicals with nominee \"Bob Fosse\"?"
  },
  {
    "query" : "query { musical ( where : { nominee : { _eq : \"Bob Fosse\" } } ) { name } }",
    "schemaId" : "musical",
    "question" : "Return the names of musicals who have the nominee Bob Fosse."
  },
  {
    "query" : "query { musical ( where : { award : { _neq : \"Tony Award\" } } , distinct_on : nominee ) { nominee } }",
    "schemaId" : "musical",
    "question" : "What are the distinct nominees of the musicals with the award that is not \"Tony Award\"?"
  },
  {
    "query" : "query { musical ( where : { award : { _neq : \"Tony Award\" } } , distinct_on : nominee ) { nominee } }",
    "schemaId" : "musical",
    "question" : "Return the different nominees of musicals that have an award that is not the Tony Award."
  },
  {
    "query" : "query { actor { name musical { name } } }",
    "schemaId" : "musical",
    "question" : "Show names of actors and names of musicals they are in."
  },
  {
    "query" : "query { actor { name musical { name } } }",
    "schemaId" : "musical",
    "question" : "What are the names of actors and the musicals that they are in?"
  },
  {
    "query" : "query { actor ( where : { musical : { name : { _eq : \"The Phantom of the Opera\" } } } ) { name } }",
    "schemaId" : "musical",
    "question" : "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\"."
  },
  {
    "query" : "query { actor ( where : { musical : { name : { _eq : \"The Phantom of the Opera\" } } } ) { name } }",
    "schemaId" : "musical",
    "question" : "What are the names of actors who have been in the musical titled The Phantom of the Opera?"
  },
  {
    "query" : "query { actor ( order_by : { musical : { year : desc } } ) { name } }",
    "schemaId" : "musical",
    "question" : "Show names of actors in descending order of the year their musical is awarded."
  },
  {
    "query" : "query { actor ( order_by : { musical : { year : desc } } ) { name } }",
    "schemaId" : "musical",
    "question" : "What are the names of actors ordered descending by the year in which their musical was awarded?"
  },
  {
    "query" : "query { musical ( where : { _or : [ { award : { _eq : \"Tony Award\" } } , { award : { _eq : \"Cleavant Derricks\" } } ] } ) { nominee } }",
    "schemaId" : "musical",
    "question" : "Show the musical nominee with award \"Bob Fosse\" or \"Cleavant Derricks\"."
  },
  {
    "query" : "query { musical ( where : { _or : [ { award : { _eq : \"Tony Award\" } } , { award : { _eq : \"Cleavant Derricks\" } } ] } ) { nominee } }",
    "schemaId" : "musical",
    "question" : "Who are the nominees who were nominated for either of the Bob Fosse or Cleavant Derricks awards?"
  },
  {
    "query" : "query { person_aggregate ( where : { gender : { _eq : \"female\" } } ) { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "How many females does this network has?"
  },
  {
    "query" : "query { person_aggregate ( where : { gender : { _eq : \"female\" } } ) { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "How many females are in the network?"
  },
  {
    "query" : "query { person_aggregate { aggregate { avg { age } } } }",
    "schemaId" : "network_2",
    "question" : "What is the average age for all person?"
  },
  {
    "query" : "query { person_aggregate { aggregate { avg { age } } } }",
    "schemaId" : "network_2",
    "question" : "What is the average age for all people in the table?"
  },
  {
    "query" : "query { person_aggregate { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "How many different cities are they from?"
  },
  {
    "query" : "query { person_aggregate { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "How many different cities do people originate from?"
  },
  {
    "query" : "query { person_aggregate { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "How many type of jobs do they have?"
  },
  {
    "query" : "query { person_aggregate { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "How many different jobs are listed?"
  },
  {
    "query" : "query { person ( where : { _and : { job : { _eq : \"doctor\" } , name : { _eq : \"Zach\" } } } ) { age } }",
    "schemaId" : "network_2",
    "question" : "How old is the doctor named Zach?"
  },
  {
    "query" : "query { person ( where : { _and : { name : { _eq : \"Zach\" } , job : { _eq : \"doctor\" } } } ) { age } }",
    "schemaId" : "network_2",
    "question" : "What is the age of the doctor named Zach?"
  },
  {
    "query" : "query { person ( where : { age : { _lt : 30 } } ) { name } }",
    "schemaId" : "network_2",
    "question" : "Who is the person whose age is below 30?"
  },
  {
    "query" : "query { person ( where : { age : { _lt : 30 } } ) { name } }",
    "schemaId" : "network_2",
    "question" : "What is the name of the person whose age is below 30?"
  },
  {
    "query" : "query { person_aggregate ( where : { _and : { age : { _gt : 30 } , job : { _eq : \"engineer\" } } } ) { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "How many people whose age is greater 30 and job is engineer?"
  },
  {
    "query" : "query { person_aggregate ( where : { _and : { job : { _eq : \"engineer\" } , age : { _gt : 30 } } } ) { aggregate { count } } }",
    "schemaId" : "network_2",
    "question" : "HOw many engineers are older than 30?"
  },
  {
    "query" : "query { person ( order_by : { name : asc } ) { name job } }",
    "schemaId" : "network_2",
    "question" : "list the name, job title of all people ordered by their names."
  },
  {
    "query" : "query { person ( order_by : { name : asc } ) { name job } }",
    "schemaId" : "network_2",
    "question" : "What are the names and job titles of every person ordered alphabetically by name?"
  },
  {
    "query" : "query { person ( order_by : { age : desc } ) { name } }",
    "schemaId" : "network_2",
    "question" : "Find the names of all person sorted in the descending order using age."
  },
  {
    "query" : "query { person ( order_by : { age : desc } ) { name } }",
    "schemaId" : "network_2",
    "question" : "What are the names of everybody sorted by age in descending order?"
  },
  {
    "query" : "query { person ( order_by : { age : asc } , where : { gender : { _eq : \"male\" } } ) { name } }",
    "schemaId" : "network_2",
    "question" : "Find the name and age of all males in order of their age."
  },
  {
    "query" : "query { person ( order_by : { age : asc } , where : { gender : { _eq : \"male\" } } ) { name } }",
    "schemaId" : "network_2",
    "question" : "What is the name and age of every male? Order the results by age."
  },
  {
    "query" : "query { journalist_aggregate { aggregate { count } } }",
    "schemaId" : "news_report",
    "question" : "How many journalists are there?"
  },
  {
    "query" : "query { journalist ( order_by : { years_working : asc } ) { name } }",
    "schemaId" : "news_report",
    "question" : "List the names of journalists in ascending order of years working."
  },
  {
    "query" : "query { journalist { nationality age } }",
    "schemaId" : "news_report",
    "question" : "What are the nationalities and ages of journalists?"
  },
  {
    "query" : "query { journalist ( where : { _or : [ { nationality : { _eq : \"England\" } } , { nationality : { _eq : \"Wales\" } } ] } ) { name } }",
    "schemaId" : "news_report",
    "question" : "Show the names of journalists from \"England\" or \"Wales\"."
  },
  {
    "query" : "query { journalist_aggregate { aggregate { avg { years_working } } } }",
    "schemaId" : "news_report",
    "question" : "What is the average number of years spent working as a journalist?"
  },
  {
    "query" : "query { journalist ( limit : 1 , order_by : { years_working : desc } ) { nationality } }",
    "schemaId" : "news_report",
    "question" : "What is the nationality of the journalist with the largest number of years working?"
  },
  {
    "query" : "query { event ( order_by : { event_attendance : desc } ) { date name venue } }",
    "schemaId" : "news_report",
    "question" : "Show the dates, places, and names of events in descending order of the attendance."
  },
  {
    "query" : "query { journalist { name news_reports { event { date } } } }",
    "schemaId" : "news_report",
    "question" : "Show the names of journalists and the dates of the events they reported."
  },
  {
    "query" : "query { event ( order_by : { event_attendance : asc } ) { name news_reports { journalist { name } } } }",
    "schemaId" : "news_report",
    "question" : "Show the names of journalists and the names of the events they reported in ascending order of attendance"
  },
  {
    "query" : "query { event_aggregate { aggregate { avg { event_attendance } max { event_attendance } } } }",
    "schemaId" : "news_report",
    "question" : "what are the average and maximum attendances of all events?"
  },
  {
    "query" : "query { event ( limit : 2 , order_by : { event_attendance : desc } ) { venue name } }",
    "schemaId" : "news_report",
    "question" : "List the event venues and names that have the top 2 most number of people attended."
  },
  {
    "query" : "query { party_aggregate { aggregate { count } } }",
    "schemaId" : "party_host",
    "question" : "How many parties are there?"
  },
  {
    "query" : "query { party_aggregate { aggregate { count } } }",
    "schemaId" : "party_host",
    "question" : "Count the number of parties."
  },
  {
    "query" : "query { party ( order_by : { number_of_hosts : asc } ) { party_theme } }",
    "schemaId" : "party_host",
    "question" : "List the themes of parties in ascending order of number of hosts."
  },
  {
    "query" : "query { party ( order_by : { number_of_hosts : asc } ) { party_theme } }",
    "schemaId" : "party_host",
    "question" : "What are the themes of parties ordered by the number of hosts in ascending manner?"
  },
  {
    "query" : "query { party { party_theme location } }",
    "schemaId" : "party_host",
    "question" : "What are the themes and locations of parties?"
  },
  {
    "query" : "query { party { party_theme location } }",
    "schemaId" : "party_host",
    "question" : "Give me the theme and location of each party."
  },
  {
    "query" : "query { party ( where : { _or : [ { party_theme : { _eq : \"Spring\" } } , { party_theme : { _eq : \"Teqnology\" } } ] } ) { first_year last_year } }",
    "schemaId" : "party_host",
    "question" : "Show the first year and last year of parties with theme \"Spring\" or \"Teqnology\"."
  },
  {
    "query" : "query { party ( where : { _or : [ { party_theme : { _eq : \"Spring\" } } , { party_theme : { _eq : \"Teqnology\" } } ] } ) { first_year last_year } }",
    "schemaId" : "party_host",
    "question" : "What are the first year and last year of the parties whose theme is \"Spring\" or \"Teqnology\"?"
  },
  {
    "query" : "query { party_aggregate { aggregate { avg { number_of_hosts } } } }",
    "schemaId" : "party_host",
    "question" : "What is the average number of hosts for parties?"
  },
  {
    "query" : "query { party_aggregate { aggregate { avg { number_of_hosts } } } }",
    "schemaId" : "party_host",
    "question" : "Compute the average number of hosts for parties."
  },
  {
    "query" : "query { party ( limit : 1 , order_by : { number_of_hosts : desc } ) { location } }",
    "schemaId" : "party_host",
    "question" : "What is the location of the party with the most hosts?"
  },
  {
    "query" : "query { party ( limit : 1 , order_by : { number_of_hosts : desc } ) { location } }",
    "schemaId" : "party_host",
    "question" : "Which party had the most hosts? Give me the party location."
  },
  {
    "query" : "query { party { party_theme party_hosts { host { name } } } }",
    "schemaId" : "party_host",
    "question" : "Show the themes of parties and the names of the party hosts."
  },
  {
    "query" : "query { party { party_theme party_hosts { host { name } } } }",
    "schemaId" : "party_host",
    "question" : "For each party, return its theme and the name of its host."
  },
  {
    "query" : "query { host ( order_by : { age : asc } ) { name party_hosts { party { location } } } }",
    "schemaId" : "party_host",
    "question" : "Show the locations of parties and the names of the party hosts in ascending order of the age of the host."
  },
  {
    "query" : "query { host ( order_by : { age : asc } ) { name party_hosts { party { location } } } }",
    "schemaId" : "party_host",
    "question" : "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host."
  },
  {
    "query" : "query { party ( where : { party_hosts : { host : { age : { _gt : \"50\" } } } } ) { location } }",
    "schemaId" : "party_host",
    "question" : "Show the locations of parties with hosts older than 50."
  },
  {
    "query" : "query { party ( where : { party_hosts : { host : { age : { _gt : \"50\" } } } } ) { location } }",
    "schemaId" : "party_host",
    "question" : "Which parties have hosts of age above 50? Give me the party locations."
  },
  {
    "query" : "query { host ( limit : 1 , order_by : { age : desc } ) { name nationality } }",
    "schemaId" : "party_host",
    "question" : "Show the name and the nationality of the oldest host."
  },
  {
    "query" : "query { host ( limit : 1 , order_by : { age : desc } ) { name nationality } }",
    "schemaId" : "party_host",
    "question" : "What are the name and the nationality of the host of the highest age?"
  },
  {
    "query" : "query { region_aggregate { aggregate { count } } }",
    "schemaId" : "party_people",
    "question" : "How many regions do we have?"
  },
  {
    "query" : "query { region_aggregate { aggregate { count } } }",
    "schemaId" : "party_people",
    "question" : "Count the number of regions."
  },
  {
    "query" : "query { region ( order_by : { label : asc } , distinct_on : region_name ) { region_name } }",
    "schemaId" : "party_people",
    "question" : "Show all distinct region names ordered by their labels."
  },
  {
    "query" : "query { region ( order_by : { label : asc } , distinct_on : region_name ) { region_name } }",
    "schemaId" : "party_people",
    "question" : "What are the different region names, ordered by labels?"
  },
  {
    "query" : "query { party_aggregate { aggregate { count } } }",
    "schemaId" : "party_people",
    "question" : "How many parties do we have?"
  },
  {
    "query" : "query { party_aggregate { aggregate { count } } }",
    "schemaId" : "party_people",
    "question" : "Count the number of different parties."
  },
  {
    "query" : "query { party ( order_by : { left_office : asc } ) { minister took_office left_office } }",
    "schemaId" : "party_people",
    "question" : "Show the ministers and the time they took and left office, listed by the time they left office."
  },
  {
    "query" : "query { party ( order_by : { left_office : asc } ) { minister took_office left_office } }",
    "schemaId" : "party_people",
    "question" : "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?"
  },
  {
    "query" : "query { party ( where : { _or : [ { took_office : { _gt : \"1961\" } } , { took_office : { _lt : \"1959\" } } ] } ) { minister } }",
    "schemaId" : "party_people",
    "question" : "Show the minister who took office after 1961 or before 1959."
  },
  {
    "query" : "query { party ( where : { _or : [ { took_office : { _gt : \"1961\" } } , { took_office : { _lt : \"1959\" } } ] } ) { minister } }",
    "schemaId" : "party_people",
    "question" : "Who are the ministers who took office after 1961 or before 1959?"
  },
  {
    "query" : "query { party ( where : { party_name : { _neq : \"Progress Party\" } } ) { minister } }",
    "schemaId" : "party_people",
    "question" : "Show all ministers who do not belong to Progress Party."
  },
  {
    "query" : "query { party ( where : { party_name : { _neq : \"Progress Party\" } } ) { minister } }",
    "schemaId" : "party_people",
    "question" : "Which ministers are not a part of the Progress Party?"
  },
  {
    "query" : "query { party ( order_by : { took_office : desc } ) { minister party_name } }",
    "schemaId" : "party_people",
    "question" : "Show all ministers and parties they belong to in descending order of the time they took office."
  },
  {
    "query" : "query { party ( order_by : { took_office : desc } ) { minister party_name } }",
    "schemaId" : "party_people",
    "question" : "Who are the ministers and what parties do they belong to, listed descending by the times they took office?"
  },
  {
    "query" : "query { party ( limit : 1 , order_by : { left_office : desc } ) { minister } }",
    "schemaId" : "party_people",
    "question" : "Return the minister who left office at the latest time."
  },
  {
    "query" : "query { party ( limit : 1 , order_by : { left_office : desc } ) { minister } }",
    "schemaId" : "party_people",
    "question" : "Which minister left office the latest?"
  },
  {
    "query" : "query { member { member_name party { party_name } } }",
    "schemaId" : "party_people",
    "question" : "List member names and their party names."
  },
  {
    "query" : "query { member { member_name party { party_name } } }",
    "schemaId" : "party_people",
    "question" : "What are the names of members and their corresponding parties?"
  },
  {
    "query" : "query { party { party_name region { region_name } } }",
    "schemaId" : "party_people",
    "question" : "Show all party names and their region names."
  },
  {
    "query" : "query { party { party_name region { region_name } } }",
    "schemaId" : "party_people",
    "question" : "What are the names of parties and their respective regions?"
  },
  {
    "query" : "query { member ( where : { party : { party_name : { _neq : \"Progress Party\" } } } ) { member_name } }",
    "schemaId" : "party_people",
    "question" : "Show member names that are not in the Progress Party."
  },
  {
    "query" : "query { member ( where : { party : { party_name : { _neq : \"Progress Party\" } } } ) { member_name } }",
    "schemaId" : "party_people",
    "question" : "Which member names corresponding to members who are not in the Progress Party?"
  },
  {
    "query" : "query { party_events_aggregate { aggregate { count } } }",
    "schemaId" : "party_people",
    "question" : "How many party events do we have?"
  },
  {
    "query" : "query { party_events_aggregate { aggregate { count } } }",
    "schemaId" : "party_people",
    "question" : "Count the number of party events."
  },
  {
    "query" : "query { performance_aggregate { aggregate { count } } }",
    "schemaId" : "performance_attendance",
    "question" : "How many performances are there?"
  },
  {
    "query" : "query { performance ( order_by : { attendance : asc } ) { host } }",
    "schemaId" : "performance_attendance",
    "question" : "List the hosts of performances in ascending order of attendance."
  },
  {
    "query" : "query { performance { date location } }",
    "schemaId" : "performance_attendance",
    "question" : "What are the dates and locations of performances?"
  },
  {
    "query" : "query { performance ( where : { _or : [ { location : { _eq : \"TD Garden\" } } , { location : { _eq : \"Bell Centre\" } } ] } ) { attendance } }",
    "schemaId" : "performance_attendance",
    "question" : "Show the attendances of the performances at location \"TD Garden\" or \"Bell Centre\""
  },
  {
    "query" : "query { performance_aggregate { aggregate { avg { attendance } } } }",
    "schemaId" : "performance_attendance",
    "question" : "What is the average number of attendees for performances?"
  },
  {
    "query" : "query { performance ( limit : 1 , order_by : { attendance : desc } ) { date } }",
    "schemaId" : "performance_attendance",
    "question" : "What is the date of the performance with the highest number of attendees?"
  },
  {
    "query" : "query { member { name member_attendances { performance { location } } } }",
    "schemaId" : "performance_attendance",
    "question" : "Show the names of members and the location of the performances they attended."
  },
  {
    "query" : "query { member ( order_by : { name : asc } ) { name member_attendances { performance { location } } } }",
    "schemaId" : "performance_attendance",
    "question" : "Show the names of members and the location of performances they attended in ascending alphabetical order of their names."
  },
  {
    "query" : "query { performance ( where : { member_attendances : { member : { role : { _eq : \"Violin\" } } } } ) { date } }",
    "schemaId" : "performance_attendance",
    "question" : "Show the dates of performances with attending members whose roles are \"Violin\"."
  },
  {
    "query" : "query { performance ( order_by : { attendance : desc } ) { date member_attendances { member { name } } } }",
    "schemaId" : "performance_attendance",
    "question" : "Show the names of members and the dates of performances they attended in descending order of attendance of the performances."
  },
  {
    "query" : "query { perpetrator_aggregate { aggregate { count } } }",
    "schemaId" : "perpetrator",
    "question" : "How many perpetrators are there?"
  },
  {
    "query" : "query { perpetrator ( order_by : { killed : desc } ) { date } }",
    "schemaId" : "perpetrator",
    "question" : "List the date of perpetrators in descending order of the number of people killed."
  },
  {
    "query" : "query { perpetrator ( order_by : { injured : asc } ) { injured } }",
    "schemaId" : "perpetrator",
    "question" : "List the number of people injured by perpetrators in ascending order."
  },
  {
    "query" : "query { perpetrator_aggregate { aggregate { avg { injured } } } }",
    "schemaId" : "perpetrator",
    "question" : "What is the average number of people injured by all perpetrators?"
  },
  {
    "query" : "query { perpetrator ( limit : 1 , order_by : { killed : desc } ) { location } }",
    "schemaId" : "perpetrator",
    "question" : "What is the location of the perpetrator with the largest kills."
  },
  {
    "query" : "query { people ( order_by : { height : asc } ) { name } }",
    "schemaId" : "perpetrator",
    "question" : "What are the names of people in ascending order of height?"
  },
  {
    "query" : "query { people { name } }",
    "schemaId" : "perpetrator",
    "question" : "What are the names of perpetrators?"
  },
  {
    "query" : "query { people ( where : { perpetrators : { country : { _neq : \"China\" } } } ) { name } }",
    "schemaId" : "perpetrator",
    "question" : "What are the names of perpetrators whose country is not \"China\"?"
  },
  {
    "query" : "query { people ( limit : 1 , order_by : { weight : desc } ) { name } }",
    "schemaId" : "perpetrator",
    "question" : "What is the name of the perpetrator with the biggest weight."
  },
  {
    "query" : "query { perpetrator_aggregate ( where : { person : { height : { _gt : 1.84 } } } ) { aggregate { sum { killed } } } }",
    "schemaId" : "perpetrator",
    "question" : "What is the total kills of the perpetrators with height more than 1.84."
  },
  {
    "query" : "query { people ( where : { _or : [ { perpetrators : { country : { _eq : \"China\" } } } , { perpetrators : { country : { _eq : \"Japan\" } } } ] } ) { name } }",
    "schemaId" : "perpetrator",
    "question" : "What are the names of perpetrators in country \"China\" or \"Japan\"?"
  },
  {
    "query" : "query { people ( order_by : { perpetrators_aggregate : { max : { injured : desc_nulls_last } } } ) { height } }",
    "schemaId" : "perpetrator",
    "question" : "What are the heights of perpetrators in descending order of the number of people they injured?"
  },
  {
    "query" : "query { people ( order_by : { perpetrators_aggregate : { max : { year : desc_nulls_last }  } } ) { name } }",
    "schemaId" : "perpetrator",
    "question" : "List the names of perpetrators in descending order of the year."
  },
  {
    "query" : "query { perpetrator_aggregate { aggregate { count } } }",
    "schemaId" : "perpetrator",
    "question" : "How many distinct locations of perpetrators are there?"
  },
  {
    "query" : "query { perpetrator ( limit : 1 , order_by : { person : { height : desc } } ) { date } }",
    "schemaId" : "perpetrator",
    "question" : "Show the date of the tallest perpetrator."
  },
  {
    "query" : "query { perpetrator_aggregate { aggregate { max { year } } } }",
    "schemaId" : "perpetrator",
    "question" : "In which year did the most recent crime happen?"
  },
  {
    "query" : "query { chip_model ( where : { launch_year : { _gte : 2002.0 , _lte : 2004.0 } } ) { model_name } }",
    "schemaId" : "phone_1",
    "question" : "the names of models that launched between 2002 and 2004."
  },
  {
    "query" : "query { chip_model ( limit : 1 , order_by : { ram_mib : asc } ) { model_name ram_mib } }",
    "schemaId" : "phone_1",
    "question" : "Which model has the least amount of RAM? List the model name and the amount of RAM."
  },
  {
    "query" : "query { phone ( where : { hardware_model_name : { _eq : \"LG-P760\" } } ) { chip_model screen_mode } }",
    "schemaId" : "phone_1",
    "question" : "What are the chip model and screen mode of the phone with hardware model name \"LG-P760\"?"
  },
  {
    "query" : "query { phone_aggregate ( where : { company_name : { _eq : \"Nokia Corporation\" } } ) { aggregate { count } } }",
    "schemaId" : "phone_1",
    "question" : "How many phone hardware models are produced by the company named \"Nokia Corporation\"?"
  },
  {
    "query" : "query { chip_model_aggregate ( where : { phones : { company_name : { _eq : \"Nokia Corporation\" } } } ) { aggregate { max { ram_mib } min { ram_mib } } } }",
    "schemaId" : "phone_1",
    "question" : "What is maximum and minimum RAM size of phone produced by company named \"Nokia Corporation\"?"
  },
  {
    "query" : "query { chip_model_aggregate ( where : { phones : { company_name : { _eq : \"Nokia Corporation\" } } } ) { aggregate { avg { rom_mib } } } }",
    "schemaId" : "phone_1",
    "question" : "What is the average ROM size of phones produced by the company named \"Nokia Corporation\"?"
  },
  {
    "query" : "query { phone ( where : { _or : [ { chipModelByChipModel : { launch_year : { _eq : 2002.0 } } } , { chipModelByChipModel : { ram_mib : { _gt : 32.0 } } } ] } ) { hardware_model_name company_name } }",
    "schemaId" : "phone_1",
    "question" : "List the hardware model name and company name for all the phones that were launched in year 2002 or have RAM size greater than 32."
  },
  {
    "query" : "query { phone ( where : { accreditation_type : { _like : \"Full\" } } ) { hardware_model_name company_name } }",
    "schemaId" : "phone_1",
    "question" : "Find all phones that have word 'Full' in their accreditation types. List the Hardware Model name and Company name."
  },
  {
    "query" : "query { screen_mode ( where : { phones : { hardware_model_name : { _eq : \"LG-P760\" } } } ) { char_cells pixels hardware_colours } }",
    "schemaId" : "phone_1",
    "question" : "Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is \"LG-P760\"."
  },
  {
    "query" : "query { phone ( where : { screenModeByScreenMode : { type : { _eq : \"Graphics\" } } } ) { hardware_model_name company_name } }",
    "schemaId" : "phone_1",
    "question" : "List the hardware model name and company name for the phone whose screen mode type is \"Graphics.\""
  },
  {
    "query" : "query { screen_mode_aggregate { aggregate { max { used_kb } min { used_kb } avg { used_kb } } } }",
    "schemaId" : "phone_1",
    "question" : "List the maximum, minimum and average number of used kb in screen mode."
  },
  {
    "query" : "query { phone ( limit : 1 , order_by : { chipModelByChipModel : { ram_mib : desc } } , where : { chipModelByChipModel : { launch_year : { _eq : 2002.0 } } } ) { hardware_model_name } }",
    "schemaId" : "phone_1",
    "question" : "List the name of the phone model launched in year 2002 and with the highest RAM size."
  },
  {
    "query" : "query { chip_model ( where : { phones : { hardware_model_name : { _eq : \"LG-P760\" } } } ) { wifi phones { screenModeByScreenMode { type } } } }",
    "schemaId" : "phone_1",
    "question" : "What are the wifi and screen mode type of the hardware model named \"LG-P760\"?"
  },
  {
    "query" : "query { phone ( where : { _or : [ { screenModeByScreenMode : { type : { _eq : \"Graphics\" } } } , { company_name : { _eq : \"Nokia Corporation\" } } ] } , distinct_on : hardware_model_name ) { hardware_model_name } }",
    "schemaId" : "phone_1",
    "question" : "List the hardware model name for the phones that were produced by \"Nokia Corporation\" or whose screen mode type is \"Graphics.\""
  },
  {
    "query" : "query { phone ( where : { _and : { screenModeByScreenMode : { type : { _neq : \"Text\" } } , company_name : { _eq : \"Nokia Corporation\" } } } , distinct_on : hardware_model_name ) { hardware_model_name } }",
    "schemaId" : "phone_1",
    "question" : "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text."
  },
  {
    "query" : "query { chip_model { bluetooth launch_year model_name ram_mib rom_mib slots wifi } }",
    "schemaId" : "phone_1",
    "question" : "Find the details for all chip models."
  },
  {
    "query" : "query { chip_model_aggregate ( where : { wifi : { _eq : \"No\" } } ) { aggregate { count } } }",
    "schemaId" : "phone_1",
    "question" : "How many models do not have the wifi function?"
  },
  {
    "query" : "query { chip_model_aggregate ( where : { wifi : { _eq : \"No\" } } ) { aggregate { count } } }",
    "schemaId" : "phone_1",
    "question" : "Count the number of chip model that do not have wifi."
  },
  {
    "query" : "query { chip_model ( order_by : { launch_year : asc } ) { model_name } }",
    "schemaId" : "phone_1",
    "question" : "List all the model names sorted by their launch year."
  },
  {
    "query" : "query { phone_aggregate { aggregate { count } } }",
    "schemaId" : "phone_market",
    "question" : "How many phones are there?"
  },
  {
    "query" : "query { phone ( order_by : { price : asc } ) { name } }",
    "schemaId" : "phone_market",
    "question" : "List the names of phones in ascending order of price."
  },
  {
    "query" : "query { phone { memory_in_g carrier } }",
    "schemaId" : "phone_market",
    "question" : "What are the memories and carriers of phones?"
  },
  {
    "query" : "query { phone ( where : { memory_in_g : { _gt : 32 } } , distinct_on : carrier ) { carrier } }",
    "schemaId" : "phone_market",
    "question" : "List the distinct carriers of phones with memories bigger than 32."
  },
  {
    "query" : "query { phone ( where : { _or : [ { carrier : { _eq : \"Sprint\" } } , { carrier : { _eq : \"TMobile\" } } ] } ) { name } }",
    "schemaId" : "phone_market",
    "question" : "Show the names of phones with carrier either \"Sprint\" or \"TMobile\"."
  },
  {
    "query" : "query { phone ( limit : 1 , order_by : { price : desc } ) { carrier } }",
    "schemaId" : "phone_market",
    "question" : "What is the carrier of the most expensive phone?"
  },
  {
    "query" : "query { phone { name phone_markets { market { district } } } }",
    "schemaId" : "phone_market",
    "question" : "Show the names of phones and the districts of markets they are on."
  },
  {
    "query" : "query { market ( order_by : { ranking : asc } ) { district phone_markets { phone { name } } } }",
    "schemaId" : "phone_market",
    "question" : "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market."
  },
  {
    "query" : "query { phone ( where : { phone_markets : { market : { num_of_shops : { _gt : 50.0 } } } } ) { name } }",
    "schemaId" : "phone_market",
    "question" : "Show the names of phones that are on market with number of shops greater than 50."
  },
  {
    "query" : "query { pilot_aggregate { aggregate { count } } }",
    "schemaId" : "pilot_record",
    "question" : "How many pilots are there?"
  },
  {
    "query" : "query { pilot ( order_by : { rank : asc } ) { pilot_name } }",
    "schemaId" : "pilot_record",
    "question" : "List the names of pilots in ascending order of rank."
  },
  {
    "query" : "query { pilot { position team } }",
    "schemaId" : "pilot_record",
    "question" : "What are the positions and teams of pilots?"
  },
  {
    "query" : "query { pilot ( where : { age : { _gt : 30 } } , distinct_on : position ) { position } }",
    "schemaId" : "pilot_record",
    "question" : "List the distinct positions of pilots older than 30."
  },
  {
    "query" : "query { pilot ( where : { _or : [ { team : { _eq : \"Bradley\" } } , { team : { _eq : \"Fordham\" } } ] } ) { pilot_name } }",
    "schemaId" : "pilot_record",
    "question" : "Show the names of pilots from team \"Bradley\" or \"Fordham\"."
  },
  {
    "query" : "query { pilot ( limit : 1 , order_by : { rank : asc } ) { join_year } }",
    "schemaId" : "pilot_record",
    "question" : "What is the joined year of the pilot of the highest rank?"
  },
  {
    "query" : "query { pilot { pilot_name pilot_records { aircraft { model } } } }",
    "schemaId" : "pilot_record",
    "question" : "Show the names of pilots and models of aircrafts they have flied with."
  },
  {
    "query" : "query { pilot ( order_by : { rank : asc } ) { pilot_name pilot_records { aircraft { fleet_series } } } }",
    "schemaId" : "pilot_record",
    "question" : "Show the names of pilots and fleet series of the aircrafts they have flied with in ascending order of the rank of the pilot."
  },
  {
    "query" : "query { catalog_contents ( distinct_on : catalog_entry_name ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Find the names of all the catalog entries."
  },
  {
    "query" : "query { catalog_contents ( distinct_on : catalog_entry_name ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "What are all the catalog entry names?"
  },
  {
    "query" : "query { attribute_definitions ( where : { attribute_name : { _eq : \"Green\" } } ) { attribute_data_type } }",
    "schemaId" : "product_catalog",
    "question" : "What is the attribute data type of the attribute with name \"Green\"?"
  },
  {
    "query" : "query { attribute_definitions ( where : { attribute_name : { _eq : \"Green\" } } ) { attribute_data_type } }",
    "schemaId" : "product_catalog",
    "question" : "Find the attribute data type for the attribute named \"Green\"."
  },
  {
    "query" : "query { catalog_structure ( where : { catalog_level_number : { _gte : 5 , _lte : 10 } } ) { catalog_level_name catalog_level_number } }",
    "schemaId" : "product_catalog",
    "question" : "Find the name and level of catalog structure with level between 5 and 10."
  },
  {
    "query" : "query { catalog_structure ( where : { catalog_level_number : { _gte : 5 , _lte : 10 } } ) { catalog_level_name catalog_level_number } }",
    "schemaId" : "product_catalog",
    "question" : "What are the name and level of catalog structure with level number between 5 and 10"
  },
  {
    "query" : "query { catalogs ( where : { catalog_publisher : { _like : \"%Murray%\" } } , distinct_on : catalog_publisher ) { catalog_publisher } }",
    "schemaId" : "product_catalog",
    "question" : "Find all the catalog publishers whose name contains \"Murray\""
  },
  {
    "query" : "query { catalogs ( where : { catalog_publisher : { _like : \"%Murray%\" } } , distinct_on : catalog_publisher ) { catalog_publisher } }",
    "schemaId" : "product_catalog",
    "question" : "Which catalog publishers have substring \"Murray\" in their names?"
  },
  {
    "query" : "query { catalogs ( where : { catalog_structures : { catalog_level_number : { _gt : 5 } } } ) { catalog_name date_of_publication } }",
    "schemaId" : "product_catalog",
    "question" : "Find the names and publication dates of all catalogs that have catalog level number greater than 5."
  },
  {
    "query" : "query { catalogs ( where : { catalog_structures : { catalog_level_number : { _gt : 5 } } } ) { catalog_name date_of_publication } }",
    "schemaId" : "product_catalog",
    "question" : "What are the name and publication date of the catalogs with catalog level number above 5?"
  },
  {
    "query" : "query { catalog_contents ( limit : 1 , order_by : { price_in_dollars : desc } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "What is the entry name of the most expensive catalog (in USD)?"
  },
  {
    "query" : "query { catalog_contents ( limit : 1 , order_by : { price_in_dollars : desc } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Find the entry name of the catalog with the highest price (in USD)."
  },
  {
    "query" : "query { catalog_structure ( limit : 1 , order_by : { catalog_contents_aggregate : { min : { price_in_dollars : asc } } } ) { catalog_level_name } }",
    "schemaId" : "product_catalog",
    "question" : "What is the level name of the cheapest catalog (in USD)?"
  },
  {
    "query" : "query { catalog_structure ( limit : 1 , order_by : { catalog_contents_aggregate : { min : { price_in_dollars : asc } } } ) { catalog_level_name } }",
    "schemaId" : "product_catalog",
    "question" : "Find the level name of the catalog with the lowest price (in USD)."
  },
  {
    "query" : "query { catalog_contents_aggregate { aggregate { avg { price_in_euros } min { price_in_euros } } } }",
    "schemaId" : "product_catalog",
    "question" : "What are the average and minimum price (in Euro) of all products?"
  },
  {
    "query" : "query { catalog_contents_aggregate { aggregate { avg { price_in_euros } min { price_in_euros } } } }",
    "schemaId" : "product_catalog",
    "question" : "Give me the average and minimum price (in Euro) of the products."
  },
  {
    "query" : "query { catalog_contents ( limit : 1 , order_by : { height : desc } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "What is the product with the highest height? Give me the catalog entry name."
  },
  {
    "query" : "query { catalog_contents ( limit : 1 , order_by : { height : desc } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Which catalog content has the highest height? Give me the catalog entry name."
  },
  {
    "query" : "query { catalog_contents ( limit : 1 , order_by : { capacity : asc } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Find the name of the product that has the smallest capacity."
  },
  {
    "query" : "query { catalog_contents ( limit : 1 , order_by : { capacity : asc } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Which catalog content has the smallest capacity? Return the catalog entry name."
  },
  {
    "query" : "query { catalog_contents ( where : { product_stock_number : { _like : \"2%\" } } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Find the names of all the products whose stock number starts with \"2\"."
  },
  {
    "query" : "query { catalog_contents ( where : { product_stock_number : { _like : \"2%\" } } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Which catalog contents have a product stock number that starts from \"2\"? Show the catalog entry names."
  },
  {
    "query" : "query { catalog_contents ( where : { catalog_contents_additional_attributes : { catalog_level_number : { _eq : 8 } } } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Find the names of catalog entries with level number 8."
  },
  {
    "query" : "query { catalog_contents ( where : { catalog_contents_additional_attributes : { catalog_level_number : { _eq : 8 } } } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "What are the names of catalog entries with level number 8?"
  },
  {
    "query" : "query { catalog_contents ( where : { _or : [ { length : { _lt : \"3\" } } , { width : { _gt : \"5\" } } ] } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Find the names of the products with length smaller than 3 or height greater than 5."
  },
  {
    "query" : "query { catalog_contents ( where : { _or : [ { length : { _lt : \"3\" } } , { width : { _gt : \"5\" } } ] } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Which catalog contents have length below 3 or above 5? Find the catalog entry names."
  },
  {
    "query" : "query { attribute_definitions ( where : { catalog_contents_additional_attributes : { attribute_value : { _eq : \"0\" } } } ) { attribute_name attribute_id } }",
    "schemaId" : "product_catalog",
    "question" : "Find the name and attribute ID of the attribute definitions with attribute value 0."
  },
  {
    "query" : "query { attribute_definitions ( where : { catalog_contents_additional_attributes : { attribute_value : { _eq : \"0\" } } } ) { attribute_name attribute_id } }",
    "schemaId" : "product_catalog",
    "question" : "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID."
  },
  {
    "query" : "query { catalog_contents ( where : { price_in_dollars : { _gt : 700.0 } } ) { catalog_entry_name capacity } }",
    "schemaId" : "product_catalog",
    "question" : "Find the name and capacity of products with price greater than 700 (in USD)."
  },
  {
    "query" : "query { catalog_contents ( where : { price_in_dollars : { _gt : 700.0 } } ) { catalog_entry_name capacity } }",
    "schemaId" : "product_catalog",
    "question" : "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities."
  },
  {
    "query" : "query { catalog_contents_aggregate { aggregate { count } } }",
    "schemaId" : "product_catalog",
    "question" : "How many products are there in the records?"
  },
  {
    "query" : "query { catalog_contents_aggregate { aggregate { count } } }",
    "schemaId" : "product_catalog",
    "question" : "Find the total number of catalog contents."
  },
  {
    "query" : "query { catalog_contents ( where : { next_entry_id : { _gt : 8 } } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "Name all the products with next entry ID greater than 8."
  },
  {
    "query" : "query { catalog_contents ( where : { next_entry_id : { _gt : 8 } } ) { catalog_entry_name } }",
    "schemaId" : "product_catalog",
    "question" : "What are the catalog entry names of the products with next entry ID above 8?"
  },
  {
    "query" : "query { customers ( where : { discount_coupon : { coupon_amount : { _eq : 500 } } } ) { good_or_bad_customer } }",
    "schemaId" : "products_for_hire",
    "question" : "Are the customers holding coupons with amount 500 bad or good?"
  },
  {
    "query" : "query { products_for_hire ( where : { products_bookeds : { booked_amount : { _eq : 102.76 } } } ) { product_description } }",
    "schemaId" : "products_for_hire",
    "question" : "What is the product description of the product booked with an amount of 102.76?"
  },
  {
    "query" : "query { bookings ( where : { products_bookeds : { products_for_hire : { product_name : { _eq : \"Book collection A\" } } } } ) { booking_start_date booking_end_date } }",
    "schemaId" : "products_for_hire",
    "question" : "What are the start date and end date of the booking that has booked the product named 'Book collection A'?"
  },
  {
    "query" : "query { products_for_hire ( where : { view_product_availabilities : { available_yn : { _eq : \"1\" } } } ) { product_name } }",
    "schemaId" : "products_for_hire",
    "question" : "What are the names of products whose availability equals to 1?"
  },
  {
    "query" : "query { products_for_hire_aggregate { aggregate { count } } }",
    "schemaId" : "products_for_hire",
    "question" : "How many different product types are there?"
  },
  {
    "query" : "query { customers ( order_by : { last_name : asc } , where : { good_or_bad_customer : { _eq : \"good\" } } ) { first_name last_name gender_mf } }",
    "schemaId" : "products_for_hire",
    "question" : "What are the first name, last name, and gender of all the good customers? Order by their last name."
  },
  {
    "query" : "query { payments_aggregate { aggregate { avg { amount_due } } } }",
    "schemaId" : "products_for_hire",
    "question" : "What is the average amount due for all the payments?"
  },
  {
    "query" : "query { products_booked_aggregate { aggregate { max { booked_count } min { booked_count } avg { booked_count } } } }",
    "schemaId" : "products_for_hire",
    "question" : "What are the maximum, minimum, and average booked count for the products booked?"
  },
  {
    "query" : "query { payments ( distinct_on : payment_type_code ) { payment_type_code } }",
    "schemaId" : "products_for_hire",
    "question" : "What are all the distinct payment types?"
  },
  {
    "query" : "query { products_for_hire ( where : { product_name : { _like : \"%Book%\" } } ) { daily_hire_cost } }",
    "schemaId" : "products_for_hire",
    "question" : "What are the daily hire costs for the products with substring 'Book' in its name?"
  },
  {
    "query" : "query { payments ( where : { _or : [ { amount_paid : { _gt : 300 } } , { payment_type_code : { _eq : \"Check\" } } ] } ) { payment_date } }",
    "schemaId" : "products_for_hire",
    "question" : "What are the payment date of the payment with amount paid higher than 300 or with payment type is 'Check'"
  },
  {
    "query" : "query { products_for_hire ( where : { _and : { product_type_code : { _eq : \"Cutlery\" } , daily_hire_cost : { _lt : 20 } } } ) { product_name product_description } }",
    "schemaId" : "products_for_hire",
    "question" : "What are the names and descriptions of the products that are of 'Cutlery' type and have daily hire cost lower than 20?"
  },
  {
    "query" : "query { products_aggregate { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many products are there?"
  },
  {
    "query" : "query { products_aggregate { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of products."
  },
  {
    "query" : "query { ref_colors_aggregate { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many colors are there?"
  },
  {
    "query" : "query { ref_colors_aggregate { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of colors."
  },
  {
    "query" : "query { characteristics_aggregate { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many characteristics are there?"
  },
  {
    "query" : "query { characteristics_aggregate { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of characteristics."
  },
  {
    "query" : "query { products { product_name typical_buying_price } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the names and buying prices of all the products?"
  },
  {
    "query" : "query { products { product_name typical_buying_price } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the names and typical buying prices for all products."
  },
  {
    "query" : "query { ref_colors { color_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "List the description of all the colors."
  },
  {
    "query" : "query { ref_colors { color_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the descriptions for each color?"
  },
  {
    "query" : "query { characteristics ( distinct_on : characteristic_name ) { characteristic_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Find the names of all the product characteristics."
  },
  {
    "query" : "query { characteristics ( distinct_on : characteristic_name ) { characteristic_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the different names of the product characteristics?"
  },
  {
    "query" : "query { products ( where : { product_category_code : { _eq : \"Spices\" } } ) { product_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the names of products with category \"Spices\"?"
  },
  {
    "query" : "query { products ( where : { product_category_code : { _eq : \"Spices\" } } ) { product_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the names of products in the category 'Spices'."
  },
  {
    "query" : "query { products ( where : { product_category_code : { _eq : \"Herbs\" } } ) { product_name product_description ref_color { color_description } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "List the names, color descriptions and product descriptions of products with category \"Herbs\"."
  },
  {
    "query" : "query { products ( where : { product_category_code : { _eq : \"Herbs\" } } ) { product_name product_description ref_color { color_description } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the names, color descriptions, and product descriptions for products in the 'Herbs' category?"
  },
  {
    "query" : "query { products_aggregate ( where : { product_category_code : { _eq : \"Seeds\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many products are there under the category \"Seeds\"?"
  },
  {
    "query" : "query { products_aggregate ( where : { product_category_code : { _eq : \"Seeds\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of products in the category 'Seeds'."
  },
  {
    "query" : "query { products_aggregate ( where : { _and : { product_category_code : { _eq : \"Spices\" } , typical_buying_price : { _gt : \"1000\" } } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Find the number of products with category \"Spices\" and typically sold above 1000."
  },
  {
    "query" : "query { products_aggregate ( where : { _and : { typical_buying_price : { _gt : \"1000\" } , product_category_code : { _eq : \"Spices\" } } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many products are in the 'Spices' category and have a typical price of over 1000?"
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"cumin\" } } ) { product_category_code typical_buying_price } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the category and typical buying price  of the product with name \"cumin\"?"
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"cumin\" } } ) { product_category_code typical_buying_price } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the category code and typical price of 'cumin'."
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"flax\" } } ) { product_category_code } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Which category does the product named \"flax\" belong to?"
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"flax\" } } ) { product_category_code } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the code of the category that the product with the name 'flax' belongs to?"
  },
  {
    "query" : "query { products ( where : { ref_color : { color_description : { _eq : \"yellow\" } } } ) { product_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the name of the product with the color description 'yellow'?"
  },
  {
    "query" : "query { products ( where : { ref_color : { color_description : { _eq : \"yellow\" } } } ) { product_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Give the name of the products that have a color description 'yellow'."
  },
  {
    "query" : "query { ref_product_categories ( where : { products : { product_description : { _like : \"%t%\" } } } ) { product_category_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Find the category descriptions of the products whose descriptions include letter 't'."
  },
  {
    "query" : "query { ref_product_categories ( where : { products : { product_description : { _like : \"%t%\" } } } ) { product_category_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the descriptions of the categories that products with product descriptions that contain the letter t are in?"
  },
  {
    "query" : "query { ref_colors ( where : { products : { product_name : { _eq : \"catnip\" } } } ) { color_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the color description of the product with name \"catnip\"?"
  },
  {
    "query" : "query { ref_colors ( where : { products : { product_name : { _eq : \"catnip\" } } } ) { color_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Give the color description for the product 'catnip'."
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"chervil\" } } ) { color_code ref_color { color_description } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the color code and description of the product named \"chervil\"?"
  },
  {
    "query" : "query { products ( where : { product_name : { _eq : \"chervil\" } } ) { color_code ref_color { color_description } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the color code and description for the product with the name 'chervil'."
  },
  {
    "query" : "query { products ( where : { ref_color : { color_description : { _eq : \"white\" } } } ) { product_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "List all the product names with the color description \"white\"."
  },
  {
    "query" : "query { products ( where : { ref_color : { color_description : { _eq : \"white\" } } } ) { product_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the names of products with 'white' as their color description?"
  },
  {
    "query" : "query { products ( where : { ref_color : { color_description : { _eq : \"yellow\" } } } ) { product_name typical_buying_price typical_selling_price } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the name and typical buying and selling prices of the products that have color described as \"yellow\"?"
  },
  {
    "query" : "query { products ( where : { ref_color : { color_description : { _eq : \"yellow\" } } } ) { product_name typical_buying_price typical_selling_price } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the names and typical buying and selling prices for products that have 'yellow' as their color description."
  },
  {
    "query" : "query { products_aggregate ( where : { product_name : { _eq : \"sesame\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many characteristics does the product named \"sesame\" have?"
  },
  {
    "query" : "query { products_aggregate ( where : { product_name : { _eq : \"sesame\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of characteristics the product 'sesame' has."
  },
  {
    "query" : "query { characteristics_aggregate ( where : { product_characteristics : { product : { product_name : { _eq : \"sesame\" } } } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many distinct characteristic names does the product \"cumin\" have?"
  },
  {
    "query" : "query { characteristics_aggregate ( where : { product_characteristics : { product : { product_name : { _eq : \"sesame\" } } } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of different characteristic names the product 'cumin' has."
  },
  {
    "query" : "query { characteristics ( where : { product_characteristics : { product : { product_name : { _eq : \"sesame\" } } } } ) { characteristic_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are all the characteristic names of product \"sesame\"?"
  },
  {
    "query" : "query { characteristics ( where : { product_characteristics : { product : { product_name : { _eq : \"sesame\" } } } } ) { characteristic_name } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the characteristic names of the 'sesame' product."
  },
  {
    "query" : "query { characteristics ( where : { product_characteristics : { product : { product_name : { _eq : \"cumin\" } } } } ) { characteristic_name characteristic_data_type } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "List all the characteristic names and data types of product \"cumin\"."
  },
  {
    "query" : "query { characteristics ( where : { product_characteristics : { product : { product_name : { _eq : \"cumin\" } } } } ) { characteristic_name characteristic_data_type } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the names and data types of the characteristics of the 'cumin' product?"
  },
  {
    "query" : "query { products_aggregate ( where : { product_name : { _eq : \"laurel\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "How many characteristics does the product named \"laurel\" have?"
  },
  {
    "query" : "query { products_aggregate ( where : { product_name : { _eq : \"laurel\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of characteristics of the product named 'laurel'."
  },
  {
    "query" : "query { products_aggregate ( where : { product_name : { _eq : \"flax\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Find the number of characteristics that the product \"flax\" has."
  },
  {
    "query" : "query { products_aggregate ( where : { product_name : { _eq : \"flax\" } } ) { aggregate { count } } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Count the number of characteristics of the 'flax' product."
  },
  {
    "query" : "query { ref_product_categories ( where : { product_category_code : { _eq : \"Herbs\" } } ) { unit_of_measure } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the unit of measuerment of the product category code \"Herbs\"?"
  },
  {
    "query" : "query { ref_product_categories ( where : { product_category_code : { _eq : \"Herbs\" } } ) { unit_of_measure } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the unit of measure for 'Herb' products."
  },
  {
    "query" : "query { ref_product_categories ( where : { product_category_code : { _eq : \"Spices\" } } ) { product_category_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Find the product category description of the product category with code \"Spices\"."
  },
  {
    "query" : "query { ref_product_categories ( where : { product_category_code : { _eq : \"Spices\" } } ) { product_category_description } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the description of the product category with the code 'Spices'?"
  },
  {
    "query" : "query { ref_product_categories ( where : { product_category_code : { _eq : \"Herbs\" } } ) { product_category_description unit_of_measure } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the product category description and unit of measurement of category \"Herbs\"?"
  },
  {
    "query" : "query { ref_product_categories ( where : { product_category_code : { _eq : \"Herbs\" } } ) { product_category_description unit_of_measure } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Return the description and unit of measurement for products in the 'Herbs' category."
  },
  {
    "query" : "query { ref_product_categories ( where : { products : { product_name : { _eq : \"cumin\" } } } ) { unit_of_measure } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What is the unit of measurement of product named \"cumin\"?"
  },
  {
    "query" : "query { ref_product_categories ( where : { products : { product_name : { _eq : \"cumin\" } } } ) { unit_of_measure } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Give the unit of measure for the product with the name 'cumin'."
  },
  {
    "query" : "query { ref_product_categories ( where : { products : { product_name : { _eq : \"chervil\" } } } ) { unit_of_measure product_category_code } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "Find the unit of measurement and product category code of product named \"chervil\"."
  },
  {
    "query" : "query { ref_product_categories ( where : { products : { product_name : { _eq : \"chervil\" } } } ) { unit_of_measure product_category_code } }",
    "schemaId" : "products_gen_characteristics",
    "question" : "What are the unit of measure and category code for the 'chervil' product?"
  },
  {
    "query" : "query { channel ( where : { owner : { _neq : \"CCTV\" } } ) { name } }",
    "schemaId" : "program_share",
    "question" : "Find the names of channels that are not owned by CCTV."
  },
  {
    "query" : "query { channel ( where : { owner : { _neq : \"CCTV\" } } ) { name } }",
    "schemaId" : "program_share",
    "question" : "Which channels are not owned by CCTV? Give me the channel names."
  },
  {
    "query" : "query { channel ( order_by : { rating_in_percent : desc } ) { name } }",
    "schemaId" : "program_share",
    "question" : "List all channel names ordered by their rating in percent from big to small."
  },
  {
    "query" : "query { channel ( order_by : { rating_in_percent : desc } ) { name } }",
    "schemaId" : "program_share",
    "question" : "Give me a list of all the channel names sorted by the channel rating in descending order."
  },
  {
    "query" : "query { channel ( limit : 1 , order_by : { rating_in_percent : desc } ) { owner } }",
    "schemaId" : "program_share",
    "question" : "What is the owner of the channel that has the highest rating ratio?"
  },
  {
    "query" : "query { channel ( limit : 1 , order_by : { rating_in_percent : desc } ) { owner } }",
    "schemaId" : "program_share",
    "question" : "Show me the owner of the channel with the highest rating."
  },
  {
    "query" : "query { program_aggregate { aggregate { count } } }",
    "schemaId" : "program_share",
    "question" : "how many programs are there?"
  },
  {
    "query" : "query { program_aggregate { aggregate { count } } }",
    "schemaId" : "program_share",
    "question" : "Count the number of programs."
  },
  {
    "query" : "query { program ( order_by : { launch : asc } ) { name } }",
    "schemaId" : "program_share",
    "question" : "list all the names of programs, ordering by launch time."
  },
  {
    "query" : "query { program ( order_by : { launch : asc } ) { name } }",
    "schemaId" : "program_share",
    "question" : "What is the list of program names, sorted by the order of launch date?"
  },
  {
    "query" : "query { program { name origin owner } }",
    "schemaId" : "program_share",
    "question" : "List the name, origin and owner of each program."
  },
  {
    "query" : "query { program { name origin owner } }",
    "schemaId" : "program_share",
    "question" : "What are the name, origin and owner of each program?"
  },
  {
    "query" : "query { program ( limit : 1 , order_by : { launch : desc } ) { name } }",
    "schemaId" : "program_share",
    "question" : "find the name of the program that was launched most recently."
  },
  {
    "query" : "query { program ( limit : 1 , order_by : { launch : desc } ) { name } }",
    "schemaId" : "program_share",
    "question" : "Which program was launched most recently? Return the program name."
  },
  {
    "query" : "query { channel_aggregate ( where : { owner : { _eq : \"CCTV\" } } ) { aggregate { sum { share_in_percent } } } }",
    "schemaId" : "program_share",
    "question" : "find the total percentage share of all channels owned by CCTV."
  },
  {
    "query" : "query { channel_aggregate ( where : { owner : { _eq : \"CCTV\" } } ) { aggregate { sum { share_in_percent } } } }",
    "schemaId" : "program_share",
    "question" : "What is the total share (in percent) of all the channels owned by CCTV?"
  },
  {
    "query" : "query { channel ( where : { broadcasts : { time_of_day : { _eq : \"Morning\" } } } ) { name } }",
    "schemaId" : "program_share",
    "question" : "Find the names of the channels that are broadcast in the morning."
  },
  {
    "query" : "query { channel ( where : { broadcasts : { time_of_day : { _eq : \"Morning\" } } } ) { name } }",
    "schemaId" : "program_share",
    "question" : "Which channels are broadcast in the morning? Give me the channel names."
  },
  {
    "query" : "query { broadcast_aggregate ( where : { time_of_day : { _eq : \"Night\" } } ) { aggregate { count } } }",
    "schemaId" : "program_share",
    "question" : "find the number of different programs that are broadcast during night time."
  },
  {
    "query" : "query { broadcast_aggregate ( where : { time_of_day : { _eq : \"Night\" } } ) { aggregate { count } } }",
    "schemaId" : "program_share",
    "question" : "How many distinct programs are broadcast at \"Night\" time?"
  },
  {
    "query" : "query { program ( order_by : { origin : asc } ) { origin } }",
    "schemaId" : "program_share",
    "question" : "List all program origins in the alphabetical order."
  },
  {
    "query" : "query { program ( order_by : { origin : asc } ) { origin } }",
    "schemaId" : "program_share",
    "question" : "What is the list of program origins ordered alphabetically?"
  },
  {
    "query" : "query { channel_aggregate { aggregate { count } } }",
    "schemaId" : "program_share",
    "question" : "what is the number of different channel owners?"
  },
  {
    "query" : "query { channel_aggregate { aggregate { count } } }",
    "schemaId" : "program_share",
    "question" : "Count the number of distinct channel owners."
  },
  {
    "query" : "query { program ( where : { origin : { _neq : \"Beijing\" } } ) { name } }",
    "schemaId" : "program_share",
    "question" : "find the names of programs whose origin is not in Beijing."
  },
  {
    "query" : "query { program ( where : { origin : { _neq : \"Beijing\" } } ) { name } }",
    "schemaId" : "program_share",
    "question" : "Which programs' origins are not \"Beijing\"? Give me the program names."
  },
  {
    "query" : "query { channel ( where : { _or : [ { owner : { _eq : \"CCTV\" } } , { owner : { _eq : \"HBS\" } } ] } ) { name } }",
    "schemaId" : "program_share",
    "question" : "What are the names of the channels owned by CCTV or HBS?"
  },
  {
    "query" : "query { channel ( where : { _or : [ { owner : { _eq : \"CCTV\" } } , { owner : { _eq : \"HBS\" } } ] } ) { name } }",
    "schemaId" : "program_share",
    "question" : "List the names of all the channels owned by either CCTV or HBS"
  },
  {
    "query" : "query { building_aggregate { aggregate { count } } }",
    "schemaId" : "protein_institute",
    "question" : "How many buildings are there?"
  },
  {
    "query" : "query { building ( order_by : { floors : asc } ) { name street_address floors } }",
    "schemaId" : "protein_institute",
    "question" : "Show the name, street address, and number of floors for all buildings ordered by the number of floors."
  },
  {
    "query" : "query { building ( limit : 1 , order_by : { height_feet : desc } ) { name } }",
    "schemaId" : "protein_institute",
    "question" : "What is the name of the tallest building?"
  },
  {
    "query" : "query { building_aggregate { aggregate { avg { floors } max { floors } min { floors } } } }",
    "schemaId" : "protein_institute",
    "question" : "What are the average, maximum, and minimum number of floors for all buildings?"
  },
  {
    "query" : "query { building ( where : { _and : { floors : { _gte : 20 } , height_feet : { _gte : 200 } } } ) { name } }",
    "schemaId" : "protein_institute",
    "question" : "List the names of buildings with at least 200 feet of height and with at least 20 floors."
  },
  {
    "query" : "query { institution ( where : { _and : { founded : { _gt : 1990.0 } , type : { _eq : \"Private\" } } } ) { institution location } }",
    "schemaId" : "protein_institute",
    "question" : "Show the names and locations of institutions that are founded after 1990 and have the type \"Private\"."
  },
  {
    "query" : "query { institution ( where : { _and : { founded : { _gt : 1990.0 } , enrollment : { _gte : 1000 } } } ) { type } }",
    "schemaId" : "protein_institute",
    "question" : "Show the institution type with an institution founded after 1990 and an institution with at least 1000 enrollment."
  },
  {
    "query" : "query { institution ( distinct_on : type ) { type } }",
    "schemaId" : "protein_institute",
    "question" : "Show all the distinct institution types."
  },
  {
    "query" : "query { institution_aggregate ( where : { _or : [ { founded : { _gt : 1880.0 } } , { type : { _eq : \"Private\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "protein_institute",
    "question" : "How many proteins are associated with an institution founded after 1880 or an institution with type \"Private\"?"
  },
  {
    "query" : "query { protein { protein_name institution { institution } } }",
    "schemaId" : "protein_institute",
    "question" : "Show the protein name and the institution name."
  },
  {
    "query" : "query { track_aggregate { aggregate { count } } }",
    "schemaId" : "race_track",
    "question" : "How many tracks do we have?"
  },
  {
    "query" : "query { track_aggregate { aggregate { count } } }",
    "schemaId" : "race_track",
    "question" : "Count the number of tracks."
  },
  {
    "query" : "query { track { name location } }",
    "schemaId" : "race_track",
    "question" : "Show the name and location for all tracks."
  },
  {
    "query" : "query { track { name location } }",
    "schemaId" : "race_track",
    "question" : "What are the names and locations of all tracks?"
  },
  {
    "query" : "query { track ( order_by : { seating : asc } , where : { year_opened : { _gt : 2000.0 } } ) { name seating } }",
    "schemaId" : "race_track",
    "question" : "Show names and seatings, ordered by seating for all tracks opened after 2000."
  },
  {
    "query" : "query { track ( order_by : { seating : asc } , where : { year_opened : { _gt : 2000.0 } } ) { name seating } }",
    "schemaId" : "race_track",
    "question" : "What are the names and seatings for all tracks opened after 2000, ordered by seating?"
  },
  {
    "query" : "query { track ( limit : 1 , order_by : { year_opened : desc } ) { name location seating } }",
    "schemaId" : "race_track",
    "question" : "What is the name, location and seating for the most recently opened track?"
  },
  {
    "query" : "query { track ( limit : 1 , order_by : { year_opened : desc } ) { name location seating } }",
    "schemaId" : "race_track",
    "question" : "Return the name, location, and seating of the track that was opened in the most recent year."
  },
  {
    "query" : "query { track_aggregate { aggregate { min { seating } max { seating } avg { seating } } } }",
    "schemaId" : "race_track",
    "question" : "What is the minimum, maximum, and average seating for all tracks."
  },
  {
    "query" : "query { track_aggregate { aggregate { min { seating } max { seating } avg { seating } } } }",
    "schemaId" : "race_track",
    "question" : "Return the minimum, maximum, and average seating across all tracks."
  },
  {
    "query" : "query { track ( distinct_on : location ) { location } }",
    "schemaId" : "race_track",
    "question" : "What are distinct locations where tracks are located?"
  },
  {
    "query" : "query { track ( distinct_on : location ) { location } }",
    "schemaId" : "race_track",
    "question" : "Give the different locations of tracks."
  },
  {
    "query" : "query { race_aggregate { aggregate { count } } }",
    "schemaId" : "race_track",
    "question" : "How many races are there?"
  },
  {
    "query" : "query { race_aggregate { aggregate { count } } }",
    "schemaId" : "race_track",
    "question" : "Count the number of races."
  },
  {
    "query" : "query { race ( distinct_on : class ) { class } }",
    "schemaId" : "race_track",
    "question" : "What are the distinct classes that races can have?"
  },
  {
    "query" : "query { race ( distinct_on : class ) { class } }",
    "schemaId" : "race_track",
    "question" : "Return the different classes of races."
  },
  {
    "query" : "query { race { name class date } }",
    "schemaId" : "race_track",
    "question" : "Show name, class, and date for all races."
  },
  {
    "query" : "query { race { name class date } }",
    "schemaId" : "race_track",
    "question" : "What are the names, classes, and dates for all races?"
  },
  {
    "query" : "query { track ( where : { seating : { _gte : 4000.0 , _lte : 5000.0 } } ) { year_opened } }",
    "schemaId" : "race_track",
    "question" : "Show year where a track with a seating at least 5000 opened and a track with seating no more than 4000 opened."
  },
  {
    "query" : "query { track ( where : { seating : { _gte : 4000.0 , _lte : 5000.0 } } ) { year_opened } }",
    "schemaId" : "race_track",
    "question" : "What are the years of opening for tracks with seating between 4000 and 5000?"
  },
  {
    "query" : "query { race { name date track { name } } }",
    "schemaId" : "race_track",
    "question" : "Show the name and date for each race and its track name."
  },
  {
    "query" : "query { race { name date track { name } } }",
    "schemaId" : "race_track",
    "question" : "What are the names and dates of races, and the names of the tracks where they are held?"
  },
  {
    "query" : "query { railway_aggregate { aggregate { count } } }",
    "schemaId" : "railway",
    "question" : "How many railways are there?"
  },
  {
    "query" : "query { railway ( order_by : { builder : asc } ) { builder } }",
    "schemaId" : "railway",
    "question" : "List the builders of railways in ascending alphabetical order."
  },
  {
    "query" : "query { railway { wheels location } }",
    "schemaId" : "railway",
    "question" : "List the wheels and locations of the railways."
  },
  {
    "query" : "query { manager_aggregate ( where : { country : { _neq : \"Australia\t\" } } ) { aggregate { max { level } } } }",
    "schemaId" : "railway",
    "question" : "What is the maximum level of managers in countries that are not \"Australia\"?"
  },
  {
    "query" : "query { manager_aggregate { aggregate { avg { age } } } }",
    "schemaId" : "railway",
    "question" : "What is the average age for all managers?"
  },
  {
    "query" : "query { manager ( order_by : { level : asc } ) { name } }",
    "schemaId" : "railway",
    "question" : "What are the names of managers in ascending order of level?"
  },
  {
    "query" : "query { train { name arrival } }",
    "schemaId" : "railway",
    "question" : "What are the names and arrival times of trains?"
  },
  {
    "query" : "query { manager ( limit : 1 , order_by : { age : desc } ) { name } }",
    "schemaId" : "railway",
    "question" : "What is the name of the oldest manager?"
  },
  {
    "query" : "query { train { name railway { location } } }",
    "schemaId" : "railway",
    "question" : "Show the names of trains and locations of railways they are in."
  },
  {
    "query" : "query { railway ( where : { trains : { name : { _eq : \"Andaman Exp\" } } } ) { builder } }",
    "schemaId" : "railway",
    "question" : "Show the builder of railways associated with the trains named \"Andaman Exp\"."
  },
  {
    "query" : "query { manager ( distinct_on : country ) { country } }",
    "schemaId" : "railway",
    "question" : "Show the distinct countries of managers."
  },
  {
    "query" : "query { manager ( order_by : { level : desc } ) { working_year_starts } }",
    "schemaId" : "railway",
    "question" : "Show the working years of managers in descending order of their level."
  },
  {
    "query" : "query { manager ( where : { _or : [ { age : { _gt : 50 } } , { age : { _lt : 46 } } ] } ) { country } }",
    "schemaId" : "railway",
    "question" : "Show the countries that have managers of age above 50 or below 46."
  },
  {
    "query" : "query { restaurant { resname } }",
    "schemaId" : "restaurant_1",
    "question" : "Show me all the restaurants."
  },
  {
    "query" : "query { restaurant ( where : { resname : { _eq : \"Subway\" } } ) { address } }",
    "schemaId" : "restaurant_1",
    "question" : "What is the address of the restaurant Subway?"
  },
  {
    "query" : "query { restaurant ( where : { resname : { _eq : \"Subway\" } } ) { rating } }",
    "schemaId" : "restaurant_1",
    "question" : "What is the rating of the restaurant Subway?"
  },
  {
    "query" : "query { restaurant_type { restypename } }",
    "schemaId" : "restaurant_1",
    "question" : "List all restaurant types."
  },
  {
    "query" : "query { restaurant_type ( where : { restypename : { _eq : \"Sandwich\" } } ) { restypedescription } }",
    "schemaId" : "restaurant_1",
    "question" : "What is the description of the restaurant type Sandwich?"
  },
  {
    "query" : "query { restaurant ( limit : 1 , order_by : { rating : desc } ) { resname rating } }",
    "schemaId" : "restaurant_1",
    "question" : "Which restaurants have highest rating? List the restaurant name and its rating."
  },
  {
    "query" : "query { student ( where : { _and : { lname : { _eq : \"Smith\" } , fname : { _eq : \"Linda\" } } } ) { age } }",
    "schemaId" : "restaurant_1",
    "question" : "What is the age of student Linda Smith?"
  },
  {
    "query" : "query { student ( where : { _and : { lname : { _eq : \"Smith\" } , fname : { _eq : \"Linda\" } } } ) { sex } }",
    "schemaId" : "restaurant_1",
    "question" : "What is the gender of the student Linda Smith?"
  },
  {
    "query" : "query { student ( where : { major : { _eq : 600 } } ) { fname lname } }",
    "schemaId" : "restaurant_1",
    "question" : "List all students' first names and last names who majored in 600."
  },
  {
    "query" : "query { student ( where : { _and : { lname : { _eq : \"Smith\" } , fname : { _eq : \"Linda\" } } } ) { city_code } }",
    "schemaId" : "restaurant_1",
    "question" : "Which city does student Linda Smith live in?"
  },
  {
    "query" : "query { student_aggregate ( where : { advisor : { _eq : 1121 } } ) { aggregate { count } } }",
    "schemaId" : "restaurant_1",
    "question" : "Advisor 1121 has how many students?"
  },
  {
    "query" : "query { student ( where : { _and : { age : { _gt : 18 } , major : { _eq : 600 } } } ) { fname lname } }",
    "schemaId" : "restaurant_1",
    "question" : "Which student's age is older than 18 and is majoring in 600? List each student's first and last name."
  },
  {
    "query" : "query { student ( where : { _and : { major : { _neq : 600 } , sex : { _eq : \"F\" } , age : { _gt : 18 } } } ) { fname lname } }",
    "schemaId" : "restaurant_1",
    "question" : "List all female students age is older than 18 who is not majoring in 600. List students' first name and last name."
  },
  {
    "query" : "query { visits_restaurant_aggregate ( where : { _and : { student : { lname : { _eq : \"Smith\" } , fname : { _eq : \"Linda\" } } } } ) { aggregate { sum { spent } } } }",
    "schemaId" : "restaurant_1",
    "question" : "How long does student Linda Smith spend on the restaurant in total?"
  },
  {
    "query" : "query { player_aggregate { aggregate { count } } }",
    "schemaId" : "riding_club",
    "question" : "How many players are there?"
  },
  {
    "query" : "query { player ( order_by : { votes : asc } ) { player_name } }",
    "schemaId" : "riding_club",
    "question" : "List the names of players in ascending order of votes."
  },
  {
    "query" : "query { player { gender occupation } }",
    "schemaId" : "riding_club",
    "question" : "What are the gender and occupation of players?"
  },
  {
    "query" : "query { player ( where : { occupation : { _neq : \"Researcher\" } } ) { player_name residence } }",
    "schemaId" : "riding_club",
    "question" : "List the name and residence for players whose occupation is not \"Researcher\"."
  },
  {
    "query" : "query { player ( where : { _or : [ { residence : { _eq : \"Brandon\" } } , { residence : { _eq : \"Birtle\" } } ] } ) { sponsor_name } }",
    "schemaId" : "riding_club",
    "question" : "Show the names of sponsors of players whose residence is either \"Brandon\" or \"Birtle\"."
  },
  {
    "query" : "query { player ( limit : 1 , order_by : { votes : desc } ) { player_name } }",
    "schemaId" : "riding_club",
    "question" : "What is the name of the player with the largest number of votes?"
  },
  {
    "query" : "query { player { player_name player_coaches { coach { coach_name } } } }",
    "schemaId" : "riding_club",
    "question" : "Show the names of players and names of their coaches."
  },
  {
    "query" : "query { player ( where : { player_coaches : { coach : { rank : { _eq : 1 } } } } ) { player_name } }",
    "schemaId" : "riding_club",
    "question" : "Show the names of players coached by the rank 1 coach."
  },
  {
    "query" : "query { player ( where : { player_coaches : { starting_year : { _gt : 2011 } } } ) { player_name gender } }",
    "schemaId" : "riding_club",
    "question" : "Show the names and genders of players with a coach starting after 2011."
  },
  {
    "query" : "query { player ( order_by : { votes : desc } ) { player_name player_coaches { coach { coach_name } } } }",
    "schemaId" : "riding_club",
    "question" : "Show the names of players and names of their coaches in descending order of the votes of players."
  },
  {
    "query" : "query { roller_coaster_aggregate { aggregate { count } } }",
    "schemaId" : "roller_coaster",
    "question" : "How many roller coasters are there?"
  },
  {
    "query" : "query { roller_coaster ( order_by : { length : asc } ) { name } }",
    "schemaId" : "roller_coaster",
    "question" : "List the names of roller coasters by ascending order of length."
  },
  {
    "query" : "query { roller_coaster { length height } }",
    "schemaId" : "roller_coaster",
    "question" : "What are the lengths and heights of roller coasters?"
  },
  {
    "query" : "query { country ( where : { languages : { _neq : \"German\" } } ) { name } }",
    "schemaId" : "roller_coaster",
    "question" : "List the names of countries whose language is not \"German\"."
  },
  {
    "query" : "query { roller_coaster ( where : { _or : [ { length : { _gt : 3300.0 } } , { height : { _gt : 100.0 } } ] } ) { status } }",
    "schemaId" : "roller_coaster",
    "question" : "Show the statuses of roller coasters longer than 3300 or higher than 100."
  },
  {
    "query" : "query { roller_coaster ( limit : 1 , order_by : { length : desc } ) { speed } }",
    "schemaId" : "roller_coaster",
    "question" : "What are the speeds of the longest roller coaster?"
  },
  {
    "query" : "query { roller_coaster_aggregate { aggregate { avg { speed } } } }",
    "schemaId" : "roller_coaster",
    "question" : "What is the average speed of roller coasters?"
  },
  {
    "query" : "query { roller_coaster ( limit : 1 , order_by : { speed : desc } ) { park } }",
    "schemaId" : "roller_coaster",
    "question" : "Show the park of the roller coaster with the highest speed."
  },
  {
    "query" : "query { roller_coaster { name country { name } } }",
    "schemaId" : "roller_coaster",
    "question" : "Show the names of roller coasters and names of country they are in."
  },
  {
    "query" : "query { country ( limit : 1 , order_by : { roller_coasters_aggregate : { max : { height : desc_nulls_last } } } ) { name population } }",
    "schemaId" : "roller_coaster",
    "question" : "Show the name and population of the country that has the highest roller coaster."
  },
  {
    "query" : "query { actor_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many different last names do the actors and actresses have?"
  },
  {
    "query" : "query { actor_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of different last names actors have."
  },
  {
    "query" : "query { address ( where : { address : { _eq : \"1031 Daugavpils Parkway\" } } ) { phone postal_code } }",
    "schemaId" : "sakila_1",
    "question" : "What is the phone number and postal code of the address 1031 Daugavpils Parkway?"
  },
  {
    "query" : "query { address ( where : { address : { _eq : \"1031 Daugavpils Parkway\" } } ) { phone postal_code } }",
    "schemaId" : "sakila_1",
    "question" : "Give the phone and postal code corresponding to the address '1031 Daugavpils Parkway'."
  },
  {
    "query" : "query { address_aggregate ( where : { district : { _eq : \"California\" } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many addresses are in the district of California?"
  },
  {
    "query" : "query { address_aggregate ( where : { district : { _eq : \"California\" } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of addressed in the California district."
  },
  {
    "query" : "query { city_aggregate ( where : { country : { country : { _eq : \"Australia\" } } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many cities are in Australia?"
  },
  {
    "query" : "query { city_aggregate ( where : { country : { country : { _eq : \"Australia\" } } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of cities in Australia."
  },
  {
    "query" : "query { customer_aggregate ( where : { active : { _eq : true } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many customers have an active value of 1?"
  },
  {
    "query" : "query { customer_aggregate ( where : { active : { _eq : true } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of customers who are active."
  },
  {
    "query" : "query { film ( limit : 1 , order_by : { rental_rate : desc } ) { title rental_rate } }",
    "schemaId" : "sakila_1",
    "question" : "Which film has the highest rental rate? And what is the rate?"
  },
  {
    "query" : "query { film ( limit : 1 , order_by : { rental_rate : desc } ) { title rental_rate } }",
    "schemaId" : "sakila_1",
    "question" : "What are the title and rental rate of the film with the highest rental rate?"
  },
  {
    "query" : "query { payment_aggregate { aggregate { sum { amount } } } }",
    "schemaId" : "sakila_1",
    "question" : "What is the total amount of all payments?"
  },
  {
    "query" : "query { payment_aggregate { aggregate { sum { amount } } } }",
    "schemaId" : "sakila_1",
    "question" : "Return the sum of all payment amounts."
  },
  {
    "query" : "query { film_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many languages are in these films?"
  },
  {
    "query" : "query { film_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of different languages in these films."
  },
  {
    "query" : "query { film ( where : { rating : { _eq : \"R\" } } ) { title } }",
    "schemaId" : "sakila_1",
    "question" : "What are all the movies rated as R? List the titles."
  },
  {
    "query" : "query { film ( where : { rating : { _eq : \"R\" } } ) { title } }",
    "schemaId" : "sakila_1",
    "question" : "Return the titles of any movies with an R rating."
  },
  {
    "query" : "query { address ( where : { stores : { store_id : { _eq : 1 } } } ) { address } }",
    "schemaId" : "sakila_1",
    "question" : "Where is store 1 located?"
  },
  {
    "query" : "query { address ( where : { stores : { store_id : { _eq : 1 } } } ) { address } }",
    "schemaId" : "sakila_1",
    "question" : "Return the address of store 1."
  },
  {
    "query" : "query { store_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many stores are there?"
  },
  {
    "query" : "query { store_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of stores."
  },
  {
    "query" : "query { film_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many kinds of different ratings are listed?"
  },
  {
    "query" : "query { film_aggregate { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of different film ratings."
  },
  {
    "query" : "query { film ( where : { special_features : { _like : \"%Deleted Scenes%\" } } ) { title } }",
    "schemaId" : "sakila_1",
    "question" : "Which movies have 'Deleted Scenes' as a substring in the special feature?"
  },
  {
    "query" : "query { film ( where : { special_features : { _like : \"%Deleted Scenes%\" } } ) { title } }",
    "schemaId" : "sakila_1",
    "question" : "Return the titles of films that include 'Deleted Scenes' in their special feature section."
  },
  {
    "query" : "query { inventory_aggregate ( where : { store_id : { _eq : 1 } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "How many items in inventory does store 1 have?"
  },
  {
    "query" : "query { inventory_aggregate ( where : { store_id : { _eq : 1 } } ) { aggregate { count } } }",
    "schemaId" : "sakila_1",
    "question" : "Count the number of items store 1 has in stock."
  },
  {
    "query" : "query { payment ( limit : 1 , order_by : { payment_date : asc } ) { payment_date } }",
    "schemaId" : "sakila_1",
    "question" : "When did the first payment happen?"
  },
  {
    "query" : "query { payment ( limit : 1 , order_by : { payment_date : asc } ) { payment_date } }",
    "schemaId" : "sakila_1",
    "question" : "What was the date of the earliest payment?"
  },
  {
    "query" : "query { address ( where : { customers : { first_name : { _eq : \"LINDA\" } } } ) { address customers { email } } }",
    "schemaId" : "sakila_1",
    "question" : "Where does the customer with the first name Linda live? And what is her email?"
  },
  {
    "query" : "query { address ( where : { customers : { first_name : { _eq : \"LINDA\" } } } ) { address customers { email } } }",
    "schemaId" : "sakila_1",
    "question" : "Return the address and email of the customer with the first name Linda."
  },
  {
    "query" : "query { customer ( limit : 1 , order_by : { rentals_aggregate : { min : { rental_date : asc } } } ) { first_name last_name } }",
    "schemaId" : "sakila_1",
    "question" : "What is the first name and the last name of the customer who made the earliest rental?"
  },
  {
    "query" : "query { customer ( limit : 1 , order_by : { rentals_aggregate : { min : { rental_date : asc } } } ) { first_name last_name } }",
    "schemaId" : "sakila_1",
    "question" : "Return the full name of the customer who made the first rental."
  },
  {
    "query" : "query { payment ( limit : 1 , order_by : { amount : desc } ) { amount } }",
    "schemaId" : "sakila_1",
    "question" : "What is the largest payment amount?"
  },
  {
    "query" : "query { payment ( limit : 1 , order_by : { amount : desc } ) { amount } }",
    "schemaId" : "sakila_1",
    "question" : "Return the amount of the largest payment."
  },
  {
    "query" : "query { address ( where : { staffs : { first_name : { _eq : \"Elsa\" } } } ) { address } }",
    "schemaId" : "sakila_1",
    "question" : "Where does the staff member with the first name Elsa live?"
  },
  {
    "query" : "query { address ( where : { staffs : { first_name : { _eq : \"Elsa\" } } } ) { address } }",
    "schemaId" : "sakila_1",
    "question" : "Give the address of the staff member who has the first name Elsa."
  },
  {
    "query" : "query { driver_aggregate { aggregate { count } } }",
    "schemaId" : "school_bus",
    "question" : "How many drivers are there?"
  },
  {
    "query" : "query { driver { name home_city age } }",
    "schemaId" : "school_bus",
    "question" : "Show the name, home city, and age for all drivers."
  },
  {
    "query" : "query { driver ( order_by : { age : desc } ) { name } }",
    "schemaId" : "school_bus",
    "question" : "Show the name of drivers in descending order of age."
  },
  {
    "query" : "query { driver ( distinct_on : home_city ) { home_city } }",
    "schemaId" : "school_bus",
    "question" : "Show all different home cities."
  },
  {
    "query" : "query { driver ( where : { _and : { home_city : { _eq : \"Hartford\" } , age : { _gt : 40 } } } ) { party } }",
    "schemaId" : "school_bus",
    "question" : "Show the party with drivers from Hartford and drivers older than 40."
  },
  {
    "query" : "query { school { school school_buses { driver { name } } } }",
    "schemaId" : "school_bus",
    "question" : "Show the school name and driver name for all school buses."
  },
  {
    "query" : "query { school_bus_aggregate { aggregate { max { years_working } min { years_working } avg { years_working } } } }",
    "schemaId" : "school_bus",
    "question" : "What is the maximum, minimum and average years spent working on a school bus?"
  },
  {
    "query" : "query { driver_aggregate ( where : { _or : [ { home_city : { _eq : \"Hartford\" } } , { age : { _lt : 40 } } ] } ) { aggregate { count } } }",
    "schemaId" : "school_bus",
    "question" : "How many drivers are from Hartford city or younger than 40?"
  },
  {
    "query" : "query { driver ( where : { _and : { home_city : { _eq : \"Hartford\" } , age : { _lt : 40 } } } ) { name } }",
    "schemaId" : "school_bus",
    "question" : "List names for drivers from Hartford city and younger than 40."
  },
  {
    "query" : "query { driver ( limit : 1 , order_by : { school_buses_aggregate : { max : { years_working : desc_nulls_last } } } ) { name } }",
    "schemaId" : "school_bus",
    "question" : "find the name of driver who is driving the school bus with the longest working history."
  },
  {
    "query" : "query { school_aggregate { aggregate { count } } }",
    "schemaId" : "school_finance",
    "question" : "How many schools are there?"
  },
  {
    "query" : "query { school_aggregate { aggregate { count } } }",
    "schemaId" : "school_finance",
    "question" : "Count the number of schools."
  },
  {
    "query" : "query { school ( order_by : { school_name : asc } ) { school_name } }",
    "schemaId" : "school_finance",
    "question" : "Show all school names in alphabetical order."
  },
  {
    "query" : "query { school { school_name location mascot } }",
    "schemaId" : "school_finance",
    "question" : "List the name, location, mascot for all schools."
  },
  {
    "query" : "query { school_aggregate { aggregate { sum { enrollment } avg { enrollment } } } }",
    "schemaId" : "school_finance",
    "question" : "What are the total and average enrollment of all schools?"
  },
  {
    "query" : "query { school ( limit : 1 , order_by : { enrollment : asc } ) { school_name } }",
    "schemaId" : "school_finance",
    "question" : "List the name of the school with the smallest enrollment."
  },
  {
    "query" : "query { school_aggregate { aggregate { avg { enrollment } max { enrollment } min { enrollment } } } }",
    "schemaId" : "school_finance",
    "question" : "Show the average, maximum, minimum enrollment of all schools."
  },
  {
    "query" : "query { endowment_aggregate ( where : { school : { school_name : { _eq : \"Glenn\" } } } ) { aggregate { count } } }",
    "schemaId" : "school_finance",
    "question" : "How many donors have endowment for school named \"Glenn\"?"
  },
  {
    "query" : "query { endowment ( limit : 1 , order_by : { amount : desc } ) { amount donator_name } }",
    "schemaId" : "school_finance",
    "question" : "List the amount and donor name for the largest amount of donation."
  },
  {
    "query" : "query { budget_aggregate ( where : { _and : { year : { _lte : 2001 } , budgeted : { _gt : 3000 } } } ) { aggregate { count } } }",
    "schemaId" : "school_finance",
    "question" : "How many budgets are above 3000 in year 2001 or before?"
  },
  {
    "query" : "query { budget_aggregate ( where : { _and : { budgeted : { _gt : 3000 } , year : { _lte : 2001 } } } ) { aggregate { count } } }",
    "schemaId" : "school_finance",
    "question" : "Count the number of budgets in year 2001 or before whose budgeted amount is greater than 3000"
  },
  {
    "query" : "query { school ( where : { budgets : { year : { _gte : 2002 } } } ) { school_name budgets { budgeted invested } } }",
    "schemaId" : "school_finance",
    "question" : "Show each school name, its budgeted amount, and invested amount in year 2002 or after."
  },
  {
    "query" : "query { endowment ( distinct_on : donator_name ) { donator_name } }",
    "schemaId" : "school_finance",
    "question" : "Show all donor names."
  },
  {
    "query" : "query { budget_aggregate ( where : { school : { school_name : { _eq : \"Glenn\" } } } ) { aggregate { sum { budgeted } } } }",
    "schemaId" : "school_finance",
    "question" : "What is the total budget amount for school \"Glenn\" in all years?"
  },
  {
    "query" : "query { school ( order_by : { budgets_aggregate : { min : { total_budget_percent_invested : asc_nulls_last , total_budget_percent_budgeted : asc_nulls_last } } } , where : { _or : [ { budgets : { budgeted : { _gt : 6000 } } } , { budgets : { year : { _lt : 2003 } } } ] } ) { school_name mascot ihsaa_football_class } }",
    "schemaId" : "school_finance",
    "question" : "List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget."
  },
  {
    "query" : "query { school_aggregate { aggregate { count } } }",
    "schemaId" : "school_player",
    "question" : "How many schools are there?"
  },
  {
    "query" : "query { school_aggregate { aggregate { count } } }",
    "schemaId" : "school_player",
    "question" : "Count the number of schools."
  },
  {
    "query" : "query { school ( order_by : { enrollment : asc } ) { location } }",
    "schemaId" : "school_player",
    "question" : "List the locations of schools in ascending order of enrollment."
  },
  {
    "query" : "query { school ( order_by : { enrollment : asc } ) { location } }",
    "schemaId" : "school_player",
    "question" : "What is the list of school locations sorted in ascending order of school enrollment?"
  },
  {
    "query" : "query { school ( order_by : { founded : desc } ) { location } }",
    "schemaId" : "school_player",
    "question" : "List the locations of schools in descending order of founded year."
  },
  {
    "query" : "query { school ( order_by : { founded : desc } ) { location } }",
    "schemaId" : "school_player",
    "question" : "What is the list of school locations sorted in descending order of school foundation year?"
  },
  {
    "query" : "query { school ( where : { denomination : { _neq : \"Catholic\" } } ) { enrollment } }",
    "schemaId" : "school_player",
    "question" : "What are the enrollments of schools whose denomination is not \"Catholic\"?"
  },
  {
    "query" : "query { school ( where : { denomination : { _neq : \"Catholic\" } } ) { enrollment } }",
    "schemaId" : "school_player",
    "question" : "List the enrollment for each school that does not have \"Catholic\" as denomination."
  },
  {
    "query" : "query { school_aggregate { aggregate { avg { enrollment } } } }",
    "schemaId" : "school_player",
    "question" : "What is the average enrollment of schools?"
  },
  {
    "query" : "query { school_aggregate { aggregate { avg { enrollment } } } }",
    "schemaId" : "school_player",
    "question" : "Take the average of the school enrollment."
  },
  {
    "query" : "query { player ( order_by : { team : asc } ) { team } }",
    "schemaId" : "school_player",
    "question" : "What are the teams of the players, sorted in ascending alphabetical order?"
  },
  {
    "query" : "query { player ( order_by : { team : asc } ) { team } }",
    "schemaId" : "school_player",
    "question" : "Find the team of each player and sort them in ascending alphabetical order."
  },
  {
    "query" : "query { player_aggregate { aggregate { count } } }",
    "schemaId" : "school_player",
    "question" : "How many different positions of players are there?"
  },
  {
    "query" : "query { player_aggregate { aggregate { count } } }",
    "schemaId" : "school_player",
    "question" : "Count the number of distinct player positions."
  },
  {
    "query" : "query { player ( limit : 1 , order_by : { age : desc } ) { team } }",
    "schemaId" : "school_player",
    "question" : "Find the team of the player of the highest age."
  },
  {
    "query" : "query { player ( limit : 1 , order_by : { age : desc } ) { team } }",
    "schemaId" : "school_player",
    "question" : "Which team has the oldest player?"
  },
  {
    "query" : "query { player ( limit : 5 , order_by : { age : desc } ) { team } }",
    "schemaId" : "school_player",
    "question" : "List the teams of the players with the top 5 largest ages."
  },
  {
    "query" : "query { player ( limit : 5 , order_by : { age : desc } ) { team } }",
    "schemaId" : "school_player",
    "question" : "What are the teams that have the 5 oldest players?"
  },
  {
    "query" : "query { player { team school { location } } }",
    "schemaId" : "school_player",
    "question" : "For each player, show the team and the location of school they belong to."
  },
  {
    "query" : "query { player { team school { location } } }",
    "schemaId" : "school_player",
    "question" : "What are the team and the location of school each player belongs to?"
  },
  {
    "query" : "query { school { location school_details { nickname } } }",
    "schemaId" : "school_player",
    "question" : "Show locations and nicknames of schools."
  },
  {
    "query" : "query { school { location school_details { nickname } } }",
    "schemaId" : "school_player",
    "question" : "What are the location and nickname of each school?"
  },
  {
    "query" : "query { school ( limit : 1 , order_by : { enrollment : desc } ) { school_colors } }",
    "schemaId" : "school_player",
    "question" : "List the school color of the school that has the largest enrollment."
  },
  {
    "query" : "query { school ( limit : 1 , order_by : { enrollment : desc } ) { school_colors } }",
    "schemaId" : "school_player",
    "question" : "What is the school color of the school with the largest enrollment?"
  },
  {
    "query" : "query { school_details ( where : { division : { _neq : \"Division 1\" } } ) { nickname } }",
    "schemaId" : "school_player",
    "question" : "Show the nicknames of schools that are not in division 1."
  },
  {
    "query" : "query { school_details ( where : { division : { _neq : \"Division 1\" } } ) { nickname } }",
    "schemaId" : "school_player",
    "question" : "What are the nicknames of schools whose division is not 1?"
  },
  {
    "query" : "query { scientists_aggregate { aggregate { count } } }",
    "schemaId" : "scientist_1",
    "question" : "Find the total number of scientists."
  },
  {
    "query" : "query { scientists_aggregate { aggregate { count } } }",
    "schemaId" : "scientist_1",
    "question" : "How many scientists are there?"
  },
  {
    "query" : "query { projects_aggregate { aggregate { sum { hours } } } }",
    "schemaId" : "scientist_1",
    "question" : "Find the total hours of all projects."
  },
  {
    "query" : "query { projects_aggregate { aggregate { sum { hours } } } }",
    "schemaId" : "scientist_1",
    "question" : "What is the total number of hours for all projects?"
  },
  {
    "query" : "query { assignedto_aggregate { aggregate { count } } }",
    "schemaId" : "scientist_1",
    "question" : "How many different scientists are assigned to any project?"
  },
  {
    "query" : "query { assignedto_aggregate { aggregate { count } } }",
    "schemaId" : "scientist_1",
    "question" : "Count the number of different scientists assigned to any project."
  },
  {
    "query" : "query { projects_aggregate { aggregate { count } } }",
    "schemaId" : "scientist_1",
    "question" : "Find the number of distinct projects."
  },
  {
    "query" : "query { projects_aggregate { aggregate { count } } }",
    "schemaId" : "scientist_1",
    "question" : "How many different projects are there?"
  },
  {
    "query" : "query { projects_aggregate { aggregate { avg { hours } } } }",
    "schemaId" : "scientist_1",
    "question" : "Find the average hours of all projects."
  },
  {
    "query" : "query { projects_aggregate { aggregate { avg { hours } } } }",
    "schemaId" : "scientist_1",
    "question" : "What is the average hours across all projects?"
  },
  {
    "query" : "query { projects ( limit : 1 , order_by : { hours : desc } ) { name } }",
    "schemaId" : "scientist_1",
    "question" : "Find the name of project that continues for the longest time."
  },
  {
    "query" : "query { projects ( limit : 1 , order_by : { hours : desc } ) { name } }",
    "schemaId" : "scientist_1",
    "question" : "What is the name of the project with the most hours?"
  },
  {
    "query" : "query { projects ( where : { hours : { _gte : 100 , _lte : 300 } } ) { name } }",
    "schemaId" : "scientist_1",
    "question" : "Find the name of projects that require between 100 and 300 hours of work."
  },
  {
    "query" : "query { projects ( where : { hours : { _gte : 100 , _lte : 300 } } ) { name } }",
    "schemaId" : "scientist_1",
    "question" : "What are the names of projects that require between 100 and 300 hours?"
  },
  {
    "query" : "query { scientists ( order_by : { name : asc } ) { name } }",
    "schemaId" : "scientist_1",
    "question" : "List the names of all scientists sorted in alphabetical order."
  },
  {
    "query" : "query { scientists ( order_by : { name : asc } ) { name } }",
    "schemaId" : "scientist_1",
    "question" : "What are the names of all the scientists in alphabetical order?"
  },
  {
    "query" : "query { scientists { name } }",
    "schemaId" : "scientist_1",
    "question" : "Find the name of scientists who are assigned to some project."
  },
  {
    "query" : "query { scientists { name } }",
    "schemaId" : "scientist_1",
    "question" : "What are the names of scientists who are assigned to any project?"
  },
  {
    "query" : "query { assignedto ( order_by : { projectByProject : { name : asc } , scientistByScientist : { name : asc } } ) { scientistByScientist { name } projectByProject { name hours } } }",
    "schemaId" : "scientist_1",
    "question" : "List all the scientists' names, their projects' names, and the hours worked by that scientist on each project, in alphabetical order of project name, and then scientist name."
  },
  {
    "query" : "query { assignedto ( order_by : { projectByProject : { name : asc } , scientistByScientist : { name : asc } } ) { scientistByScientist { name } projectByProject { name hours } } }",
    "schemaId" : "scientist_1",
    "question" : "What are the names of each scientist, the names of the projects that they work on, and the hours for each of those projects, listed in alphabetical order by project name, then scientist name."
  },
  {
    "query" : "query { captain_aggregate { aggregate { count } } }",
    "schemaId" : "ship_1",
    "question" : "How many different captain ranks are there?"
  },
  {
    "query" : "query { captain_aggregate { aggregate { count } } }",
    "schemaId" : "ship_1",
    "question" : "Count the number of different ranks of captain."
  },
  {
    "query" : "query { captain ( order_by : { age : desc } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "Sort all captain names by their ages from old to young."
  },
  {
    "query" : "query { captain ( order_by : { age : desc } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "What are the names of captains, sorted by age descending?"
  },
  {
    "query" : "query { captain { name class rank } }",
    "schemaId" : "ship_1",
    "question" : "Find the name, class and rank of all captains."
  },
  {
    "query" : "query { captain { name class rank } }",
    "schemaId" : "ship_1",
    "question" : "What are the names, classes, and ranks of all captains?"
  },
  {
    "query" : "query { captain ( where : { _or : [ { rank : { _eq : \"Midshipman\" } } , { rank : { _eq : \"Lieutenant\" } } ] } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "Find the name of captains whose rank are either Midshipman or Lieutenant."
  },
  {
    "query" : "query { captain ( where : { _or : [ { rank : { _eq : \"Midshipman\" } } , { rank : { _eq : \"Lieutenant\" } } ] } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "What are the names of captains that have either the rank Midshipman or Lieutenant?"
  },
  {
    "query" : "query { captain ( limit : 1 , order_by : { age : asc } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "What is the name of the youngest captain?"
  },
  {
    "query" : "query { captain ( limit : 1 , order_by : { age : asc } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "Return the name of the youngest captain."
  },
  {
    "query" : "query { ship_aggregate { aggregate { count } } }",
    "schemaId" : "ship_1",
    "question" : "how many ships are there?"
  },
  {
    "query" : "query { ship_aggregate { aggregate { count } } }",
    "schemaId" : "ship_1",
    "question" : "Count the number of ships."
  },
  {
    "query" : "query { ship ( limit : 1 , order_by : { built_year : desc } ) { name type flag } }",
    "schemaId" : "ship_1",
    "question" : "Find the name, type, and flag of the ship that is built in the most recent year."
  },
  {
    "query" : "query { ship ( limit : 1 , order_by : { built_year : desc } ) { name type flag } }",
    "schemaId" : "ship_1",
    "question" : "What is the name, type, and flag of the ship that was built in the most recent year?"
  },
  {
    "query" : "query { ship ( order_by : { built_year : asc , class : asc } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "List all ship names in the order of built year and class."
  },
  {
    "query" : "query { ship ( order_by : { built_year : asc , class : asc } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "What are the names of ships, ordered by year they were built and their class?"
  },
  {
    "query" : "query { ship ( limit : 1 , order_by : { captains_aggregate : { min : { age : asc } } } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "Find the name of the ship that is steered by the youngest captain."
  },
  {
    "query" : "query { ship ( limit : 1 , order_by : { captains_aggregate : { min : { age : asc } } } ) { name } }",
    "schemaId" : "ship_1",
    "question" : "What is the name of the ship that is commanded by the youngest captain?"
  },
  {
    "query" : "query { ship_aggregate { aggregate { count } } }",
    "schemaId" : "ship_mission",
    "question" : "How many ships are there?"
  },
  {
    "query" : "query { ship_aggregate { aggregate { count } } }",
    "schemaId" : "ship_mission",
    "question" : "What is the number of ships?"
  },
  {
    "query" : "query { ship ( order_by : { tonnage : asc } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "List the name of ships in ascending order of tonnage."
  },
  {
    "query" : "query { ship ( order_by : { tonnage : asc } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "what are the names of the ships ordered by ascending tonnage?"
  },
  {
    "query" : "query { ship { type nationality } }",
    "schemaId" : "ship_mission",
    "question" : "What are the type and nationality of ships?"
  },
  {
    "query" : "query { ship { type nationality } }",
    "schemaId" : "ship_mission",
    "question" : "What are the types and nationalities of every ship?"
  },
  {
    "query" : "query { ship ( where : { nationality : { _neq : \"United States\" } } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "List the name of ships whose nationality is not \"United States\"."
  },
  {
    "query" : "query { ship ( where : { nationality : { _neq : \"United States\" } } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "What are the names of the ships that are not from the United States?"
  },
  {
    "query" : "query { ship ( where : { _or : [ { nationality : { _eq : \"United States\" } } , { nationality : { _eq : \"United Kingdom\" } } ] } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "Show the name of ships whose nationality is either United States or United Kingdom."
  },
  {
    "query" : "query { ship ( where : { _or : [ { nationality : { _eq : \"United States\" } } , { nationality : { _eq : \"United Kingdom\" } } ] } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "What are the names of the ships  that are from either the US or the UK?"
  },
  {
    "query" : "query { ship ( limit : 1 , order_by : { tonnage : desc } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "What is the name of the ship with the largest tonnage?"
  },
  {
    "query" : "query { ship ( limit : 1 , order_by : { tonnage : desc } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "What is the ship with the largest amount of tonnage called?"
  },
  {
    "query" : "query { mission { code fate ship { name } } }",
    "schemaId" : "ship_mission",
    "question" : "Show codes and fates of missions, and names of ships involved."
  },
  {
    "query" : "query { mission { code fate ship { name } } }",
    "schemaId" : "ship_mission",
    "question" : "What are the mission codes, fates, and names of the ships involved?"
  },
  {
    "query" : "query { ship ( where : { missions : { launched_year : { _gt : 1928 } } } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "Show names of ships involved in a mission launched after 1928."
  },
  {
    "query" : "query { ship ( where : { missions : { launched_year : { _gt : 1928 } } } ) { name } }",
    "schemaId" : "ship_mission",
    "question" : "What are the names of ships that were involved in a mission launched after 1928?"
  },
  {
    "query" : "query { mission ( where : { ship : { nationality : { _eq : \"United States\" } } } , distinct_on : fate ) { fate } }",
    "schemaId" : "ship_mission",
    "question" : "Show the distinct fate of missions that involve ships with nationality \"United States\""
  },
  {
    "query" : "query { mission ( where : { ship : { nationality : { _eq : \"United States\" } } } , distinct_on : fate ) { fate } }",
    "schemaId" : "ship_mission",
    "question" : "What are the different fates of the mission that involved ships from the United States?"
  },
  {
    "query" : "query { branch ( order_by : { open_year : asc } ) { name address_road city } }",
    "schemaId" : "shop_membership",
    "question" : "Show name, address road, and city for all branches sorted by open year."
  },
  {
    "query" : "query { branch ( order_by : { open_year : asc } ) { name address_road city } }",
    "schemaId" : "shop_membership",
    "question" : "What are the names, address roads, and cities of the branches ordered by opening year?"
  },
  {
    "query" : "query { branch ( limit : 3 , order_by : { membership_amount : desc } ) { name } }",
    "schemaId" : "shop_membership",
    "question" : "What are names for top three branches with most number of membership?"
  },
  {
    "query" : "query { branch ( limit : 3 , order_by : { membership_amount : desc } ) { name } }",
    "schemaId" : "shop_membership",
    "question" : "What are the names for the 3 branches that have the most memberships?"
  },
  {
    "query" : "query { branch ( where : { membership_amount : { _gte : \"100\" } } , distinct_on : city ) { city } }",
    "schemaId" : "shop_membership",
    "question" : "Show all distinct city where branches with at least 100 memberships are located."
  },
  {
    "query" : "query { branch ( where : { membership_amount : { _gte : \"100\" } } , distinct_on : city ) { city } }",
    "schemaId" : "shop_membership",
    "question" : "What are the different cities that have more than 100 memberships?"
  },
  {
    "query" : "query { branch_aggregate ( where : { _or : [ { open_year : { _eq : \"2011\" } } , { city : { _eq : \"London\" } } ] } ) { aggregate { min { membership_amount } max { membership_amount } } } }",
    "schemaId" : "shop_membership",
    "question" : "Show minimum and maximum amount of memberships for all branches opened in 2011 or located at city London."
  },
  {
    "query" : "query { branch_aggregate ( where : { _or : [ { open_year : { _eq : \"2011\" } } , { city : { _eq : \"London\" } } ] } ) { aggregate { min { membership_amount } max { membership_amount } } } }",
    "schemaId" : "shop_membership",
    "question" : "What are the minimum and maximum membership amounts for all branches that either opened in 2011 or are located in London?"
  },
  {
    "query" : "query { member_aggregate { aggregate { count } } }",
    "schemaId" : "shop_membership",
    "question" : "How many different levels do members have?"
  },
  {
    "query" : "query { member_aggregate { aggregate { count } } }",
    "schemaId" : "shop_membership",
    "question" : "What are the different membership levels?"
  },
  {
    "query" : "query { member ( order_by : { level : desc } ) { card_number name hometown } }",
    "schemaId" : "shop_membership",
    "question" : "Show card number, name, and hometown for all members in a descending order of level."
  },
  {
    "query" : "query { member ( order_by : { level : desc } ) { card_number name hometown } }",
    "schemaId" : "shop_membership",
    "question" : "What are the card numbers, names, and hometowns of every member ordered by descending level?"
  },
  {
    "query" : "query { member ( where : { membership_register_branches : { register_year : { _eq : \"2016\" } } } ) { name hometown } }",
    "schemaId" : "shop_membership",
    "question" : "Show the member name and hometown who registered a branch in 2016."
  },
  {
    "query" : "query { member ( where : { membership_register_branches : { register_year : { _eq : \"2016\" } } } ) { name hometown } }",
    "schemaId" : "shop_membership",
    "question" : "What are the member names and hometowns of those who registered at a branch in 2016?"
  },
  {
    "query" : "query { branch ( where : { _and : { membership_amount : { _gt : \"100\" } , open_year : { _eq : \"2001\" } } } ) { city } }",
    "schemaId" : "shop_membership",
    "question" : "Show all city with a branch opened in 2001 and a branch with more than 100 membership."
  },
  {
    "query" : "query { branch ( where : { _and : { membership_amount : { _gt : \"100\" } , open_year : { _eq : \"2001\" } } } ) { city } }",
    "schemaId" : "shop_membership",
    "question" : "What are the cities that have a branch that opened in 2001 and a branch with more than 100 members?"
  },
  {
    "query" : "query { purchase_aggregate ( where : { _and : { year : { _eq : \"2018\" } , branch : { city : { _eq : \"London\" } } } } ) { aggregate { sum { total_pounds } } } }",
    "schemaId" : "shop_membership",
    "question" : "What is the sum of total pounds of purchase in year 2018 for all branches in London?"
  },
  {
    "query" : "query { purchase_aggregate ( where : { _and : { year : { _eq : \"2018\" } , branch : { city : { _eq : \"London\" } } } } ) { aggregate { sum { total_pounds } } } }",
    "schemaId" : "shop_membership",
    "question" : "How many total pounds were purchased in the year 2018 at all London branches?"
  },
  {
    "query" : "query { purchase_aggregate ( where : { member : { level : { _eq : 6 } } } ) { aggregate { count } } }",
    "schemaId" : "shop_membership",
    "question" : "What is the total number of purchases for members with level 6?"
  },
  {
    "query" : "query { purchase_aggregate ( where : { member : { level : { _eq : 6 } } } ) { aggregate { count } } }",
    "schemaId" : "shop_membership",
    "question" : "What are the total purchases for members rated at level 6?"
  },
  {
    "query" : "query { member ( where : { hometown : { _like : \"%Kentucky%\" } } ) { card_number } }",
    "schemaId" : "shop_membership",
    "question" : "list the card number of all members whose hometown address includes word \"Kentucky\"."
  },
  {
    "query" : "query { member ( where : { hometown : { _like : \"%Kentucky%\" } } ) { card_number } }",
    "schemaId" : "shop_membership",
    "question" : "What are the card numbers of members from Kentucky?"
  },
  {
    "query" : "query { savings_aggregate ( where : { account : { name : { _neq : \"Brown\" } } } ) { aggregate { sum { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the total savings balance of all accounts except the account with name ‘Brown’."
  },
  {
    "query" : "query { savings_aggregate ( where : { account : { name : { _neq : \"Brown\" } } } ) { aggregate { sum { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "What is the total balance of savings accounts not belonging to someone with the name Brown?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "small_bank_1",
    "question" : "How many accounts are there in total?"
  },
  {
    "query" : "query { accounts_aggregate { aggregate { count } } }",
    "schemaId" : "small_bank_1",
    "question" : "Count the number of accounts."
  },
  {
    "query" : "query { checking_aggregate { aggregate { sum { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "What is the total checking balance in all accounts?"
  },
  {
    "query" : "query { checking_aggregate { aggregate { sum { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the total balance across checking accounts."
  },
  {
    "query" : "query { checking_aggregate { aggregate { avg { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the average checking balance."
  },
  {
    "query" : "query { checking_aggregate { aggregate { avg { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "What is the average balance in checking accounts?"
  },
  {
    "query" : "query { checking ( where : { account : { name : { _like : \"%ee%\" } } } ) { balance } }",
    "schemaId" : "small_bank_1",
    "question" : "What is the checking balance of the account whose owner’s name contains the substring ‘ee’?"
  },
  {
    "query" : "query { checking ( where : { account : { name : { _like : \"%ee%\" } } } ) { balance } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the balance of the checking account belonging to an owner whose name contains 'ee'."
  },
  {
    "query" : "query { checking ( where : { account : { name : { _eq : \"Brown\" } } } ) { balance account { savings { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the checking balance and saving balance in the Brown’s account."
  },
  {
    "query" : "query { checking ( where : { account : { name : { _eq : \"Brown\" } } } ) { balance account { savings { balance } } } }",
    "schemaId" : "small_bank_1",
    "question" : "What are the checking and savings balances in accounts belonging to Brown?"
  },
  {
    "query" : "query { accounts ( order_by : { name : asc } ) { name } }",
    "schemaId" : "small_bank_1",
    "question" : "List all customers’ names in the alphabetical order."
  },
  {
    "query" : "query { accounts ( order_by : { name : asc } ) { name } }",
    "schemaId" : "small_bank_1",
    "question" : "What are the names of all the customers in alphabetical order?"
  },
  {
    "query" : "query { savings ( limit : 1 , order_by : { account : { checkings_aggregate : { max : { balance : desc } } } } ) { balance } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the saving balance of the account with the highest checking balance."
  },
  {
    "query" : "query { savings ( limit : 1 , order_by : { account : { checkings_aggregate : { max : { balance : desc } } } } ) { balance } }",
    "schemaId" : "small_bank_1",
    "question" : "What is the savings balance of the account belonging to the customer with the highest checking balance?"
  },
  {
    "query" : "query { checking { balance account { savings { balance } } account { name } } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the name, checking balance and saving balance of all accounts in the bank."
  },
  {
    "query" : "query { checking { balance account { savings { balance } } account { name } } }",
    "schemaId" : "small_bank_1",
    "question" : "What are the names, checking balances, and savings balances for all customers?"
  },
  {
    "query" : "query { accounts ( limit : 3 , order_by : { savings_aggregate : { max : { balance : desc_nulls_last } } } ) { name savings { balance } } }",
    "schemaId" : "small_bank_1",
    "question" : "Find the name and savings balance of the top 3 accounts with the highest saving balance sorted by savings balance in descending order."
  },
  {
    "query" : "query { accounts ( limit : 3 , order_by : { savings_aggregate : { max : { balance : desc_nulls_last } } } ) { name savings { balance } } }",
    "schemaId" : "small_bank_1",
    "question" : "What are names and savings balances of the three accounts with the highest savings balances?"
  },
  {
    "query" : "query { country { name leagues { name } } }",
    "schemaId" : "soccer_1",
    "question" : "List all country and league names."
  },
  {
    "query" : "query { country_aggregate ( where : { name : { _eq : \"England\" } } ) { aggregate { count } } }",
    "schemaId" : "soccer_1",
    "question" : "How many leagues are there in England?"
  },
  {
    "query" : "query { player_aggregate { aggregate { avg { weight } } } }",
    "schemaId" : "soccer_1",
    "question" : "What is the average weight of all players?"
  },
  {
    "query" : "query { player_aggregate { aggregate { max { weight } min { weight } } } }",
    "schemaId" : "soccer_1",
    "question" : "What is the maximum and minimum height of all players?"
  },
  {
    "query" : "query { player ( where : { _and : { player_attributes : { crossing : { _gt : 90 } , preferred_foot : { _eq : \"right\" } } } } , distinct_on : player_name ) { player_name } }",
    "schemaId" : "soccer_1",
    "question" : "List the names of all players who have a crossing score higher than 90 and prefer their right foot."
  },
  {
    "query" : "query { player ( where : { _and : { player_attributes : { overall_rating : { _gte : 85 , _lte : 90 } , preferred_foot : { _eq : \"left\" } } } } , distinct_on : player_name ) { player_name } }",
    "schemaId" : "soccer_1",
    "question" : "List the names of all left-footed players who have overall rating between 85 and 90."
  },
  {
    "query" : "query { player_attributes ( limit : 3 , order_by : { overall_rating : desc } ) { player { player_name } } }",
    "schemaId" : "soccer_1",
    "question" : "Who are the top 3 players in terms of overall rating?"
  },
  {
    "query" : "query { college_aggregate { aggregate { sum { enr } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the total enrollment number of all colleges?"
  },
  {
    "query" : "query { college_aggregate { aggregate { sum { enr } } } }",
    "schemaId" : "soccer_2",
    "question" : "How many students are enrolled in college?"
  },
  {
    "query" : "query { college_aggregate { aggregate { avg { enr } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the average enrollment number?"
  },
  {
    "query" : "query { college_aggregate { aggregate { avg { enr } } } }",
    "schemaId" : "soccer_2",
    "question" : "How many students, on average, does each college have enrolled?"
  },
  {
    "query" : "query { college_aggregate { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many colleges in total?"
  },
  {
    "query" : "query { college_aggregate { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many different colleges are there?"
  },
  {
    "query" : "query { player_aggregate ( where : { hs : { _gt : 1000 } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many players have more than 1000 hours of training?"
  },
  {
    "query" : "query { player_aggregate ( where : { hs : { _gt : 1000 } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many different players trained for more than 1000 hours?"
  },
  {
    "query" : "query { college_aggregate ( where : { enr : { _gt : 15000 } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many colleges has more than 15000 students?"
  },
  {
    "query" : "query { college_aggregate ( where : { enr : { _gt : 15000 } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the number of colleges with a student population greater than 15000?"
  },
  {
    "query" : "query { player_aggregate { aggregate { avg { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the average training hours of all players?"
  },
  {
    "query" : "query { player_aggregate { aggregate { avg { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "How many hours do the players train on average?"
  },
  {
    "query" : "query { player ( where : { hs : { _lt : 1500 } } ) { pname hs } }",
    "schemaId" : "soccer_2",
    "question" : "Find the name and training hours of players whose hours are below 1500."
  },
  {
    "query" : "query { player ( where : { hs : { _lt : 1500 } } ) { pname hs } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names and number of hours spent training for each player who trains for less than 1500 hours?"
  },
  {
    "query" : "query { tryout_aggregate { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many different colleges do attend the tryout test?"
  },
  {
    "query" : "query { tryout_aggregate { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many different colleges were represented at tryouts?"
  },
  {
    "query" : "query { tryout_aggregate { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "What are the unique types of player positions in the tryout?"
  },
  {
    "query" : "query { tryout_aggregate { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "What are the different types of player positions?"
  },
  {
    "query" : "query { tryout_aggregate ( where : { decision : { _eq : \"yes\" } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many students got accepted after the tryout?"
  },
  {
    "query" : "query { tryout_aggregate ( where : { decision : { _eq : \"yes\" } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many students received a yes from tryouts?"
  },
  {
    "query" : "query { tryout_aggregate ( where : { ppos : { _eq : \"goalie\" } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "How many students whose are playing the role of goalie?"
  },
  {
    "query" : "query { tryout_aggregate ( where : { ppos : { _eq : \"goalie\" } } ) { aggregate { count } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the number of students playing as a goalie?"
  },
  {
    "query" : "query { player_aggregate { aggregate { avg { hs } max { hs } min { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "Find the max, average and min training hours of all players."
  },
  {
    "query" : "query { player_aggregate { aggregate { avg { hs } max { hs } min { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the average, maximum, and minimum for the number of hours spent training?"
  },
  {
    "query" : "query { college_aggregate ( where : { state : { _eq : \"FL\" } } ) { aggregate { avg { enr } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is average enrollment of colleges in the state FL?"
  },
  {
    "query" : "query { college_aggregate ( where : { state : { _eq : \"FL\" } } ) { aggregate { avg { enr } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is average number of students enrolled in Florida colleges?"
  },
  {
    "query" : "query { player ( where : { hs : { _gte : 500 , _lte : 1500 } } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names of players whose training hours is between 500 and 1500?"
  },
  {
    "query" : "query { player ( where : { hs : { _gte : 500 , _lte : 1500 } } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names of players who train between 500 and 1500 hours?"
  },
  {
    "query" : "query { player ( where : { pname : { _like : \"%a%\" } } , distinct_on : pname ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "Find the players whose names contain letter 'a'."
  },
  {
    "query" : "query { player ( where : { pname : { _like : \"%a%\" } } , distinct_on : pname ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "Who are the players that have names containing the letter a?"
  },
  {
    "query" : "query { college ( where : { _and : { enr : { _gt : 10000 } , state : { _eq : \"LA\" } } } ) { cname enr } }",
    "schemaId" : "soccer_2",
    "question" : "Find the name, enrollment of the colleges whose size is bigger than 10000 and location is in state LA."
  },
  {
    "query" : "query { college ( where : { _and : { enr : { _gt : 10000 } , state : { _eq : \"LA\" } } } ) { cname enr } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names and enrollment numbers for colleges that have more than 10000 enrolled and are located in Louisiana?"
  },
  {
    "query" : "query { college ( order_by : { enr : asc } ) { cname enr state } }",
    "schemaId" : "soccer_2",
    "question" : "List all information about college sorted by enrollment number in the ascending order."
  },
  {
    "query" : "query { college ( order_by : { enr : asc } ) { cname enr state } }",
    "schemaId" : "soccer_2",
    "question" : "What information do you have on colleges sorted by increasing enrollment numbers?"
  },
  {
    "query" : "query { college ( order_by : { cname : asc } , where : { enr : { _gt : 18000 } } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "List the name of the colleges whose enrollment is greater 18000 sorted by the college's name."
  },
  {
    "query" : "query { college ( order_by : { cname : asc } , where : { enr : { _gt : 18000 } } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "What is the name of every college in alphabetical order that has more than 18000 students enrolled?"
  },
  {
    "query" : "query { player ( order_by : { hs : desc } , where : { ycard : { _eq : \"yes\" } } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "Find the name of players whose card is yes in the descending order of training hours."
  },
  {
    "query" : "query { player ( order_by : { hs : desc } , where : { ycard : { _eq : \"yes\" } } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the name of the players who received a card in descending order of the hours of training?"
  },
  {
    "query" : "query { tryout ( order_by : { cname : asc } , distinct_on : cname ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "Find the name of different colleges involved in the tryout in alphabetical order."
  },
  {
    "query" : "query { tryout ( order_by : { cname : asc } , distinct_on : cname ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the different names of the colleges involved in the tryout in alphabetical order?"
  },
  {
    "query" : "query { college ( limit : 3 , order_by : { enr : desc } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names of schools with the top 3 largest size?"
  },
  {
    "query" : "query { college ( limit : 3 , order_by : { enr : desc } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names of the schools with the top 3 largest class sizes?"
  },
  {
    "query" : "query { college ( distinct_on : state ) { state } }",
    "schemaId" : "soccer_2",
    "question" : "Find the states where have some college students in tryout."
  },
  {
    "query" : "query { college ( distinct_on : state ) { state } }",
    "schemaId" : "soccer_2",
    "question" : "What are the different states that have students trying out?"
  },
  {
    "query" : "query { college ( where : { tryouts : { decision : { _eq : \"yes\" } } } , distinct_on : state ) { state } }",
    "schemaId" : "soccer_2",
    "question" : "Find the states where have some college students in tryout and their decisions are yes."
  },
  {
    "query" : "query { college ( where : { tryouts : { decision : { _eq : \"yes\" } } } , distinct_on : state ) { state } }",
    "schemaId" : "soccer_2",
    "question" : "What are the different states that had students successfully try out?"
  },
  {
    "query" : "query { player ( where : { tryouts : { decision : { _eq : \"yes\" } } } ) { pname tryouts { cname } } }",
    "schemaId" : "soccer_2",
    "question" : "Find the name and college of students whose decisions are yes in the tryout."
  },
  {
    "query" : "query { player ( where : { tryouts : { decision : { _eq : \"yes\" } } } ) { pname tryouts { cname } } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names of all the players who received a yes during tryouts, and also what are the names of their colleges?"
  },
  {
    "query" : "query { player ( order_by : { pname : asc } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "Find the name of all students who were in the tryout sorted in alphabetic order."
  },
  {
    "query" : "query { player ( order_by : { pname : asc } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names of all students who tried out in alphabetical order?"
  },
  {
    "query" : "query { player ( where : { tryouts : { decision : { _eq : \"yes\" } } } ) { pname hs } }",
    "schemaId" : "soccer_2",
    "question" : "Find the name and hours of the students whose tryout decision is yes."
  },
  {
    "query" : "query { player ( where : { tryouts : { decision : { _eq : \"yes\" } } } ) { pname hs } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names and hours spent practicing of every student who received a yes at tryouts?"
  },
  {
    "query" : "query { college ( where : { tryouts : { ppos : { _eq : \"striker\" } } } ) { state } }",
    "schemaId" : "soccer_2",
    "question" : "Find the states of the colleges that have students in the tryout who played in striker position."
  },
  {
    "query" : "query { college ( where : { tryouts : { ppos : { _eq : \"striker\" } } } ) { state } }",
    "schemaId" : "soccer_2",
    "question" : "What are the states of the colleges where students who tried out for the striker position attend?"
  },
  {
    "query" : "query { player ( where : { _and : { tryouts : { ppos : { _eq : \"striker\" } , decision : { _eq : \"yes\" } } } } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "Find the names of the students who are in the position of striker and got a yes tryout decision."
  },
  {
    "query" : "query { player ( where : { _and : { tryouts : { ppos : { _eq : \"striker\" } , decision : { _eq : \"yes\" } } } } ) { pname } }",
    "schemaId" : "soccer_2",
    "question" : "What are the names of all students who successfully tried out for the position of striker?"
  },
  {
    "query" : "query { player_aggregate ( where : { tryouts : { decision : { _eq : \"yes\" } } } ) { aggregate { avg { hs } max { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "Find the average and maximum hours for the students whose tryout decision is yes."
  },
  {
    "query" : "query { player_aggregate ( where : { tryouts : { decision : { _eq : \"yes\" } } } ) { aggregate { avg { hs } max { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the average and maximum number of hours students who made the team practiced?"
  },
  {
    "query" : "query { player_aggregate ( where : { tryouts : { decision : { _eq : \"no\" } } } ) { aggregate { avg { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "Find the average hours for the students whose tryout decision is no."
  },
  {
    "query" : "query { player_aggregate ( where : { tryouts : { decision : { _eq : \"no\" } } } ) { aggregate { avg { hs } } } }",
    "schemaId" : "soccer_2",
    "question" : "What is the average number of hours spent practicing for students who got rejected?"
  },
  {
    "query" : "query { tryout ( where : { player : { pname : { _like : \"D%\" } } } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "Which colleges do the tryout players whose name starts with letter D go to?"
  },
  {
    "query" : "query { tryout ( where : { player : { pname : { _like : \"D%\" } } } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "Which colleges does each player with a name that starts with the letter D  who tried out go to?"
  },
  {
    "query" : "query { tryout ( where : { _and : { ppos : { _eq : \"goalie\" } , decision : { _eq : \"yes\" } } } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "Which college has any student who is a goalie and succeeded in the tryout."
  },
  {
    "query" : "query { tryout ( where : { _and : { ppos : { _eq : \"goalie\" } , decision : { _eq : \"yes\" } } } ) { cname } }",
    "schemaId" : "soccer_2",
    "question" : "What college has a student who successfully made the team in the role of a goalie?"
  },
  {
    "query" : "query { products_aggregate { aggregate { count } } }",
    "schemaId" : "solvency_ii",
    "question" : "How many products are there?"
  },
  {
    "query" : "query { products ( order_by : { product_price : asc } ) { product_name } }",
    "schemaId" : "solvency_ii",
    "question" : "List the name of products in ascending order of price."
  },
  {
    "query" : "query { products { product_name product_type_code } }",
    "schemaId" : "solvency_ii",
    "question" : "What are the names and type codes of products?"
  },
  {
    "query" : "query { products ( where : { _or : [ { product_name : { _eq : \"Dining\" } } , { product_name : { _eq : \"Trading Policy\" } } ] } ) { product_price } }",
    "schemaId" : "solvency_ii",
    "question" : "Show the prices of the products named \"Dining\" or \"Trading Policy\"."
  },
  {
    "query" : "query { products_aggregate { aggregate { avg { product_price } } } }",
    "schemaId" : "solvency_ii",
    "question" : "What is the average price for products?"
  },
  {
    "query" : "query { products ( limit : 1 , order_by : { product_price : desc } ) { product_name } }",
    "schemaId" : "solvency_ii",
    "question" : "What is the name of the product with the highest price?"
  },
  {
    "query" : "query { club_aggregate { aggregate { count } } }",
    "schemaId" : "sports_competition",
    "question" : "How many clubs are there?"
  },
  {
    "query" : "query { club_aggregate { aggregate { count } } }",
    "schemaId" : "sports_competition",
    "question" : "What is the total number of clubs?"
  },
  {
    "query" : "query { club ( order_by : { region : asc } , distinct_on : region ) { region } }",
    "schemaId" : "sports_competition",
    "question" : "List the distinct region of clubs in ascending alphabetical order."
  },
  {
    "query" : "query { club ( order_by : { region : asc } , distinct_on : region ) { region } }",
    "schemaId" : "sports_competition",
    "question" : "What are the different regions of clubs in ascending alphabetical order?"
  },
  {
    "query" : "query { club_rank_aggregate { aggregate { avg { gold } } } }",
    "schemaId" : "sports_competition",
    "question" : "What is the average number of gold medals for clubs?"
  },
  {
    "query" : "query { club_rank_aggregate { aggregate { avg { gold } } } }",
    "schemaId" : "sports_competition",
    "question" : "What is the average number of gold medals for a club?"
  },
  {
    "query" : "query { competition { competition_type country } }",
    "schemaId" : "sports_competition",
    "question" : "What are the types and countries of competitions?"
  },
  {
    "query" : "query { competition { competition_type country } }",
    "schemaId" : "sports_competition",
    "question" : "What are the types of every competition and in which countries are they located?"
  },
  {
    "query" : "query { competition ( where : { competition_type : { _neq : \"Tournament\" } } , distinct_on : year ) { year } }",
    "schemaId" : "sports_competition",
    "question" : "What are the distinct years in which the competitions type is not \"Tournament\"?"
  },
  {
    "query" : "query { competition ( where : { competition_type : { _neq : \"Tournament\" } } , distinct_on : year ) { year } }",
    "schemaId" : "sports_competition",
    "question" : "What are the different years for all competitions that are not of type equal to tournament?"
  },
  {
    "query" : "query { club_rank_aggregate { aggregate { max { silver } min { silver } } } }",
    "schemaId" : "sports_competition",
    "question" : "What are the maximum and minimum number of silver medals for clubs."
  },
  {
    "query" : "query { club_rank_aggregate { aggregate { max { silver } min { silver } } } }",
    "schemaId" : "sports_competition",
    "question" : "What are the maximum and minimum number of silver medals for all the clubs?"
  },
  {
    "query" : "query { club_rank_aggregate ( where : { total : { _lt : 10.0 } } ) { aggregate { count } } }",
    "schemaId" : "sports_competition",
    "question" : "How many clubs have total medals less than 10?"
  },
  {
    "query" : "query { club_rank_aggregate ( where : { total : { _lt : 10.0 } } ) { aggregate { count } } }",
    "schemaId" : "sports_competition",
    "question" : "What is the total number of clubs that have less than 10 medals in total?"
  },
  {
    "query" : "query { club ( order_by : { start_year : asc } ) { name } }",
    "schemaId" : "sports_competition",
    "question" : "List all club names in ascending order of start year."
  },
  {
    "query" : "query { club ( order_by : { start_year : asc } ) { name } }",
    "schemaId" : "sports_competition",
    "question" : "What are the names of all the clubs starting with the oldest?"
  },
  {
    "query" : "query { club ( order_by : { name : desc } ) { name } }",
    "schemaId" : "sports_competition",
    "question" : "List all club names in descending alphabetical order."
  },
  {
    "query" : "query { club ( order_by : { name : desc } ) { name } }",
    "schemaId" : "sports_competition",
    "question" : "What are the names of all the clubs ordered in descending alphabetical order?"
  },
  {
    "query" : "query { club { name players { player_id } } }",
    "schemaId" : "sports_competition",
    "question" : "Please show the names and the players of clubs."
  },
  {
    "query" : "query { club { name players { player_id } } }",
    "schemaId" : "sports_competition",
    "question" : "What are the names and players of all the clubs?"
  },
  {
    "query" : "query { club ( where : { players : { position : { _eq : \"Right Wing\" } } } ) { name } }",
    "schemaId" : "sports_competition",
    "question" : "Show the names of clubs that have players with position \"Right Wing\"."
  },
  {
    "query" : "query { club ( where : { players : { position : { _eq : \"Right Wing\" } } } ) { name } }",
    "schemaId" : "sports_competition",
    "question" : "What are the names of the clubs that have players in the position of \"Right Wing\"?"
  },
  {
    "query" : "query { player_aggregate ( where : { club : { name : { _eq : \"AIB\" } } } ) { aggregate { avg { points } } } }",
    "schemaId" : "sports_competition",
    "question" : "What is the average points of players from club with name \"AIB\"."
  },
  {
    "query" : "query { player_aggregate ( where : { club : { name : { _eq : \"AIB\" } } } ) { aggregate { avg { points } } } }",
    "schemaId" : "sports_competition",
    "question" : "What is the average number of points for players from the \"AIB\" club?"
  },
  {
    "query" : "query { player_aggregate { aggregate { sum { points } } } }",
    "schemaId" : "sports_competition",
    "question" : "Show total points of all players."
  },
  {
    "query" : "query { player_aggregate { aggregate { sum { points } } } }",
    "schemaId" : "sports_competition",
    "question" : "What is the total number of points for all players?"
  },
  {
    "query" : "query { player_aggregate { aggregate { count } } }",
    "schemaId" : "sports_competition",
    "question" : "how many different positions are there?"
  },
  {
    "query" : "query { player_aggregate { aggregate { count } } }",
    "schemaId" : "sports_competition",
    "question" : "How many different position for players are listed?"
  },
  {
    "query" : "query { station { local_authority services } }",
    "schemaId" : "station_weather",
    "question" : "list the local authorities and services provided by all stations."
  },
  {
    "query" : "query { train ( order_by : { time : asc } ) { train_number name } }",
    "schemaId" : "station_weather",
    "question" : "show all train numbers and names ordered by their time from early to late."
  },
  {
    "query" : "query { train ( order_by : { time : asc } , where : { destination : { _eq : \"Chennai\" } } ) { time train_number } }",
    "schemaId" : "station_weather",
    "question" : "Give me the times and numbers of all trains that go to Chennai, ordered by time."
  },
  {
    "query" : "query { train_aggregate ( where : { name : { _like : \"%Express%\" } } ) { aggregate { count } } }",
    "schemaId" : "station_weather",
    "question" : "How many trains have 'Express' in their names?"
  },
  {
    "query" : "query { train ( where : { _and : { destination : { _eq : \"Guruvayur\" } , origin : { _eq : \"Chennai\" } } } ) { train_number time } }",
    "schemaId" : "station_weather",
    "question" : "Find the number and time of the train that goes from Chennai to Guruvayur."
  },
  {
    "query" : "query { weekly_weather_aggregate ( where : { station : { network_name : { _eq : \"Amersham\" } } } ) { aggregate { max { low_temperature } avg { precipitation } } } }",
    "schemaId" : "station_weather",
    "question" : "Give me the maximum low temperature and average precipitation at the Amersham station."
  },
  {
    "query" : "query { train ( where : { routes : { station : { local_authority : { _eq : \"Chiltern\" } } } } ) { name time } }",
    "schemaId" : "station_weather",
    "question" : "Find names and times of trains that run through stations for the local authority Chiltern."
  },
  {
    "query" : "query { station_aggregate { aggregate { count } } }",
    "schemaId" : "station_weather",
    "question" : "How many different services are provided by all stations?"
  },
  {
    "query" : "query { weekly_weather_aggregate { aggregate { min { low_temperature } max { wind_speed_mph } } } }",
    "schemaId" : "station_weather",
    "question" : "show the lowest low temperature and highest wind speed in miles per hour."
  },
  {
    "query" : "query { customers ( limit : 5 , order_by : { invoices_aggregate : { max : { invoice_date : desc_nulls_last } } } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "Find out 5 customers who most recently purchased something. List customers' first and last name."
  },
  {
    "query" : "query { customers ( limit : 5 , order_by : { invoices_aggregate : { max : { invoice_date : desc_nulls_last } } } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "What are the first and last names of the 5 customers who purchased something most recently?"
  },
  {
    "query" : "query { albums { title } }",
    "schemaId" : "store_1",
    "question" : "List every album's title."
  },
  {
    "query" : "query { albums { title } }",
    "schemaId" : "store_1",
    "question" : "What are the titles of all the albums?"
  },
  {
    "query" : "query { albums ( order_by : { title : asc } ) { title } }",
    "schemaId" : "store_1",
    "question" : "List every album ordered by album title in ascending order."
  },
  {
    "query" : "query { albums ( order_by : { title : asc } ) { title } }",
    "schemaId" : "store_1",
    "question" : "What are the titles of all the albums alphabetically ascending?"
  },
  {
    "query" : "query { albums ( order_by : { title : asc } , where : { title : { _like : \"A%\" } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "List every album whose title starts with A in alphabetical order."
  },
  {
    "query" : "query { albums ( order_by : { title : asc } , where : { title : { _like : \"A%\" } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "What are the titles of all albums that start with A in alphabetical order?"
  },
  {
    "query" : "query { customers ( limit : 10 , order_by : { invoices_aggregate : { min : { total : asc } } } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "List the customers first and last name of 10 least expensive invoices."
  },
  {
    "query" : "query { customers ( limit : 10 , order_by : { invoices_aggregate : { min : { total : asc } } } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "What are the first and last names of the customers with the 10 cheapest invoices?"
  },
  {
    "query" : "query { invoices_aggregate ( where : { _and : { billing_city : { _eq : \"Chicago\" } , billing_state : { _eq : \"IL\" } } } ) { aggregate { sum { total } } } }",
    "schemaId" : "store_1",
    "question" : "List total amount of  invoice from Chicago, IL."
  },
  {
    "query" : "query { invoices_aggregate ( where : { _and : { billing_state : { _eq : \"IL\" } , billing_city : { _eq : \"Chicago\" } } } ) { aggregate { sum { total } } } }",
    "schemaId" : "store_1",
    "question" : "What are the total amount of money in the invoices billed from Chicago, Illinois?"
  },
  {
    "query" : "query { invoices_aggregate ( where : { _and : { billing_state : { _eq : \"IL\" } , billing_city : { _eq : \"Chicago\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "List the number of invoices from Chicago, IL."
  },
  {
    "query" : "query { invoices_aggregate ( where : { _and : { billing_state : { _eq : \"IL\" } , billing_city : { _eq : \"Chicago\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many invoices were billed from Chicago, IL?"
  },
  {
    "query" : "query { invoices_aggregate ( where : { billing_state : { _eq : \"CA\" } } ) { nodes { billing_state } aggregate { count sum { total } } } }",
    "schemaId" : "store_1",
    "question" : "List the number of invoices and the invoice total from California."
  },
  {
    "query" : "query { invoices_aggregate ( where : { billing_state : { _eq : \"CA\" } } ) { nodes { billing_state } aggregate { count sum { total } } } }",
    "schemaId" : "store_1",
    "question" : "What is the number of invoices and total money billed in them from CA?"
  },
  {
    "query" : "query { albums ( where : { artist : { name : { _eq : \"Aerosmith\" } } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "List Aerosmith's albums."
  },
  {
    "query" : "query { albums ( where : { artist : { name : { _eq : \"Aerosmith\" } } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "What are the titles of all the Aerosmith albums?"
  },
  {
    "query" : "query { albums_aggregate ( where : { artist : { name : { _eq : \"Billy Cobham\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many albums does Billy Cobham has?"
  },
  {
    "query" : "query { albums_aggregate ( where : { artist : { name : { _eq : \"Billy Cobham\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many albums has Billy Cobam released?"
  },
  {
    "query" : "query { customers ( where : { _and : { last_name : { _eq : \"Martins\" } , first_name : { _eq : \"Eduardo\" } } } ) { company } }",
    "schemaId" : "store_1",
    "question" : "Eduardo Martins is a customer at which company?"
  },
  {
    "query" : "query { customers ( where : { _and : { first_name : { _eq : \"Eduardo\" } , last_name : { _eq : \"Martins\" } } } ) { company } }",
    "schemaId" : "store_1",
    "question" : "What is the company where Eduardo Martins is a customer?"
  },
  {
    "query" : "query { customers ( where : { _and : { last_name : { _eq : \"Gruber\" } , first_name : { _eq : \"Astrid\" } } } ) { email phone } }",
    "schemaId" : "store_1",
    "question" : "What is Astrid Gruber's email and phone number?"
  },
  {
    "query" : "query { customers ( where : { _and : { first_name : { _eq : \"Astrid\" } , last_name : { _eq : \"Gruber\" } } } ) { email phone } }",
    "schemaId" : "store_1",
    "question" : "What is the email and phone number of Astrid Gruber the customer?"
  },
  {
    "query" : "query { customers_aggregate ( where : { city : { _eq : \"Prague\" } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many customers live in Prague city?"
  },
  {
    "query" : "query { customers_aggregate ( where : { city : { _eq : \"Prague\" } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many customers live in the city of Prague?"
  },
  {
    "query" : "query { customers_aggregate ( where : { state : { _eq : \"CA\" } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many customers in state of CA?"
  },
  {
    "query" : "query { customers_aggregate ( where : { state : { _eq : \"CA\" } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many customers are from California?"
  },
  {
    "query" : "query { customers ( where : { _and : { last_name : { _eq : \"Almeida\" } , first_name : { _eq : \"Roberto\" } } } ) { country } }",
    "schemaId" : "store_1",
    "question" : "What country does Roberto Almeida live?"
  },
  {
    "query" : "query { customers ( where : { _and : { last_name : { _eq : \"Almeida\" } , first_name : { _eq : \"Roberto\" } } } ) { country } }",
    "schemaId" : "store_1",
    "question" : "In which country does Roberto Almeida?"
  },
  {
    "query" : "query { albums ( where : { artist : { name : { _like : \"%Led%\" } } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "List the name of albums that are released by aritist whose name has 'Led'"
  },
  {
    "query" : "query { albums ( where : { artist : { name : { _like : \"%Led%\" } } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "What is the title of the album that was released by the artist whose name has the phrase 'Led'?"
  },
  {
    "query" : "query { employees_aggregate ( where : { _and : { first_name : { _eq : \"Steve\" } , last_name : { _eq : \"Johnson\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many customers does Steve Johnson support?"
  },
  {
    "query" : "query { employees_aggregate ( where : { _and : { first_name : { _eq : \"Steve\" } , last_name : { _eq : \"Johnson\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "What is the count of customers that Steve Johnson supports?"
  },
  {
    "query" : "query { employees ( where : { _and : { last_name : { _eq : \"Edwards\" } , first_name : { _eq : \"Nancy\" } } } ) { title phone hire_date } }",
    "schemaId" : "store_1",
    "question" : "What is the title, phone and hire date of Nancy Edwards?"
  },
  {
    "query" : "query { employees ( where : { _and : { first_name : { _eq : \"Nancy\" } , last_name : { _eq : \"Edwards\" } } } ) { title phone hire_date } }",
    "schemaId" : "store_1",
    "question" : "What is the title, phone number and hire date for the employee named Nancy Edwards?"
  },
  {
    "query" : "query { employees ( where : { _and : { first_name : { _eq : \"Nancy\" } , last_name : { _eq : \"Edwards\" } } } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "find the full name of employees who report to Nancy Edwards?"
  },
  {
    "query" : "query { employees ( where : { _and : { first_name : { _eq : \"Nancy\" } , last_name : { _eq : \"Edwards\" } } } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "What is the first and last name of the employee who reports to Nancy Edwards?"
  },
  {
    "query" : "query { employees ( where : { _and : { first_name : { _eq : \"Nancy\" } , last_name : { _eq : \"Edwards\" } } } ) { address } }",
    "schemaId" : "store_1",
    "question" : "What is the address of employee Nancy Edwards?"
  },
  {
    "query" : "query { employees ( where : { _and : { first_name : { _eq : \"Nancy\" } , last_name : { _eq : \"Edwards\" } } } ) { address } }",
    "schemaId" : "store_1",
    "question" : "What is Nancy Edwards's address?"
  },
  {
    "query" : "query { employees_aggregate ( where : { country : { _eq : \"Canada\" } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many employees are living in Canada?"
  },
  {
    "query" : "query { employees_aggregate ( where : { country : { _eq : \"Canada\" } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many employees live in Canada?"
  },
  {
    "query" : "query { employees ( where : { _and : { first_name : { _eq : \"Nancy\" } , last_name : { _eq : \"Edwards\" } } } ) { phone } }",
    "schemaId" : "store_1",
    "question" : "What is employee Nancy Edwards's phone number?"
  },
  {
    "query" : "query { employees ( where : { _and : { last_name : { _eq : \"Edwards\" } , first_name : { _eq : \"Nancy\" } } } ) { phone } }",
    "schemaId" : "store_1",
    "question" : "What is the the phone number of Nancy Edwards?"
  },
  {
    "query" : "query { employees ( limit : 1 , order_by : { birth_date : desc } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "Who is the youngest employee in the company? List employee's first and last name."
  },
  {
    "query" : "query { employees ( limit : 1 , order_by : { birth_date : desc } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "What si the youngest employee's first and last name?"
  },
  {
    "query" : "query { employees ( limit : 10 , order_by : { hire_date : asc } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "List top 10 employee work longest in the company. List employee's first and last name."
  },
  {
    "query" : "query { employees ( limit : 10 , order_by : { hire_date : asc } ) { first_name last_name } }",
    "schemaId" : "store_1",
    "question" : "What are the first and last names of the top 10 longest-serving employees?"
  },
  {
    "query" : "query { customers_aggregate ( where : { _and : { first_name : { _eq : \"Lucas\" } , last_name : { _eq : \"Mancini\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many orders does Lucas Mancini has?"
  },
  {
    "query" : "query { customers_aggregate ( where : { _and : { first_name : { _eq : \"Lucas\" } , last_name : { _eq : \"Mancini\" } } } ) { aggregate { count } } }",
    "schemaId" : "store_1",
    "question" : "How many orders does Luca Mancini have in his invoices?"
  },
  {
    "query" : "query { invoices_aggregate ( where : { _and : { customer : { last_name : { _eq : \"Mancini\" } , first_name : { _eq : \"Lucas\" } } } } ) { aggregate { sum { total } } } }",
    "schemaId" : "store_1",
    "question" : "What is the total amount of money spent by Lucas Mancini?"
  },
  {
    "query" : "query { invoices_aggregate ( where : { _and : { customer : { last_name : { _eq : \"Mancini\" } , first_name : { _eq : \"Lucas\" } } } } ) { aggregate { sum { total } } } }",
    "schemaId" : "store_1",
    "question" : "How much money did Lucas Mancini spend?"
  },
  {
    "query" : "query { media_types { name } }",
    "schemaId" : "store_1",
    "question" : "List all media types."
  },
  {
    "query" : "query { media_types { name } }",
    "schemaId" : "store_1",
    "question" : "What are the names of all the media types?"
  },
  {
    "query" : "query { genres ( distinct_on : name ) { name } }",
    "schemaId" : "store_1",
    "question" : "List all different genre types."
  },
  {
    "query" : "query { genres ( distinct_on : name ) { name } }",
    "schemaId" : "store_1",
    "question" : "What are the different names of the genres?"
  },
  {
    "query" : "query { playlists { name } }",
    "schemaId" : "store_1",
    "question" : "List the name of all playlist."
  },
  {
    "query" : "query { playlists { name } }",
    "schemaId" : "store_1",
    "question" : "What are the names of all the playlists?"
  },
  {
    "query" : "query { tracks ( where : { name : { _eq : \"Fast As a Shark\" } } ) { composer } }",
    "schemaId" : "store_1",
    "question" : "Who is the composer of track Fast As a Shark?"
  },
  {
    "query" : "query { tracks ( where : { name : { _eq : \"Fast As a Shark\" } } ) { composer } }",
    "schemaId" : "store_1",
    "question" : "What is the composer who created the track \"Fast As a Shark\"?"
  },
  {
    "query" : "query { tracks ( where : { name : { _eq : \"Fast As a Shark\" } } ) { milliseconds } }",
    "schemaId" : "store_1",
    "question" : "How long does track Fast As a Shark has?"
  },
  {
    "query" : "query { tracks ( where : { name : { _eq : \"Fast As a Shark\" } } ) { milliseconds } }",
    "schemaId" : "store_1",
    "question" : "How many milliseconds long is Fast As a Shark?"
  },
  {
    "query" : "query { tracks ( where : { genre : { name : { _eq : \"Rock\" } } } ) { name } }",
    "schemaId" : "store_1",
    "question" : "What is the name of tracks whose genre is Rock?"
  },
  {
    "query" : "query { tracks ( where : { genre : { name : { _eq : \"Rock\" } } } ) { name } }",
    "schemaId" : "store_1",
    "question" : "What is the name of all tracks in the Rock genre?"
  },
  {
    "query" : "query { albums ( where : { tracks : { name : { _eq : \"Balls to the Wall\" } } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "What is title of album which track Balls to the Wall belongs to?"
  },
  {
    "query" : "query { albums ( where : { tracks : { name : { _eq : \"Balls to the Wall\" } } } ) { title } }",
    "schemaId" : "store_1",
    "question" : "What is the name of the album that has the track Ball to the Wall?"
  },
  {
    "query" : "query { tracks ( where : { album : { title : { _eq : \"Balls to the Wall\" } } } ) { name } }",
    "schemaId" : "store_1",
    "question" : "List name of all tracks in Balls to the Wall."
  },
  {
    "query" : "query { tracks ( where : { album : { title : { _eq : \"Balls to the Wall\" } } } ) { name } }",
    "schemaId" : "store_1",
    "question" : "What is the name of all tracks in the album named Balls to the Wall?"
  },
  {
    "query" : "query { tracks ( where : { _or : [ { genre : { name : { _eq : \"Rock\" } } } , { genre : { name : { _eq : \"Jazz\" } } } ] } ) { name } }",
    "schemaId" : "store_1",
    "question" : "List the name of tracks belongs to genre Rock or genre Jazz."
  },
  {
    "query" : "query { tracks ( where : { _or : [ { genre : { name : { _eq : \"Rock\" } } } , { genre : { name : { _eq : \"Jazz\" } } } ] } ) { name } }",
    "schemaId" : "store_1",
    "question" : "What are the names of the tracks that are Rock or Jazz songs?"
  },
  {
    "query" : "query { tracks ( where : { name : { _eq : \"Fast As a Shark\" } } ) { unit_price } }",
    "schemaId" : "store_1",
    "question" : "How much is the track Fast As a Shark?"
  },
  {
    "query" : "query { tracks ( where : { name : { _eq : \"Fast As a Shark\" } } ) { unit_price } }",
    "schemaId" : "store_1",
    "question" : "What is the unit price of the tune \"Fast As a Shark\"?"
  },
  {
    "query" : "query { district ( order_by : { city_area : desc } , distinct_on : district_name ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "Find all the distinct district names ordered by city area in descending."
  },
  {
    "query" : "query { district ( order_by : { city_area : desc } , distinct_on : district_name ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "What are the different district names in order of descending city area?"
  },
  {
    "query" : "query { district ( where : { city_population : { _gte : 200000.0 , _lte : 2000000.0 } } ) { district_name city_population } }",
    "schemaId" : "store_product",
    "question" : "Find the name and population of district with population between 200000 and 2000000"
  },
  {
    "query" : "query { district ( where : { city_population : { _gte : 200000.0 , _lte : 2000000.0 } } ) { district_name city_population } }",
    "schemaId" : "store_product",
    "question" : "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?"
  },
  {
    "query" : "query { district ( where : { _or : [ { city_area : { _gt : 10.0 } } , { city_population : { _gt : 100000.0 } } ] } ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "Find the name all districts with city area greater than 10 or population larger than 100000"
  },
  {
    "query" : "query { district ( where : { _or : [ { city_area : { _gt : 10.0 } } , { city_population : { _gt : 100000.0 } } ] } ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "What are the names of all districts with a city area greater than 10 or have more than 100000 people living there?"
  },
  {
    "query" : "query { district ( limit : 1 , order_by : { city_population : desc } ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "Which district has the largest population?"
  },
  {
    "query" : "query { district ( limit : 1 , order_by : { city_population : desc } ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "What is the name of the district with the most residents?"
  },
  {
    "query" : "query { district ( limit : 1 , order_by : { city_area : asc } ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "Which district has the least area?"
  },
  {
    "query" : "query { district ( limit : 1 , order_by : { city_area : asc } ) { district_name } }",
    "schemaId" : "store_product",
    "question" : "What is the name of the district with the smallest area?"
  },
  {
    "query" : "query { district_aggregate ( limit : 3 , order_by : { city_area : desc } ) { aggregate { sum { city_population } } } }",
    "schemaId" : "store_product",
    "question" : "Find the total population of the top 3 districts with the largest area."
  },
  {
    "query" : "query { district_aggregate ( limit : 3 , order_by : { city_area : desc } ) { aggregate { sum { city_population } } } }",
    "schemaId" : "store_product",
    "question" : "What is the total number of residents for the districts with the 3 largest areas?"
  },
  {
    "query" : "query { district ( where : { store_districts : { store : { store_name : { _eq : \"Blackville\" } } } } ) { headquartered_city } }",
    "schemaId" : "store_product",
    "question" : "Which city is the headquarter of the store named \"Blackville\" in?"
  },
  {
    "query" : "query { district ( where : { store_districts : { store : { store_name : { _eq : \"Blackville\" } } } } ) { headquartered_city } }",
    "schemaId" : "store_product",
    "question" : "What city is the headquarter of the store Blackville?"
  },
  {
    "query" : "query { product_aggregate { aggregate { avg { pages_per_minute_color } } } }",
    "schemaId" : "store_product",
    "question" : "What is the average pages per minute color?"
  },
  {
    "query" : "query { product_aggregate { aggregate { avg { pages_per_minute_color } } } }",
    "schemaId" : "store_product",
    "question" : "What is the average number of pages per minute color?"
  },
  {
    "query" : "query { product ( where : { _and : { max_page_size : { _eq : \"A4\" } , pages_per_minute_color : { _lt : 5.0 } } } ) { product } }",
    "schemaId" : "store_product",
    "question" : "Find products with max page size as \"A4\" and pages per minute color smaller than 5."
  },
  {
    "query" : "query { product ( where : { _and : { max_page_size : { _eq : \"A4\" } , pages_per_minute_color : { _lt : 5.0 } } } ) { product } }",
    "schemaId" : "store_product",
    "question" : "What are the products with the maximum page size A4 that also have a pages per minute color smaller than 5?"
  },
  {
    "query" : "query { product ( where : { _or : [ { max_page_size : { _eq : \"A4\" } } , { pages_per_minute_color : { _lt : 5.0 } } ] } ) { product } }",
    "schemaId" : "store_product",
    "question" : "Find products with max page size as \"A4\" or pages per minute color smaller than 5."
  },
  {
    "query" : "query { product ( where : { _or : [ { max_page_size : { _eq : \"A4\" } } , { pages_per_minute_color : { _lt : 5.0 } } ] } ) { product } }",
    "schemaId" : "store_product",
    "question" : "What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?"
  },
  {
    "query" : "query { product ( where : { product : { _like : \"%Scanner%\" } } ) { product } }",
    "schemaId" : "store_product",
    "question" : "Find all the product whose name contains the word \"Scanner\"."
  },
  {
    "query" : "query { product ( where : { product : { _like : \"%Scanner%\" } } ) { product } }",
    "schemaId" : "store_product",
    "question" : "What are all of the products whose name includes the substring \"Scanner\"?"
  },
  {
    "query" : "query { region_aggregate { aggregate { count } } }",
    "schemaId" : "storm_record",
    "question" : "How many regions do we have?"
  },
  {
    "query" : "query { region_aggregate { aggregate { count } } }",
    "schemaId" : "storm_record",
    "question" : "Count the number of regions."
  },
  {
    "query" : "query { region ( order_by : { region_code : asc } ) { region_code region_name } }",
    "schemaId" : "storm_record",
    "question" : "Show all region code and region name sorted by the codes."
  },
  {
    "query" : "query { region ( order_by : { region_code : asc } ) { region_code region_name } }",
    "schemaId" : "storm_record",
    "question" : "What are the codes and names for all regions, sorted by codes?"
  },
  {
    "query" : "query { region ( order_by : { region_name : asc } ) { region_name } }",
    "schemaId" : "storm_record",
    "question" : "List all region names in alphabetical order."
  },
  {
    "query" : "query { region ( order_by : { region_name : asc } ) { region_name } }",
    "schemaId" : "storm_record",
    "question" : "What are the names of the regions in alphabetical order?"
  },
  {
    "query" : "query { region ( where : { region_name : { _neq : \"Denmark\" } } ) { region_name } }",
    "schemaId" : "storm_record",
    "question" : "Show names for all regions except for Denmark."
  },
  {
    "query" : "query { region ( where : { region_name : { _neq : \"Denmark\" } } ) { region_name } }",
    "schemaId" : "storm_record",
    "question" : "Return the names of all regions other than Denmark."
  },
  {
    "query" : "query { storm_aggregate ( where : { number_deaths : { _gt : 0 } } ) { aggregate { count } } }",
    "schemaId" : "storm_record",
    "question" : "How many storms had death records?"
  },
  {
    "query" : "query { storm_aggregate ( where : { number_deaths : { _gt : 0 } } ) { aggregate { count } } }",
    "schemaId" : "storm_record",
    "question" : "Count the number of storms in which at least 1 person died."
  },
  {
    "query" : "query { storm ( where : { number_deaths : { _gte : 1 } } ) { name dates_active number_deaths } }",
    "schemaId" : "storm_record",
    "question" : "List name, dates active, and number of deaths for all storms with at least 1 death."
  },
  {
    "query" : "query { storm ( where : { number_deaths : { _gte : 1 } } ) { name dates_active number_deaths } }",
    "schemaId" : "storm_record",
    "question" : "What are the names, dates active, and number of deaths for storms that had 1 or more death?"
  },
  {
    "query" : "query { storm_aggregate ( where : { max_speed : { _gt : 1000 } } ) { aggregate { avg { damage_millions_usd } max { damage_millions_usd } } } }",
    "schemaId" : "storm_record",
    "question" : "Show the average and maximum damage for all storms with max speed higher than 1000."
  },
  {
    "query" : "query { storm_aggregate ( where : { max_speed : { _gt : 1000 } } ) { aggregate { avg { damage_millions_usd } max { damage_millions_usd } } } }",
    "schemaId" : "storm_record",
    "question" : "What is the average and maximum damage in millions for storms that had a max speed over 1000?"
  },
  {
    "query" : "query { storm ( order_by : { max_speed : desc } ) { name damage_millions_usd } }",
    "schemaId" : "storm_record",
    "question" : "List name and damage for all storms in a descending order of max speed."
  },
  {
    "query" : "query { storm ( order_by : { max_speed : desc } ) { name damage_millions_usd } }",
    "schemaId" : "storm_record",
    "question" : "What are the names and damage in millions for storms, ordered by their max speeds descending?"
  },
  {
    "query" : "query { affected_region_aggregate { aggregate { count } } }",
    "schemaId" : "storm_record",
    "question" : "How many regions are affected?"
  },
  {
    "query" : "query { affected_region_aggregate { aggregate { count } } }",
    "schemaId" : "storm_record",
    "question" : "Count the number of different affected regions."
  },
  {
    "query" : "query { storm ( where : { affected_regions : { region : { region_name : { _eq : \"Denmark\" } } } } ) { name } }",
    "schemaId" : "storm_record",
    "question" : "Show all storm names affecting region \"Denmark\"."
  },
  {
    "query" : "query { storm ( where : { affected_regions : { region : { region_name : { _eq : \"Denmark\" } } } } ) { name } }",
    "schemaId" : "storm_record",
    "question" : "What are the names of the storms that affected Denmark?"
  },
  {
    "query" : "query { list_aggregate { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "Find the number of students in total."
  },
  {
    "query" : "query { list_aggregate { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "How many students are there?"
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 111 } } ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "Find the last names of students studying in room 111."
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 111 } } ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "What are the last names of students in room 111?"
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 108 } } ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "Find the first names of students studying in room 108."
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 108 } } ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "What are the first names of students in room 108?"
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 107 } } , distinct_on : firstname ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "What are the first names of students studying in room 107?"
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 107 } } , distinct_on : firstname ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "List the first names of all the students in room 107."
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 103 } } , distinct_on : grade ) { grade } }",
    "schemaId" : "student_1",
    "question" : "Which grade is studying in classroom 103?"
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 103 } } , distinct_on : grade ) { grade } }",
    "schemaId" : "student_1",
    "question" : "Find the grade taught in classroom 103."
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 105 } } , distinct_on : grade ) { grade } }",
    "schemaId" : "student_1",
    "question" : "Find the grade studying in room 105."
  },
  {
    "query" : "query { list ( where : { classroom : { _eq : 105 } } , distinct_on : grade ) { grade } }",
    "schemaId" : "student_1",
    "question" : "Which grade is studying in room 105?"
  },
  {
    "query" : "query { list ( where : { grade : { _eq : 4 } } , distinct_on : classroom ) { classroom } }",
    "schemaId" : "student_1",
    "question" : "Which classrooms are used by grade 4?"
  },
  {
    "query" : "query { list ( where : { grade : { _eq : 4 } } , distinct_on : classroom ) { classroom } }",
    "schemaId" : "student_1",
    "question" : "Find the classrooms in which grade 4 is studying."
  },
  {
    "query" : "query { list ( where : { grade : { _eq : 5 } } , distinct_on : classroom ) { classroom } }",
    "schemaId" : "student_1",
    "question" : "Which classrooms are used by grade 5?"
  },
  {
    "query" : "query { list ( where : { grade : { _eq : 5 } } , distinct_on : classroom ) { classroom } }",
    "schemaId" : "student_1",
    "question" : "Show me the classrooms grade 5 is using."
  },
  {
    "query" : "query { teachers ( where : { lists : { grade : { _eq : 5 } } } , distinct_on : lastname ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "Find the last names of the teachers that teach fifth grade."
  },
  {
    "query" : "query { teachers ( where : { lists : { grade : { _eq : 5 } } } , distinct_on : lastname ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "what are the last names of the teachers who teach grade 5?"
  },
  {
    "query" : "query { teachers ( where : { lists : { grade : { _eq : 1 } } } , distinct_on : firstname ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "Find the first names of the teachers that teach first grade."
  },
  {
    "query" : "query { teachers ( where : { lists : { grade : { _eq : 1 } } } , distinct_on : firstname ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "What are the first names of the teachers who teach grade 1?"
  },
  {
    "query" : "query { teachers ( where : { classroom : { _eq : 110 } } ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "Find the first names of all the teachers that teach in classroom 110."
  },
  {
    "query" : "query { teachers ( where : { classroom : { _eq : 110 } } ) { firstname } }",
    "schemaId" : "student_1",
    "question" : "Which teachers teach in classroom 110? Give me their first names."
  },
  {
    "query" : "query { teachers ( where : { classroom : { _eq : 109 } } ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "Find the last names of teachers teaching in classroom 109."
  },
  {
    "query" : "query { teachers ( where : { classroom : { _eq : 109 } } ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "Which teachers teach in classroom 109? Give me their last names."
  },
  {
    "query" : "query { list ( where : { _and : { teacher : { lastname : { _eq : \"MOYER\" } , firstname : { _eq : \"OTHA\" } } } } ) { firstname lastname } }",
    "schemaId" : "student_1",
    "question" : "Find all students taught by OTHA MOYER. Output the first and last names of the students."
  },
  {
    "query" : "query { list ( where : { _and : { teacher : { firstname : { _eq : \"OTHA\" } , lastname : { _eq : \"MOYER\" } } } } ) { firstname lastname } }",
    "schemaId" : "student_1",
    "question" : "Which students study under the teacher named OTHA MOYER? Give me the first and last names of the students."
  },
  {
    "query" : "query { list ( where : { _and : { teacher : { lastname : { _eq : \"KIRK\" } , firstname : { _eq : \"MARROTTE\" } } } } ) { firstname lastname } }",
    "schemaId" : "student_1",
    "question" : "Find all students taught by MARROTTE KIRK. Output first and last names of students."
  },
  {
    "query" : "query { list ( where : { _and : { teacher : { firstname : { _eq : \"MARROTTE\" } , lastname : { _eq : \"KIRK\" } } } } ) { firstname lastname } }",
    "schemaId" : "student_1",
    "question" : "Which are the first and last names of the students taught by MARROTTE KIRK?"
  },
  {
    "query" : "query { teachers ( where : { _and : { lists : { firstname : { _eq : \"EVELINA\" } , lastname : { _eq : \"BROMLEY\" } } } } ) { firstname lastname } }",
    "schemaId" : "student_1",
    "question" : "Find the first and last name of all the teachers that teach EVELINA BROMLEY."
  },
  {
    "query" : "query { teachers ( where : { _and : { lists : { lastname : { _eq : \"BROMLEY\" } , firstname : { _eq : \"EVELINA\" } } } } ) { firstname lastname } }",
    "schemaId" : "student_1",
    "question" : "Which teachers teach the student named EVELINA BROMLEY? Give me the first and last name  of the teachers."
  },
  {
    "query" : "query { teachers ( where : { _and : { lists : { firstname : { _eq : \"GELL\" } , lastname : { _eq : \"TAMI\" } } } } ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "Find the last names of all the teachers that teach GELL TAMI."
  },
  {
    "query" : "query { teachers ( where : { _and : { lists : { firstname : { _eq : \"GELL\" } , lastname : { _eq : \"TAMI\" } } } } ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "What are the last names of the teachers who teach the student called GELL TAMI?"
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { teacher : { lastname : { _eq : \"ONDERSMA\" } , firstname : { _eq : \"LORIA\" } } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "How many students does LORIA ONDERSMA teaches?"
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { teacher : { firstname : { _eq : \"LORIA\" } , lastname : { _eq : \"ONDERSMA\" } } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "Count the number of students the teacher LORIA ONDERSMA teaches."
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { teacher : { lastname : { _eq : \"GORDON\" } , firstname : { _eq : \"KAWA\" } } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "How many students does KAWA GORDON teaches?"
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { teacher : { firstname : { _eq : \"KAWA\" } , lastname : { _eq : \"GORDON\" } } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "Find the number of students taught by the teacher KAWA GORDON."
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { teacher : { lastname : { _eq : \"LEIA\" } , firstname : { _eq : \"TARRING\" } } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "Find the number of students taught by TARRING LEIA."
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { teacher : { lastname : { _eq : \"LEIA\" } , firstname : { _eq : \"TARRING\" } } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "How many students are taught by teacher TARRING LEIA?"
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { lastname : { _eq : \"NABOZNY\" } , firstname : { _eq : \"CHRISSY\" } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "How many teachers does the student named CHRISSY NABOZNY have?"
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { firstname : { _eq : \"CHRISSY\" } , lastname : { _eq : \"NABOZNY\" } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "Find the number of teachers who teach the student called CHRISSY NABOZNY."
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { firstname : { _eq : \"MADLOCK\" } , lastname : { _eq : \"RAY\" } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "How many teachers does the student named MADLOCK RAY have?"
  },
  {
    "query" : "query { list_aggregate ( where : { _and : { firstname : { _eq : \"MADLOCK\" } , lastname : { _eq : \"RAY\" } } } ) { aggregate { count } } }",
    "schemaId" : "student_1",
    "question" : "Find the number of teachers who teach the student called MADLOCK RAY."
  },
  {
    "query" : "query { list ( where : { _and : { teacher : { firstname : { _neq : \"COVIN\" } , lastname : { _neq : \"JEROME\" } } , grade : { _eq : 3 } } } , distinct_on : lastname ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "Find the last names of the students in third grade that are not taught by COVIN JEROME."
  },
  {
    "query" : "query { list ( where : { _and : { teacher : { lastname : { _neq : \"JEROME\" } , firstname : { _neq : \"COVIN\" } } , grade : { _eq : 3 } } } , distinct_on : lastname ) { lastname } }",
    "schemaId" : "student_1",
    "question" : "Which students in third grade are not taught by teacher COVIN JEROME? Give me the last names of the students."
  },
  {
    "query" : "query { people { first_name last_name } }",
    "schemaId" : "student_assessment",
    "question" : "what are the first name and last name of all candidates?"
  },
  {
    "query" : "query { people { first_name last_name } }",
    "schemaId" : "student_assessment",
    "question" : "What are the first and last names of all the candidates?"
  },
  {
    "query" : "query { student_course_attendance { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "List the id of students who attended some courses?"
  },
  {
    "query" : "query { student_course_attendance { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "What are the ids of all students who have attended at least one course?"
  },
  {
    "query" : "query { student_course_registrations { student_id course { course_name } } }",
    "schemaId" : "student_assessment",
    "question" : "What are the ids of all students for courses and what are the names of those courses?"
  },
  {
    "query" : "query { students ( limit : 1 , order_by : { student_course_registrations_aggregate : { max : { registration_date : desc_nulls_last } } } ) { student_details } }",
    "schemaId" : "student_assessment",
    "question" : "What is detail of the student who most recently registered course?"
  },
  {
    "query" : "query { students ( limit : 1 , order_by : { student_course_registrations_aggregate : { max : { registration_date : desc_nulls_last } } } ) { student_details } }",
    "schemaId" : "student_assessment",
    "question" : "What details do we have on the students who registered for courses most recently?"
  },
  {
    "query" : "query { courses_aggregate ( where : { course_name : { _eq : \"English\" } } ) { aggregate { count } } }",
    "schemaId" : "student_assessment",
    "question" : "How many students attend course English?"
  },
  {
    "query" : "query { courses_aggregate ( where : { course_name : { _eq : \"English\" } } ) { aggregate { count } } }",
    "schemaId" : "student_assessment",
    "question" : "How many students are attending English courses?"
  },
  {
    "query" : "query { courses_aggregate ( where : { student_course_attendances : { student_id : { _eq : 171 } } } ) { aggregate { count } } }",
    "schemaId" : "student_assessment",
    "question" : "How many courses do the student whose id is 171 attend?"
  },
  {
    "query" : "query { courses_aggregate ( where : { student_course_attendances : { student_id : { _eq : 171 } } } ) { aggregate { count } } }",
    "schemaId" : "student_assessment",
    "question" : "How many courses does the student with id 171 actually attend?"
  },
  {
    "query" : "query { candidates ( where : { person : { email_address : { _eq : \"stanley.monahan@example.org\" } } } ) { candidate_id } }",
    "schemaId" : "student_assessment",
    "question" : "Find id of the candidate whose email is stanley.monahan@example.org?"
  },
  {
    "query" : "query { candidates ( where : { person : { email_address : { _eq : \"stanley.monahan@example.org\" } } } ) { candidate_id } }",
    "schemaId" : "student_assessment",
    "question" : "What is the id of the candidate whose email is stanley.monahan@example.org?"
  },
  {
    "query" : "query { candidate_assessments ( limit : 1 , order_by : { assessment_date : desc } ) { candidate_id } }",
    "schemaId" : "student_assessment",
    "question" : "Find id of the candidate who most recently accessed the course?"
  },
  {
    "query" : "query { candidate_assessments ( limit : 1 , order_by : { assessment_date : desc } ) { candidate_id } }",
    "schemaId" : "student_assessment",
    "question" : "What is the id of the candidate who most recently accessed the course?"
  },
  {
    "query" : "query { candidate_assessments ( where : { asessment_outcome_code : { _eq : \"Pass\" } } ) { candidate_id } }",
    "schemaId" : "student_assessment",
    "question" : "Find id of candidates whose assessment code is \"Pass\"?"
  },
  {
    "query" : "query { candidate_assessments ( where : { asessment_outcome_code : { _eq : \"Pass\" } } ) { candidate_id } }",
    "schemaId" : "student_assessment",
    "question" : "What are the ids of the candidates that have an outcome code of Pass?"
  },
  {
    "query" : "query { people ( where : { candidates : { candidate_assessments : { asessment_outcome_code : { _eq : \"Fail\" } } } } ) { cell_mobile_number } }",
    "schemaId" : "student_assessment",
    "question" : "Find the cell mobile number of the candidates whose assessment code is \"Fail\"?"
  },
  {
    "query" : "query { people ( where : { candidates : { candidate_assessments : { asessment_outcome_code : { _eq : \"Fail\" } } } } ) { cell_mobile_number } }",
    "schemaId" : "student_assessment",
    "question" : "What are the cell phone numbers of the candidates that received an assessment code of \"Fail\"?"
  },
  {
    "query" : "query { student_course_attendance ( where : { course_id : { _eq : 301 } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "What are the id of students who registered course 301?"
  },
  {
    "query" : "query { student_course_attendance ( where : { course_id : { _eq : 301 } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "What are the ids of the students who registered for course 301?"
  },
  {
    "query" : "query { student_course_attendance ( limit : 1 , order_by : { date_of_attendance : desc } , where : { course_id : { _eq : 301 } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "What is the id of the student who most recently registered course 301?"
  },
  {
    "query" : "query { student_course_attendance ( limit : 1 , order_by : { date_of_attendance : desc } , where : { course_id : { _eq : 301 } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "What are the ids of the students who registered for course 301 most recently?"
  },
  {
    "query" : "query { addresses ( distinct_on : city ) { city } }",
    "schemaId" : "student_assessment",
    "question" : "Find distinct cities of addresses of people?"
  },
  {
    "query" : "query { addresses ( distinct_on : city ) { city } }",
    "schemaId" : "student_assessment",
    "question" : "What are the different cities where people live?"
  },
  {
    "query" : "query { addresses ( distinct_on : city ) { city } }",
    "schemaId" : "student_assessment",
    "question" : "Find distinct cities of address of students?"
  },
  {
    "query" : "query { addresses ( distinct_on : city ) { city } }",
    "schemaId" : "student_assessment",
    "question" : "What are the different cities where students live?"
  },
  {
    "query" : "query { courses ( order_by : { course_name : asc } ) { course_name } }",
    "schemaId" : "student_assessment",
    "question" : "List the names of courses in alphabetical order?"
  },
  {
    "query" : "query { courses ( order_by : { course_name : asc } ) { course_name } }",
    "schemaId" : "student_assessment",
    "question" : "What are the names of the courses in alphabetical order?"
  },
  {
    "query" : "query { people ( order_by : { first_name : asc } ) { first_name } }",
    "schemaId" : "student_assessment",
    "question" : "List the first names of people in alphabetical order?"
  },
  {
    "query" : "query { people ( order_by : { first_name : asc } ) { first_name } }",
    "schemaId" : "student_assessment",
    "question" : "What are the first names of the people in alphabetical order?"
  },
  {
    "query" : "query { student_course_registrations ( order_by : { registration_date : asc } , where : { course : { course_name : { _eq : \"statistics\" } } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "List the id of students who registered course statistics in the order of registration date."
  },
  {
    "query" : "query { student_course_registrations ( order_by : { registration_date : asc } , where : { course : { course_name : { _eq : \"statistics\" } } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "What are the ids of the students who registered course statistics by order of registration date?"
  },
  {
    "query" : "query { student_course_attendance ( order_by : { date_of_attendance : asc } , where : { course : { course_name : { _eq : \"statistics\" } } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "List the id of students who attended  statistics courses in the order of attendance date."
  },
  {
    "query" : "query { student_course_attendance ( order_by : { date_of_attendance : asc } , where : { course : { course_name : { _eq : \"statistics\" } } } ) { student_id } }",
    "schemaId" : "student_assessment",
    "question" : "What are the ids of the students who attended courses in the statistics department in order of attendance date."
  },
  {
    "query" : "query { event_aggregate { aggregate { count } } }",
    "schemaId" : "swimming",
    "question" : "How many events are there?"
  },
  {
    "query" : "query { event ( order_by : { year : desc } ) { name } }",
    "schemaId" : "swimming",
    "question" : "List all the event names by year from the most recent to the oldest."
  },
  {
    "query" : "query { event ( limit : 1 , order_by : { year : desc } ) { name } }",
    "schemaId" : "swimming",
    "question" : "What is the name of the event that happened in the most recent year?"
  },
  {
    "query" : "query { stadium_aggregate { aggregate { count } } }",
    "schemaId" : "swimming",
    "question" : "How many stadiums are there?"
  },
  {
    "query" : "query { stadium ( limit : 1 , order_by : { capacity : desc } ) { name } }",
    "schemaId" : "swimming",
    "question" : "Find the name of the stadium that has the maximum capacity."
  },
  {
    "query" : "query { stadium_aggregate ( where : { opening_year : { _lt : 2006 } } ) { aggregate { count } } }",
    "schemaId" : "swimming",
    "question" : "How many cities have a stadium that was opened before the year of 2006?"
  },
  {
    "query" : "query { stadium_aggregate ( where : { country : { _neq : \"Russia\" } } ) { aggregate { count } } }",
    "schemaId" : "swimming",
    "question" : "How many stadiums are not in country \"Russia\"?"
  },
  {
    "query" : "query { swimmer ( order_by : { meter_100 : asc } ) { name } }",
    "schemaId" : "swimming",
    "question" : "Find the names of all swimmers, sorted by their 100 meter scores in ascending order."
  },
  {
    "query" : "query { swimmer_aggregate { aggregate { count } } }",
    "schemaId" : "swimming",
    "question" : "How many different countries are all the swimmers from?"
  },
  {
    "query" : "query { swimmer ( where : { nationality : { _eq : \"Australia\" } } ) { meter_200 meter_300 } }",
    "schemaId" : "swimming",
    "question" : "Find all 200 meter and 300 meter results of swimmers with nationality \"Australia\"."
  },
  {
    "query" : "query { swimmer ( where : { records : { result : { _eq : \"Win\" } } } ) { name } }",
    "schemaId" : "swimming",
    "question" : "Find the names of swimmers who has a result of \"win\"."
  },
  {
    "query" : "query { stadium ( where : { events : { name : { _eq : \"World Junior\" } } } ) { name capacity } }",
    "schemaId" : "swimming",
    "question" : "Find the name and capacity of the stadium where the event named \"World Junior\" happened."
  },
  {
    "query" : "query { swimmer { id meter_100 meter_200 meter_300 meter_400 meter_500 meter_600 meter_700 name nationality time } }",
    "schemaId" : "swimming",
    "question" : "Find all details for each swimmer."
  },
  {
    "query" : "query { stadium_aggregate ( where : { opening_year : { _eq : 2005 } } ) { aggregate { avg { capacity } } } }",
    "schemaId" : "swimming",
    "question" : "What is the average capacity of the stadiums that were opened in year 2005?"
  },
  {
    "query" : "query { artist_aggregate { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "How many artists do we have?"
  },
  {
    "query" : "query { artist_aggregate { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "Count the number of artists."
  },
  {
    "query" : "query { artist ( order_by : { year_join : asc } ) { name age country } }",
    "schemaId" : "theme_gallery",
    "question" : "Show all artist name, age, and country ordered by the yeared they joined."
  },
  {
    "query" : "query { artist ( order_by : { year_join : asc } ) { name age country } }",
    "schemaId" : "theme_gallery",
    "question" : "What are the names, ages, and countries of artists, sorted by the year they joined?"
  },
  {
    "query" : "query { artist ( distinct_on : country ) { country } }",
    "schemaId" : "theme_gallery",
    "question" : "What are all distinct country for artists?"
  },
  {
    "query" : "query { artist ( distinct_on : country ) { country } }",
    "schemaId" : "theme_gallery",
    "question" : "Return the different countries for artists."
  },
  {
    "query" : "query { artist ( where : { country : { _neq : \"United States\" } } ) { name year_join } }",
    "schemaId" : "theme_gallery",
    "question" : "Show all artist names and the year joined who are not from United States."
  },
  {
    "query" : "query { artist ( where : { country : { _neq : \"United States\" } } ) { name year_join } }",
    "schemaId" : "theme_gallery",
    "question" : "What are the names and year of joining for artists that do not have the country \"United States\"?"
  },
  {
    "query" : "query { artist_aggregate ( where : { _and : { year_join : { _gt : 1990 } , age : { _gt : 46 } } } ) { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "How many artists are above age 46 and joined after 1990?"
  },
  {
    "query" : "query { artist_aggregate ( where : { _and : { year_join : { _gt : 1990 } , age : { _gt : 46 } } } ) { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "Count the number of artists who are older than 46 and joined after 1990."
  },
  {
    "query" : "query { artist_aggregate ( where : { country : { _eq : \"United States\" } } ) { aggregate { avg { age } min { age } } } }",
    "schemaId" : "theme_gallery",
    "question" : "What is the average and minimum age of all artists from United States."
  },
  {
    "query" : "query { artist_aggregate ( where : { country : { _eq : \"United States\" } } ) { aggregate { avg { age } min { age } } } }",
    "schemaId" : "theme_gallery",
    "question" : "Return the average and minimum ages across artists from the United States."
  },
  {
    "query" : "query { artist ( limit : 1 , order_by : { year_join : desc } ) { name } }",
    "schemaId" : "theme_gallery",
    "question" : "What is the name of the artist who joined latest?"
  },
  {
    "query" : "query { artist ( limit : 1 , order_by : { year_join : desc } ) { name } }",
    "schemaId" : "theme_gallery",
    "question" : "Return the name of the artist who has the latest join year."
  },
  {
    "query" : "query { exhibition_aggregate ( where : { year : { _gte : 2005 } } ) { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "How many exhibition are there in year 2005 or after?"
  },
  {
    "query" : "query { exhibition_aggregate ( where : { year : { _gte : 2005 } } ) { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "Count the number of exhibitions that happened in or after 2005."
  },
  {
    "query" : "query { exhibition ( where : { ticket_price : { _lt : 15.0 } } ) { theme year } }",
    "schemaId" : "theme_gallery",
    "question" : "Show theme and year for all exhibitions with ticket prices lower than 15."
  },
  {
    "query" : "query { exhibition ( where : { ticket_price : { _lt : 15.0 } } ) { theme year } }",
    "schemaId" : "theme_gallery",
    "question" : "What are the theme and year for all exhibitions that have a ticket price under 15?"
  },
  {
    "query" : "query { exhibition_aggregate ( where : { year : { _lt : 2009 } } ) { aggregate { avg { ticket_price } min { ticket_price } max { ticket_price } } } }",
    "schemaId" : "theme_gallery",
    "question" : "Show the average, minimum, and maximum ticket prices for exhibitions for all years before 2009."
  },
  {
    "query" : "query { exhibition_aggregate ( where : { year : { _lt : 2009 } } ) { aggregate { avg { ticket_price } min { ticket_price } max { ticket_price } } } }",
    "schemaId" : "theme_gallery",
    "question" : "What are the average, minimum, and maximum ticket prices for exhibitions that happened prior to 2009?"
  },
  {
    "query" : "query { exhibition ( order_by : { ticket_price : desc } ) { theme year } }",
    "schemaId" : "theme_gallery",
    "question" : "Show theme and year for all exhibitions in an descending order of ticket price."
  },
  {
    "query" : "query { exhibition ( order_by : { ticket_price : desc } ) { theme year } }",
    "schemaId" : "theme_gallery",
    "question" : "What are the themes and years for exhibitions, sorted by ticket price descending?"
  },
  {
    "query" : "query { exhibition ( where : { year : { _eq : 2004 } } ) { theme exhibition_records { date attendance } } }",
    "schemaId" : "theme_gallery",
    "question" : "What is the theme, date, and attendance for the exhibition in year 2004?"
  },
  {
    "query" : "query { exhibition ( where : { year : { _eq : 2004 } } ) { theme exhibition_records { date attendance } } }",
    "schemaId" : "theme_gallery",
    "question" : "Return the themes, dates, and attendance for exhibitions that happened in 2004."
  },
  {
    "query" : "query { exhibition_record_aggregate ( where : { _or : [ { attendance : { _gt : 100 } } , { exhibition : { ticket_price : { _lt : 10.0 } } } ] } ) { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "How many exhibitions have a attendance more than 100 or have a ticket price below 10?"
  },
  {
    "query" : "query { exhibition_record_aggregate ( where : { _or : [ { attendance : { _gt : 100 } } , { exhibition : { ticket_price : { _lt : 10.0 } } } ] } ) { aggregate { count } } }",
    "schemaId" : "theme_gallery",
    "question" : "Count the number of exhibitions that have had an attendnance of over 100 or a ticket prices under 10."
  },
  {
    "query" : "query { project_staff ( where : { role_code : { _eq : \"researcher\" } } ) { date_from date_to } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "When do all the researcher role staff start to work, and when do they stop working?"
  },
  {
    "query" : "query { project_staff ( where : { role_code : { _eq : \"researcher\" } } ) { date_from date_to } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "When did researchers start and stop working?"
  },
  {
    "query" : "query { project_staff_aggregate { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many kinds of roles are there for the staff?"
  },
  {
    "query" : "query { project_staff_aggregate { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many different roles are there on the project staff?"
  },
  {
    "query" : "query { staff_roles ( where : { role_code : { _eq : \"researcher\" } } ) { role_description } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What is the complete description of the researcher role."
  },
  {
    "query" : "query { staff_roles ( where : { role_code : { _eq : \"researcher\" } } ) { role_description } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What is the complete description of the job of a researcher?"
  },
  {
    "query" : "query { project_staff ( limit : 1 , order_by : { date_from : asc } ) { date_from } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "When did the first staff for the projects started working?"
  },
  {
    "query" : "query { project_staff ( limit : 1 , order_by : { date_from : asc } ) { date_from } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "When did the first staff member start working?"
  },
  {
    "query" : "query { document_types ( where : { document_description : { _like : \"Initial%\" } } ) { document_type_code } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "Which document type is described with the prefix 'Initial'?"
  },
  {
    "query" : "query { document_types ( where : { document_description : { _like : \"Initial%\" } } ) { document_type_code } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What is the type of the document whose description starts with the word 'Initial'?"
  },
  {
    "query" : "query { organisation_types ( where : { organisations : { organisation_details : { _eq : \"quo\" } } } ) { organisation_type_description } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "Find the organisation type description of the organisation detailed as 'quo'."
  },
  {
    "query" : "query { organisation_types ( where : { organisations : { organisation_details : { _eq : \"quo\" } } } ) { organisation_type_description } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What is the type description of the organization whose detail is listed as 'quo'?"
  },
  {
    "query" : "query { organisations ( order_by : { organisation_details : asc } , where : { organisationTypeByOrganisationType : { organisation_type_description : { _eq : \"Sponsor\" } } } ) { organisation_details } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What are all the details of the organisations described as 'Sponsor'? Sort the result in an ascending order."
  },
  {
    "query" : "query { organisations ( order_by : { organisation_details : asc } , where : { organisationTypeByOrganisationType : { organisation_type_description : { _eq : \"Sponsor\" } } } ) { organisation_details } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What are the details of all organizations that are described as Sponsors and sort the results in ascending order?"
  },
  {
    "query" : "query { project_outcomes_aggregate ( where : { outcome_code : { _eq : \"Patent\" } } ) { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many Patent outcomes are generated from all the projects?"
  },
  {
    "query" : "query { project_outcomes_aggregate ( where : { outcome_code : { _eq : \"Patent\" } } ) { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many patents outcomes were listed for all the projects?"
  },
  {
    "query" : "query { project_staff_aggregate ( where : { _or : [ { role_code : { _eq : \"leader\" } } , { date_from : { _lt : \"1989-04-24 23:51:54\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many project staff worked as leaders or started working before '1989-04-24 23:51:54'?"
  },
  {
    "query" : "query { project_staff_aggregate ( where : { _or : [ { role_code : { _eq : \"leader\" } } , { date_from : { _lt : \"1989-04-24 23:51:54\" } } ] } ) { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many project members were leaders or started working before '1989-04-24 23:51:54'?"
  },
  {
    "query" : "query { project_staff ( limit : 1 , order_by : { date_to : desc } ) { date_to } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What is the last date of the staff leaving the projects?"
  },
  {
    "query" : "query { project_staff ( limit : 1 , order_by : { date_to : desc } ) { date_to } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What is the last date that a staff member left a project?"
  },
  {
    "query" : "query { research_staff ( order_by : { staff_details : asc } ) { staff_details } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "List the research staff details, and order in ascending order."
  },
  {
    "query" : "query { research_staff ( order_by : { staff_details : asc } ) { staff_details } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What details are there on the research staff? List the result in ascending alphabetical order."
  },
  {
    "query" : "query { tasks_aggregate { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many tasks are there in total?"
  },
  {
    "query" : "query { tasks_aggregate { aggregate { count } } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "How many tasks are there?"
  },
  {
    "query" : "query { project_staff ( where : { _and : { date_from : { _gt : \"2003-04-19 15:06:20\" } , date_to : { _lt : \"2016-03-15 00:33:18\" } } } ) { role_code } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What are the staff roles of the staff who"
  },
  {
    "query" : "query { project_staff ( where : { _and : { date_from : { _gt : \"2003-04-19 15:06:20\" } , date_to : { _lt : \"2016-03-15 00:33:18\" } } } ) { role_code } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What roles did staff members play between '2003-04-19 15:06:20' and '2016-03-15 00:33:18'?"
  },
  {
    "query" : "query { research_outcomes { outcome_description } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "What are the descriptions of all the project outcomes?"
  },
  {
    "query" : "query { research_outcomes { outcome_description } }",
    "schemaId" : "tracking_grants_for_research",
    "question" : "List the description of the outcomes for all projects."
  },
  {
    "query" : "query { orders ( limit : 1 , order_by : { date_order_placed : desc } ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "What is the id of the most recent order?"
  },
  {
    "query" : "query { orders ( limit : 1 , order_by : { date_order_placed : desc } ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the id of the order made most recently."
  },
  {
    "query" : "query { orders ( limit : 1 , order_by : { date_order_placed : asc } ) { order_id customer_id } }",
    "schemaId" : "tracking_orders",
    "question" : "what are the order id and customer id of the oldest order?"
  },
  {
    "query" : "query { orders ( limit : 1 , order_by : { date_order_placed : asc } ) { order_id customer_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the order id and customer id associated with the oldest order."
  },
  {
    "query" : "query { shipments ( where : { shipment_tracking_number : { _eq : \"3452\" } } ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the id of the order whose shipment tracking number is \"3452\"."
  },
  {
    "query" : "query { shipments ( where : { shipment_tracking_number : { _eq : \"3452\" } } ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Which order's shipment tracking number is \"3452\"? Give me the id of the order."
  },
  {
    "query" : "query { order_items ( where : { product_id : { _eq : 11 } } ) { order_item_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the ids of all the order items whose product id is 11."
  },
  {
    "query" : "query { order_items ( where : { product_id : { _eq : 11 } } ) { order_item_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Find all the order items whose product id is 11. What are the order item ids?"
  },
  {
    "query" : "query { customers ( where : { orders : { order_status : { _eq : \"Packing\" } } } , distinct_on : customer_name ) { customer_name } }",
    "schemaId" : "tracking_orders",
    "question" : "List the name of all the distinct customers who have orders with status \"Packing\"."
  },
  {
    "query" : "query { customers ( where : { orders : { order_status : { _eq : \"Packing\" } } } , distinct_on : customer_name ) { customer_name } }",
    "schemaId" : "tracking_orders",
    "question" : "Which customers have orders with status \"Packing\"? Give me the customer names."
  },
  {
    "query" : "query { customers ( where : { orders : { order_status : { _eq : \"On Road\" } } } , distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the details of all the distinct customers who have orders with status \"On Road\"."
  },
  {
    "query" : "query { customers ( where : { orders : { order_status : { _eq : \"On Road\" } } } , distinct_on : customer_details ) { customer_details } }",
    "schemaId" : "tracking_orders",
    "question" : "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?"
  },
  {
    "query" : "query { orders ( where : { customer : { customer_name : { _eq : \"Jeramie\" } } } ) { order_id order_status } }",
    "schemaId" : "tracking_orders",
    "question" : "Give me a list of id and status of orders which belong to the customer named \"Jeramie\"."
  },
  {
    "query" : "query { orders ( where : { customer : { customer_name : { _eq : \"Jeramie\" } } } ) { order_id order_status } }",
    "schemaId" : "tracking_orders",
    "question" : "Which orders are made by the customer named \"Jeramie\"? Give me the order ids and status."
  },
  {
    "query" : "query { orders ( where : { customer : { customer_name : { _eq : \"Jeramie\" } } } ) { date_order_placed } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the dates of orders which belong to the customer named \"Jeramie\"."
  },
  {
    "query" : "query { orders ( where : { customer : { customer_name : { _eq : \"Jeramie\" } } } ) { date_order_placed } }",
    "schemaId" : "tracking_orders",
    "question" : "What are the dates of the orders made by the customer named \"Jeramie\"?"
  },
  {
    "query" : "query { customers ( where : { _and : { orders : { date_order_placed : { _gte : \"2009-01-01\" , _lte : \"2010-01-01\" } } } } ) { customer_name } }",
    "schemaId" : "tracking_orders",
    "question" : "Give me the names of customers who have placed orders between 2009-01-01 and 2010-01-01."
  },
  {
    "query" : "query { customers ( where : { _and : { orders : { date_order_placed : { _gte : \"2009-01-01\" , _lte : \"2010-01-01\" } } } } ) { customer_name } }",
    "schemaId" : "tracking_orders",
    "question" : "Which customers made orders between 2009-01-01 and 2010-01-01? Find their names."
  },
  {
    "query" : "query { order_items ( where : { _and : { order : { date_order_placed : { _gte : \"1975-01-01\" , _lte : \"1976-01-01\" } } } } , distinct_on : product_id ) { product_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Give me a list of distinct product ids from orders placed between 1975-01-01 and 1976-01-01?"
  },
  {
    "query" : "query { order_items ( where : { _and : { order : { date_order_placed : { _gte : \"1975-01-01\" , _lte : \"1976-01-01\" } } } } , distinct_on : product_id ) { product_id } }",
    "schemaId" : "tracking_orders",
    "question" : "What are the distinct ids of products ordered between 1975-01-01 and 1976-01-01??"
  },
  {
    "query" : "query { orders ( where : { shipments : { shipment_tracking_number : { _eq : \"3452\" } } } ) { date_order_placed } }",
    "schemaId" : "tracking_orders",
    "question" : "When was the order placed whose shipment tracking number is 3452? Give me the date."
  },
  {
    "query" : "query { orders ( where : { shipments : { shipment_tracking_number : { _eq : \"3452\" } } } ) { date_order_placed } }",
    "schemaId" : "tracking_orders",
    "question" : "On which day was the order placed whose shipment tracking number is 3452?"
  },
  {
    "query" : "query { orders ( where : { shipments : { invoice_number : { _eq : 10 } } } ) { date_order_placed } }",
    "schemaId" : "tracking_orders",
    "question" : "What is the placement date of the order whose invoice number is 10?"
  },
  {
    "query" : "query { orders ( where : { shipments : { invoice_number : { _eq : 10 } } } ) { date_order_placed } }",
    "schemaId" : "tracking_orders",
    "question" : "On what day was the order with invoice number 10 placed?"
  },
  {
    "query" : "query { shipments ( where : { shipment_date : { _gt : \"2000-01-01\" } } ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the ids of orders which are shipped after 2000-01-01."
  },
  {
    "query" : "query { shipments ( where : { shipment_date : { _gt : \"2000-01-01\" } } ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "Which orders have shipment after 2000-01-01? Give me the order ids."
  },
  {
    "query" : "query { products ( order_by : { product_name : asc } , distinct_on : product_name ) { product_name } }",
    "schemaId" : "tracking_orders",
    "question" : "List the names of all distinct products in alphabetical order."
  },
  {
    "query" : "query { products ( order_by : { product_name : asc } , distinct_on : product_name ) { product_name } }",
    "schemaId" : "tracking_orders",
    "question" : "Sort all the distinct products in alphabetical order."
  },
  {
    "query" : "query { orders ( order_by : { date_order_placed : asc } , distinct_on : order_id ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "List the ids of all distinct orders ordered by placed date."
  },
  {
    "query" : "query { orders ( order_by : { date_order_placed : asc } , distinct_on : order_id ) { order_id } }",
    "schemaId" : "tracking_orders",
    "question" : "What are ids of the all distinct orders, sorted by placement date?"
  },
  {
    "query" : "query { invoices ( where : { _or : [ { invoice_date : { _lt : \"1989-09-03\" } } , { invoice_date : { _gt : \"2007-12-25\" } } ] } ) { invoice_number } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the invoice numbers which are created before 1989-09-03 or after 2007-12-25."
  },
  {
    "query" : "query { invoices ( where : { _or : [ { invoice_date : { _lt : \"1989-09-03\" } } , { invoice_date : { _gt : \"2007-12-25\" } } ] } ) { invoice_number } }",
    "schemaId" : "tracking_orders",
    "question" : "What are the invoice numbers created before 1989-09-03 or after 2007-12-25?"
  },
  {
    "query" : "query { invoices ( where : { _or : [ { invoice_date : { _lt : \"1989-09-03\" } } , { invoice_date : { _gt : \"2007-12-25\" } } ] } , distinct_on : invoice_details ) { invoice_details } }",
    "schemaId" : "tracking_orders",
    "question" : "Find the distinct details of invoices which are created before 1989-09-03 or after 2007-12-25."
  },
  {
    "query" : "query { invoices ( where : { _or : [ { invoice_date : { _lt : \"1989-09-03\" } } , { invoice_date : { _gt : \"2007-12-25\" } } ] } , distinct_on : invoice_details ) { invoice_details } }",
    "schemaId" : "tracking_orders",
    "question" : "What are the distinct details of invoices created before 1989-09-03 or after 2007-12-25?"
  },
  {
    "query" : "query { investors_aggregate { aggregate { count } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Find the number of investors in total."
  },
  {
    "query" : "query { investors { investor_details } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show all investor details."
  },
  {
    "query" : "query { lots ( distinct_on : lot_details ) { lot_details } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show all distinct lot details."
  },
  {
    "query" : "query { transactions_aggregate { aggregate { max { amount_of_transaction } } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show the maximum amount of transaction."
  },
  {
    "query" : "query { transactions { date_of_transaction share_count } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show all date and share count of transactions."
  },
  {
    "query" : "query { transactions_aggregate { aggregate { sum { share_count } } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "What is the total share of transactions?"
  },
  {
    "query" : "query { transactions ( where : { transaction_type_code : { _eq : \"PUR\" } } ) { transaction_id } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show all transaction ids with transaction code 'PUR'."
  },
  {
    "query" : "query { transactions ( where : { transaction_type_code : { _eq : \"SALE\" } } ) { date_of_transaction } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show all dates of transactions whose type code is \"SALE\"."
  },
  {
    "query" : "query { transactions_aggregate ( where : { transaction_type_code : { _eq : \"SALE\" } } ) { aggregate { avg { amount_of_transaction } } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show the average amount of transactions with type code \"SALE\"."
  },
  {
    "query" : "query { ref_transaction_types ( where : { transaction_type_code : { _eq : \"PUR\" } } ) { transaction_type_description } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show the description of transaction type with code \"PUR\"."
  },
  {
    "query" : "query { transactions_aggregate ( where : { _and : { transaction_type_code : { _eq : \"PUR\" } , share_count : { _gt : 50 } } } ) { aggregate { min { amount_of_transaction } } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show the minimum amount of transactions whose type code is \"PUR\" and whose share count is bigger than 50."
  },
  {
    "query" : "query { transactions_aggregate ( where : { amount_of_transaction : { _lt : 10000 } } ) { aggregate { max { share_count } } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show the maximum share count of transactions where the amount is smaller than 10000"
  },
  {
    "query" : "query { transactions ( where : { _or : [ { share_count : { _gt : 100 } } , { amount_of_transaction : { _gt : 1000 } } ] } ) { date_of_transaction } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show the dates of transactions if the share count is bigger than 100 or the amount is bigger than 1000."
  },
  {
    "query" : "query { ref_transaction_types ( where : { transactions : { share_count : { _lt : 10 } } } ) { transaction_type_description transactions { date_of_transaction } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show the transaction type descriptions and dates if the share count is smaller than 10."
  },
  {
    "query" : "query { investors ( where : { transactions : { share_count : { _gt : 100 } } } ) { investor_details } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Show details of all investors if they make any transaction with share count greater than 100."
  },
  {
    "query" : "query { transactions_aggregate { aggregate { count } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "How many distinct transaction types are used in the transactions?"
  },
  {
    "query" : "query { lots { lot_details investor_id } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Return the lot details and investor ids."
  },
  {
    "query" : "query { lots ( where : { investor : { investor_details : { _eq : \"l\" } } } ) { lot_details } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "Return the lot details of lots that belong to investors with details \"l\"?"
  },
  {
    "query" : "query { purchases ( where : { transaction : { amount_of_transaction : { _gt : 10000 } } } ) { purchase_details } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "What are the purchase details of transactions with amount bigger than 10000?"
  },
  {
    "query" : "query { sales ( where : { transaction : { amount_of_transaction : { _lt : 3000 } } } ) { sales_details transaction { date_of_transaction } } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "What are the sale details and dates of transactions with amount smaller than 3000?"
  },
  {
    "query" : "query { transactions ( where : { _or : [ { share_count : { _gte : 100 } } , { amount_of_transaction : { _gte : 100 } } ] } ) { date_of_transaction } }",
    "schemaId" : "tracking_share_transactions",
    "question" : "What are the dates of transactions with at least 100 share count or amount bigger than 100?"
  },
  {
    "query" : "query { problem_log ( limit : 1 , order_by : { log_entry_date : desc } ) { problem_log_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "What is the id of the problem log that is created most recently?"
  },
  {
    "query" : "query { problem_log ( limit : 1 , order_by : { log_entry_date : desc } ) { problem_log_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "Which problem log was created most recently? Give me the log id."
  },
  {
    "query" : "query { problem_log ( limit : 1 , order_by : { log_entry_date : asc } ) { problem_log_id problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "What is the oldest log id and its corresponding problem id?"
  },
  {
    "query" : "query { problem_log ( limit : 1 , order_by : { log_entry_date : asc } ) { problem_log_id problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "Find the oldest log id and its corresponding problem id."
  },
  {
    "query" : "query { problem_log ( where : { problem_id : { _eq : 10 } } ) { problem_log_id log_entry_date } }",
    "schemaId" : "tracking_software_problems",
    "question" : "Find all the ids and dates of the logs for the problem whose id is 10."
  },
  {
    "query" : "query { problem_log ( where : { problem_id : { _eq : 10 } } ) { problem_log_id log_entry_date } }",
    "schemaId" : "tracking_software_problems",
    "question" : "For the problem with id 10, return the ids and dates of its problem logs."
  },
  {
    "query" : "query { problem_log { problem_log_id log_entry_description } }",
    "schemaId" : "tracking_software_problems",
    "question" : "List all the log ids and their descriptions from the problem logs."
  },
  {
    "query" : "query { problem_log { problem_log_id log_entry_description } }",
    "schemaId" : "tracking_software_problems",
    "question" : "What are the log id and entry description of each problem?"
  },
  {
    "query" : "query { product_aggregate ( where : { product_name : { _eq : \"voluptatem\" } } ) { aggregate { count } } }",
    "schemaId" : "tracking_software_problems",
    "question" : "How many problems are there for product voluptatem?"
  },
  {
    "query" : "query { product_aggregate ( where : { product_name : { _eq : \"voluptatem\" } } ) { aggregate { count } } }",
    "schemaId" : "tracking_software_problems",
    "question" : "How many problems did the product called \"voluptatem\" have in record?"
  },
  {
    "query" : "query { problems ( where : { date_problem_reported : { _gt : \"1978-06-26\" } } ) { problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "What are the ids of the problems which are reported after 1978-06-26?"
  },
  {
    "query" : "query { problems ( where : { date_problem_reported : { _gt : \"1978-06-26\" } } ) { problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "Find the ids of the problems reported after 1978-06-26."
  },
  {
    "query" : "query { problems ( where : { date_problem_reported : { _lt : \"1978-06-26\" } } ) { problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "What are the ids of the problems which are reported before 1978-06-26?"
  },
  {
    "query" : "query { problems ( where : { date_problem_reported : { _lt : \"1978-06-26\" } } ) { problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "Which problems are reported before 1978-06-26? Give me the ids of the problems."
  },
  {
    "query" : "query { product ( order_by : { product_name : asc } , distinct_on : product_name ) { product_name } }",
    "schemaId" : "tracking_software_problems",
    "question" : "List the names of all the distinct product names in alphabetical order?"
  },
  {
    "query" : "query { product ( order_by : { product_name : asc } , distinct_on : product_name ) { product_name } }",
    "schemaId" : "tracking_software_problems",
    "question" : "Sort all the distinct product names in alphabetical order."
  },
  {
    "query" : "query { product ( order_by : { product_id : asc } , distinct_on : product_name ) { product_name } }",
    "schemaId" : "tracking_software_problems",
    "question" : "List all the distinct product names ordered by product id?"
  },
  {
    "query" : "query { product ( order_by : { product_id : asc } , distinct_on : product_name ) { product_name } }",
    "schemaId" : "tracking_software_problems",
    "question" : "What is the list of distinct product names sorted by product id?"
  },
  {
    "query" : "query { problems ( where : { _and : { product : { product_name : { _eq : \"voluptatem\" } } , date_problem_reported : { _gt : \"1995\" } } } ) { problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "List the ids of the problems from the product \"voluptatem\" that are reported after 1995?"
  },
  {
    "query" : "query { problems ( where : { _and : { date_problem_reported : { _gt : \"1995\" } , product : { product_name : { _eq : \"voluptatem\" } } } } ) { problem_id } }",
    "schemaId" : "tracking_software_problems",
    "question" : "What are the ids of the problems that are from the product \"voluptatem\" and are reported after 1995?"
  },
  {
    "query" : "query { station_aggregate { aggregate { count } } }",
    "schemaId" : "train_station",
    "question" : "How many train stations are there?"
  },
  {
    "query" : "query { station { name location number_of_platforms } }",
    "schemaId" : "train_station",
    "question" : "Show the name, location, and number of platforms for all stations."
  },
  {
    "query" : "query { station ( distinct_on : location ) { location } }",
    "schemaId" : "train_station",
    "question" : "What are all locations of train stations?"
  },
  {
    "query" : "query { station ( where : { location : { _neq : \"London\" } } ) { name total_passengers } }",
    "schemaId" : "train_station",
    "question" : "Show the names and total passengers for all train stations not in London."
  },
  {
    "query" : "query { station ( limit : 3 , order_by : { total_passengers : desc } ) { name main_services } }",
    "schemaId" : "train_station",
    "question" : "Show the names and main services for train stations that have the top three total number of passengers."
  },
  {
    "query" : "query { station_aggregate ( where : { _or : [ { location : { _eq : \"London\" } } , { location : { _eq : \"Glasgow\" } } ] } ) { aggregate { avg { total_passengers } max { total_passengers } } } }",
    "schemaId" : "train_station",
    "question" : "What is the average and maximum number of total passengers for train stations in London or Glasgow?"
  },
  {
    "query" : "query { station ( where : { _and : { number_of_platforms : { _gte : 15 } , total_passengers : { _gt : 25.0 } } } , distinct_on : location ) { location } }",
    "schemaId" : "train_station",
    "question" : "Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers."
  },
  {
    "query" : "query { train { name time service } }",
    "schemaId" : "train_station",
    "question" : "Show the name, time, and service for all trains."
  },
  {
    "query" : "query { train_aggregate { aggregate { count } } }",
    "schemaId" : "train_station",
    "question" : "Show the number of trains"
  },
  {
    "query" : "query { train ( order_by : { time : asc } ) { name service } }",
    "schemaId" : "train_station",
    "question" : "Show the name and service for all trains in order by time."
  },
  {
    "query" : "query { station { name train_stations { train { name } } } }",
    "schemaId" : "train_station",
    "question" : "show the train name and station name for each train."
  },
  {
    "query" : "query { train ( order_by : { time : desc } , where : { train_stations : { station : { location : { _eq : \"London\" } } } } ) { name time } }",
    "schemaId" : "train_station",
    "question" : "Show all train names and times in stations in London in descending order by train time."
  },
  {
    "query" : "query { station ( order_by : { annual_entry_exit : asc , annual_interchanges : asc } ) { name location } }",
    "schemaId" : "train_station",
    "question" : "List the names and locations of all stations ordered by their yearly entry exit and interchange amounts."
  },
  {
    "query" : "query { user_profiles ( where : { name : { _eq : \"Mary\" } } ) { email } }",
    "schemaId" : "twitter_1",
    "question" : "Find the emails of the user named \"Mary\"."
  },
  {
    "query" : "query { user_profiles ( where : { name : { _eq : \"Iron Man\" } } ) { partitionid } }",
    "schemaId" : "twitter_1",
    "question" : "What is the partition id of the user named \"Iron Man\"."
  },
  {
    "query" : "query { user_profiles_aggregate { aggregate { count } } }",
    "schemaId" : "twitter_1",
    "question" : "How many users are there?"
  },
  {
    "query" : "query { follows_aggregate { aggregate { count } } }",
    "schemaId" : "twitter_1",
    "question" : "How many followers does each user have?"
  },
  {
    "query" : "query { tweets_aggregate { aggregate { count } } }",
    "schemaId" : "twitter_1",
    "question" : "Find the number of tweets in record."
  },
  {
    "query" : "query { tweets_aggregate { aggregate { count } } }",
    "schemaId" : "twitter_1",
    "question" : "Find the number of users who posted some tweets."
  },
  {
    "query" : "query { user_profiles ( where : { name : { _like : \"%Swift%\" } } ) { name email } }",
    "schemaId" : "twitter_1",
    "question" : "Find the name and email of the user whose name contains the word ‘Swift’."
  },
  {
    "query" : "query { user_profiles ( where : { _or : [ { email : { _like : \"%superstar%\" } } , { email : { _like : \"%edu%\" } } ] } ) { name } }",
    "schemaId" : "twitter_1",
    "question" : "Find the names of users whose emails contain ‘superstar’ or ‘edu’."
  },
  {
    "query" : "query { tweets ( where : { text : { _like : \"%intern%\" } } ) { text } }",
    "schemaId" : "twitter_1",
    "question" : "Return the text of tweets about the topic 'intern'."
  },
  {
    "query" : "query { user_profiles ( where : { followers : { _gt : 1000 } } ) { name email } }",
    "schemaId" : "twitter_1",
    "question" : "Find the name and email of the users who have more than 1000 followers."
  },
  {
    "query" : "query { user_profiles ( limit : 1 , order_by : { followers : desc } ) { name } }",
    "schemaId" : "twitter_1",
    "question" : "Find the name of the user who has the largest number of followers."
  },
  {
    "query" : "query { user_profiles ( limit : 1 , order_by : { followers : asc } ) { name email } }",
    "schemaId" : "twitter_1",
    "question" : "Find the name and email of the user followed by the least number of people."
  },
  {
    "query" : "query { user_profiles ( order_by : { followers : desc } ) { name followers } }",
    "schemaId" : "twitter_1",
    "question" : "List the name and number of followers for each user, and sort the results by the number of followers in descending order."
  },
  {
    "query" : "query { user_profiles ( limit : 5 , order_by : { followers : desc } ) { name } }",
    "schemaId" : "twitter_1",
    "question" : "List the names of 5 users followed by the largest number of other users."
  },
  {
    "query" : "query { tweets ( order_by : { createdate : asc } ) { text } }",
    "schemaId" : "twitter_1",
    "question" : "List the text of all tweets in the order of date."
  },
  {
    "query" : "query { user_profiles_aggregate { aggregate { max { followers } sum { followers } } } }",
    "schemaId" : "twitter_1",
    "question" : "Find the maximum and total number of followers of all users."
  },
  {
    "query" : "query { university ( order_by : { founded : asc } ) { school nickname } }",
    "schemaId" : "university_basketball",
    "question" : "List all schools and their nicknames in the order of founded year."
  },
  {
    "query" : "query { university ( order_by : { founded : asc } ) { school nickname } }",
    "schemaId" : "university_basketball",
    "question" : "What are the different schools and their nicknames, ordered by their founding years?"
  },
  {
    "query" : "query { university ( where : { affiliation : { _eq : \"Public\" } } ) { school location } }",
    "schemaId" : "university_basketball",
    "question" : "List all public schools and their locations."
  },
  {
    "query" : "query { university ( where : { affiliation : { _eq : \"Public\" } } ) { school location } }",
    "schemaId" : "university_basketball",
    "question" : "What are the public schools and what are their locations?"
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { enrollment : desc } ) { founded } }",
    "schemaId" : "university_basketball",
    "question" : "When was the school with the largest enrollment founded?"
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { enrollment : desc } ) { founded } }",
    "schemaId" : "university_basketball",
    "question" : "Return the founded year for the school with the largest enrollment."
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { founded : desc } , where : { affiliation : { _neq : \"Public\" } } ) { founded } }",
    "schemaId" : "university_basketball",
    "question" : "Find the founded year of the newest non public school."
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { founded : desc } , where : { affiliation : { _neq : \"Public\" } } ) { founded } }",
    "schemaId" : "university_basketball",
    "question" : "What is the founded year of the non public school that was founded most recently?"
  },
  {
    "query" : "query { basketball_match_aggregate { aggregate { count } } }",
    "schemaId" : "university_basketball",
    "question" : "How many schools are in the basketball match?"
  },
  {
    "query" : "query { basketball_match_aggregate { aggregate { count } } }",
    "schemaId" : "university_basketball",
    "question" : "Count the number of schools that have had basketball matches."
  },
  {
    "query" : "query { basketball_match ( limit : 1 , order_by : { acc_percent : desc } ) { acc_percent } }",
    "schemaId" : "university_basketball",
    "question" : "What is the highest acc percent score in the competition?"
  },
  {
    "query" : "query { basketball_match ( limit : 1 , order_by : { acc_percent : desc } ) { acc_percent } }",
    "schemaId" : "university_basketball",
    "question" : "Return the highest acc percent across all basketball matches."
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { basketball_matches_aggregate : { min : { acc_percent : asc } } } ) { primary_conference } }",
    "schemaId" : "university_basketball",
    "question" : "What is the primary conference of the school that has the lowest acc percent score in the competition?"
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { basketball_matches_aggregate : { min : { acc_percent : asc } } } ) { primary_conference } }",
    "schemaId" : "university_basketball",
    "question" : "Return the primary conference of the school with the lowest acc percentage score."
  },
  {
    "query" : "query { basketball_match ( limit : 1 , order_by : { university : { founded : asc } } ) { team_name acc_regular_season } }",
    "schemaId" : "university_basketball",
    "question" : "What is the team name and acc regular season score of the school that was founded for the longest time?"
  },
  {
    "query" : "query { basketball_match ( limit : 1 , order_by : { university : { founded : asc } } ) { team_name acc_regular_season } }",
    "schemaId" : "university_basketball",
    "question" : "Return the name of the team and the acc during the regular season for the school that was founded the earliest."
  },
  {
    "query" : "query { basketball_match ( where : { team_name : { _eq : \"Clemson\" } } ) { all_games university { location } } }",
    "schemaId" : "university_basketball",
    "question" : "Find the location and all games score of the school that has Clemson as its team name."
  },
  {
    "query" : "query { basketball_match ( where : { team_name : { _eq : \"Clemson\" } } ) { all_games university { location } } }",
    "schemaId" : "university_basketball",
    "question" : "What are the all games score and location of the school called Clemson?"
  },
  {
    "query" : "query { university_aggregate ( where : { founded : { _lt : 1850.0 } } ) { aggregate { avg { enrollment } } } }",
    "schemaId" : "university_basketball",
    "question" : "What are the average enrollment size of the universities that are founded before 1850?"
  },
  {
    "query" : "query { university_aggregate ( where : { founded : { _lt : 1850.0 } } ) { aggregate { avg { enrollment } } } }",
    "schemaId" : "university_basketball",
    "question" : "Return the average enrollment of universities founded before 1850."
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { founded : asc } ) { enrollment primary_conference } }",
    "schemaId" : "university_basketball",
    "question" : "Show the enrollment and primary_conference of the oldest college."
  },
  {
    "query" : "query { university ( limit : 1 , order_by : { founded : asc } ) { enrollment primary_conference } }",
    "schemaId" : "university_basketball",
    "question" : "What are the enrollment and primary conference for the university which was founded the earliest?"
  },
  {
    "query" : "query { university_aggregate { aggregate { sum { enrollment } min { enrollment } } } }",
    "schemaId" : "university_basketball",
    "question" : "What is the total and minimum enrollment of all schools?"
  },
  {
    "query" : "query { university_aggregate { aggregate { sum { enrollment } min { enrollment } } } }",
    "schemaId" : "university_basketball",
    "question" : "Return the total and minimum enrollments across all schools."
  },
  {
    "query" : "query { university ( where : { _or : [ { founded : { _gt : 1850.0 } } , { affiliation : { _eq : \"Public\" } } ] } ) { school } }",
    "schemaId" : "university_basketball",
    "question" : "Find the schools that were either founded after 1850 or public."
  },
  {
    "query" : "query { university ( where : { _or : [ { founded : { _gt : 1850.0 } } , { affiliation : { _eq : \"Public\" } } ] } ) { school } }",
    "schemaId" : "university_basketball",
    "question" : "What are the schools that were either founded before 1850 or are public?"
  },
  {
    "query" : "query { university_aggregate { aggregate { count } } }",
    "schemaId" : "university_basketball",
    "question" : "Find how many different affiliation types there are."
  },
  {
    "query" : "query { university_aggregate { aggregate { count } } }",
    "schemaId" : "university_basketball",
    "question" : "Count the number of different affiliation types."
  },
  {
    "query" : "query { university_aggregate ( where : { location : { _like : \"%NY%\" } } ) { aggregate { count } } }",
    "schemaId" : "university_basketball",
    "question" : "Find how many school locations have the word 'NY'."
  },
  {
    "query" : "query { university_aggregate ( where : { location : { _like : \"%NY%\" } } ) { aggregate { count } } }",
    "schemaId" : "university_basketball",
    "question" : "How many universities have a location that contains NY?"
  },
  {
    "query" : "query { university_aggregate { aggregate { max { enrollment } } } }",
    "schemaId" : "university_basketball",
    "question" : "What is the maximum enrollment across all schools?"
  },
  {
    "query" : "query { university_aggregate { aggregate { max { enrollment } } } }",
    "schemaId" : "university_basketball",
    "question" : "Return the maximum enrollment across all schools."
  },
  {
    "query" : "query { basketball_match { acc_home acc_percent acc_regular_season acc_road all_games all_games_percent all_home all_neutral all_road school_id team_id team_name } }",
    "schemaId" : "university_basketball",
    "question" : "List all information regarding the basketball match."
  },
  {
    "query" : "query { basketball_match { acc_home acc_percent acc_regular_season acc_road all_games all_games_percent all_home all_neutral all_road school_id team_id team_name } }",
    "schemaId" : "university_basketball",
    "question" : "What is all the information about the basketball match?"
  },
  {
    "query" : "query { basketball_match ( order_by : { all_home : desc } ) { team_name } }",
    "schemaId" : "university_basketball",
    "question" : "List names of all teams in the basketball competition, ordered by all home scores in descending order."
  },
  {
    "query" : "query { basketball_match ( order_by : { all_home : desc } ) { team_name } }",
    "schemaId" : "university_basketball",
    "question" : "What are the names of all the teams in the basketball competition, sorted by all home scores in descending order?"
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "voter_2",
    "question" : "Find the number of students in total."
  },
  {
    "query" : "query { student_aggregate { aggregate { count } } }",
    "schemaId" : "voter_2",
    "question" : "How many students are there in total?"
  },
  {
    "query" : "query { voting_record_aggregate { aggregate { count } } }",
    "schemaId" : "voter_2",
    "question" : "Find the number of voting records in total."
  },
  {
    "query" : "query { voting_record_aggregate { aggregate { count } } }",
    "schemaId" : "voter_2",
    "question" : "How many voting records do we have?"
  },
  {
    "query" : "query { voting_record_aggregate { aggregate { count } } }",
    "schemaId" : "voter_2",
    "question" : "Find the distinct number of president votes."
  },
  {
    "query" : "query { voting_record_aggregate { aggregate { count } } }",
    "schemaId" : "voter_2",
    "question" : "How many distinct president votes are recorded?"
  },
  {
    "query" : "query { student_aggregate { aggregate { max { age } } } }",
    "schemaId" : "voter_2",
    "question" : "Find the maximum age of all the students."
  },
  {
    "query" : "query { student_aggregate { aggregate { max { age } } } }",
    "schemaId" : "voter_2",
    "question" : "What is the oldest age among the students?"
  },
  {
    "query" : "query { student ( where : { major : { _eq : 50 } } ) { lname } }",
    "schemaId" : "voter_2",
    "question" : "Find the last names of students with major 50."
  },
  {
    "query" : "query { student ( where : { major : { _eq : 50 } } ) { lname } }",
    "schemaId" : "voter_2",
    "question" : "What are the last names of students studying major 50?"
  },
  {
    "query" : "query { student ( where : { age : { _gt : 22 } } ) { fname } }",
    "schemaId" : "voter_2",
    "question" : "Find the first names of students with age above 22."
  },
  {
    "query" : "query { student ( where : { age : { _gt : 22 } } ) { fname } }",
    "schemaId" : "voter_2",
    "question" : "What are the first names of all the students aged above 22?"
  },
  {
    "query" : "query { student ( where : { sex : { _eq : \"M\" } } ) { major } }",
    "schemaId" : "voter_2",
    "question" : "What are the majors of male (sex is M) students?"
  },
  {
    "query" : "query { student ( where : { sex : { _eq : \"M\" } } ) { major } }",
    "schemaId" : "voter_2",
    "question" : "List the major of each male student."
  },
  {
    "query" : "query { student_aggregate ( where : { sex : { _eq : \"F\" } } ) { aggregate { avg { age } } } }",
    "schemaId" : "voter_2",
    "question" : "What is the average age of female (sex is F) students?"
  },
  {
    "query" : "query { student_aggregate ( where : { sex : { _eq : \"F\" } } ) { aggregate { avg { age } } } }",
    "schemaId" : "voter_2",
    "question" : "Find the average age of female students."
  },
  {
    "query" : "query { student_aggregate ( where : { major : { _eq : 600 } } ) { aggregate { max { age } min { age } } } }",
    "schemaId" : "voter_2",
    "question" : "What are the maximum and minimum age of students with major 600?"
  },
  {
    "query" : "query { student_aggregate ( where : { major : { _eq : 600 } } ) { aggregate { max { age } min { age } } } }",
    "schemaId" : "voter_2",
    "question" : "Tell me the ages of the oldest and youngest students studying major 600."
  },
  {
    "query" : "query { student ( where : { city_code : { _eq : \"BAL\" } } ) { advisor } }",
    "schemaId" : "voter_2",
    "question" : "Who are the advisors for students that live in a city with city code \"BAL\"?"
  },
  {
    "query" : "query { student ( where : { city_code : { _eq : \"BAL\" } } ) { advisor } }",
    "schemaId" : "voter_2",
    "question" : "Show the advisors of the students whose city of residence has city code \"BAL\"."
  },
  {
    "query" : "query { voting_record ( where : { election_cycle : { _eq : \"Fall\" } } , distinct_on : secretary_vote ) { secretary_vote } }",
    "schemaId" : "voter_2",
    "question" : "What are the distinct secretary votes in the fall election cycle?"
  },
  {
    "query" : "query { voting_record ( where : { election_cycle : { _eq : \"Fall\" } } , distinct_on : secretary_vote ) { secretary_vote } }",
    "schemaId" : "voter_2",
    "question" : "Return all the distinct secretary votes made in the fall election cycle."
  },
  {
    "query" : "query { voting_record ( where : { registration_date : { _eq : \"08\/30\/2015\" } } , distinct_on : president_vote ) { president_vote } }",
    "schemaId" : "voter_2",
    "question" : "What are the distinct president votes on 08\/30\/2015?"
  },
  {
    "query" : "query { voting_record ( where : { registration_date : { _eq : \"08\/30\/2015\" } } , distinct_on : president_vote ) { president_vote } }",
    "schemaId" : "voter_2",
    "question" : "Show all the distinct president votes made on 08\/30\/2015."
  },
  {
    "query" : "query { student ( distinct_on : lname ) { lname } }",
    "schemaId" : "voter_2",
    "question" : "Find the distinct last names of the students who have class president votes."
  },
  {
    "query" : "query { student ( distinct_on : lname ) { lname } }",
    "schemaId" : "voter_2",
    "question" : "What are the distinct last names of the students who have class president votes?"
  },
  {
    "query" : "query { student ( distinct_on : fname ) { fname } }",
    "schemaId" : "voter_2",
    "question" : "Find the distinct first names of the students who have class senator votes."
  },
  {
    "query" : "query { student ( distinct_on : fname ) { fname } }",
    "schemaId" : "voter_2",
    "question" : "What are the distinct first names of the students who have class president votes?"
  },
  {
    "query" : "query { student ( distinct_on : major ) { major } }",
    "schemaId" : "voter_2",
    "question" : "Find the distinct majors of students who have treasurer votes."
  },
  {
    "query" : "query { student ( distinct_on : major ) { major } }",
    "schemaId" : "voter_2",
    "question" : "What are the distinct majors that students with treasurer votes are studying?"
  },
  {
    "query" : "query { church_aggregate ( where : { open_date : { _lt : 1850 } } ) { aggregate { count } } }",
    "schemaId" : "wedding",
    "question" : "How many churches opened before 1850 are there?"
  },
  {
    "query" : "query { church { name open_date organized_by } }",
    "schemaId" : "wedding",
    "question" : "Show the name, open date, and organizer for all churches."
  },
  {
    "query" : "query { church ( order_by : { open_date : desc } ) { name } }",
    "schemaId" : "wedding",
    "question" : "List all church names in descending order of opening date."
  },
  {
    "query" : "query { church ( where : { open_date : { _gte : 1830 , _lte : 1840 } } ) { organized_by name } }",
    "schemaId" : "wedding",
    "question" : "Show the organizer and name for churches that opened between 1830 and 1840."
  },
  {
    "query" : "query { church ( limit : 3 , order_by : { open_date : desc } ) { name open_date } }",
    "schemaId" : "wedding",
    "question" : "Show the name and opening year for three churches that opened most recently."
  },
  {
    "query" : "query { people_aggregate ( where : { _and : { age : { _gt : 30 } , is_male : { _eq : \"F\" } } } ) { aggregate { count } } }",
    "schemaId" : "wedding",
    "question" : "How many female people are older than 30 in our record?"
  },
  {
    "query" : "query { people_aggregate { aggregate { min { age } max { age } avg { age } } } }",
    "schemaId" : "wedding",
    "question" : "Show the minimum, maximum, and average age for all people."
  },
  {
    "query" : "query { wedding_aggregate ( where : { year : { _eq : 2016 } } ) { aggregate { count } } }",
    "schemaId" : "wedding",
    "question" : "How many weddings are there in year 2016?"
  },
  {
    "query" : "query { wedding_aggregate ( where : { year : { _eq : 2016 } } ) { aggregate { count } } }",
    "schemaId" : "wedding",
    "question" : "How many churches have a wedding in year 2016?"
  },
  {
    "query" : "query { wine ( limit : 1 , order_by : { score : asc } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What is the name of the highest rated wine?"
  },
  {
    "query" : "query { wine ( limit : 1 , order_by : { score : asc } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "Give the name of the wine with the highest score."
  },
  {
    "query" : "query { wine ( limit : 1 , order_by : { score : asc } ) { winery } }",
    "schemaId" : "wine_1",
    "question" : "Which winery is the wine that has the highest score from?"
  },
  {
    "query" : "query { wine ( limit : 1 , order_by : { score : asc } ) { winery } }",
    "schemaId" : "wine_1",
    "question" : "What is the winery at which the wine with the highest score was made?"
  },
  {
    "query" : "query { wine ( where : { year : { _eq : 2008 } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "Find the names of all wines produced in 2008."
  },
  {
    "query" : "query { wine ( where : { year : { _eq : 2008 } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the names of all wines produced in 2008?"
  },
  {
    "query" : "query { wine { grape appelation } }",
    "schemaId" : "wine_1",
    "question" : "List the grapes and appelations of all wines."
  },
  {
    "query" : "query { wine { grape appelation } }",
    "schemaId" : "wine_1",
    "question" : "What are the grapes and appelations of each wine?"
  },
  {
    "query" : "query { wine { name score } }",
    "schemaId" : "wine_1",
    "question" : "List the names and scores of all wines."
  },
  {
    "query" : "query { wine { name score } }",
    "schemaId" : "wine_1",
    "question" : "What are the names and scores of all wines?"
  },
  {
    "query" : "query { appellations { area county } }",
    "schemaId" : "wine_1",
    "question" : "List the area and county of all appelations."
  },
  {
    "query" : "query { appellations { area county } }",
    "schemaId" : "wine_1",
    "question" : "What are the areas and counties for all appelations?"
  },
  {
    "query" : "query { wine ( where : { year : { _lt : 2010 } } ) { price } }",
    "schemaId" : "wine_1",
    "question" : "What are the prices of wines produced before the year of 2010?"
  },
  {
    "query" : "query { wine ( where : { year : { _lt : 2010 } } ) { price } }",
    "schemaId" : "wine_1",
    "question" : "Return the prices of wines produced before 2010."
  },
  {
    "query" : "query { wine ( where : { score : { _gt : 90 } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "List the names of all distinct wines that have scores higher than 90."
  },
  {
    "query" : "query { wine ( where : { score : { _gt : 90 } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the names of wines with scores higher than 90?"
  },
  {
    "query" : "query { wine ( where : { grapeByGrape : { color : { _eq : \"Red\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "List the names of all distinct wines that are made of red color grape."
  },
  {
    "query" : "query { wine ( where : { grapeByGrape : { color : { _eq : \"Red\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the names of wines made from red grapes?"
  },
  {
    "query" : "query { wine ( where : { appellation : { area : { _eq : \"North Coast\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "Find the names of all distinct wines that have appellations in North Coast area."
  },
  {
    "query" : "query { wine ( where : { appellation : { area : { _eq : \"North Coast\" } } } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the distinct names of wines that have appellations in the North Coast area?"
  },
  {
    "query" : "query { wine_aggregate ( where : { winery : { _eq : \"Robert Biale\" } } ) { aggregate { count } } }",
    "schemaId" : "wine_1",
    "question" : "How many wines are produced at Robert Biale winery?"
  },
  {
    "query" : "query { wine_aggregate ( where : { winery : { _eq : \"Robert Biale\" } } ) { aggregate { count } } }",
    "schemaId" : "wine_1",
    "question" : "Count the number of wines produced at Robert Biale winery."
  },
  {
    "query" : "query { appellations_aggregate ( where : { county : { _eq : \"Napa\" } } ) { aggregate { count } } }",
    "schemaId" : "wine_1",
    "question" : "How many appelations are in Napa Country?"
  },
  {
    "query" : "query { appellations_aggregate ( where : { county : { _eq : \"Napa\" } } ) { aggregate { count } } }",
    "schemaId" : "wine_1",
    "question" : "Count the number of appelations in Napa County."
  },
  {
    "query" : "query { wine_aggregate ( where : { appellation : { county : { _eq : \"Sonoma\" } } } ) { aggregate { avg { price } } } }",
    "schemaId" : "wine_1",
    "question" : "Give me the average prices of wines that are produced by appelations in Sonoma County."
  },
  {
    "query" : "query { wine_aggregate ( where : { appellation : { county : { _eq : \"Sonoma\" } } } ) { aggregate { avg { price } } } }",
    "schemaId" : "wine_1",
    "question" : "What is the average price of wines produced in appelations in Sonoma County?"
  },
  {
    "query" : "query { wine ( where : { grapeByGrape : { color : { _eq : \"White\" } } } ) { name score } }",
    "schemaId" : "wine_1",
    "question" : "What are the names and scores of wines that are made of white color grapes?"
  },
  {
    "query" : "query { wine ( where : { grapeByGrape : { color : { _eq : \"White\" } } } ) { name score } }",
    "schemaId" : "wine_1",
    "question" : "Give the names and scores of wines made from white grapes."
  },
  {
    "query" : "query { wine_aggregate ( where : { _and : { appellation : { area : { _eq : \"Central Coast\" } } , year : { _lt : 2005 } } } ) { aggregate { max { price } } } }",
    "schemaId" : "wine_1",
    "question" : "Find the maximum price of wins from the appelations in Central Coast area and produced before the year of 2005."
  },
  {
    "query" : "query { wine_aggregate ( where : { _and : { year : { _lt : 2005 } , appellation : { area : { _eq : \"Central Coast\" } } } } ) { aggregate { max { price } } } }",
    "schemaId" : "wine_1",
    "question" : "What is the maximum price of wines from the appelation in the Central Coast area, which was produced before 2005?"
  },
  {
    "query" : "query { grapes ( where : { _and : { wines : { score : { _gt : 90 } } , color : { _eq : \"White\" } } } , distinct_on : grape ) { grape } }",
    "schemaId" : "wine_1",
    "question" : "Find the the grape whose white color grapes are used to produce wines with scores higher than 90."
  },
  {
    "query" : "query { grapes ( where : { _and : { wines : { score : { _gt : 90 } } , color : { _eq : \"White\" } } } , distinct_on : grape ) { grape } }",
    "schemaId" : "wine_1",
    "question" : "Find the white grape used to produce wines with scores above 90."
  },
  {
    "query" : "query { wine ( where : { _and : { grapeByGrape : { color : { _eq : \"Red\" } } , price : { _gt : 50 } } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the wines that have prices higher than 50 and made of Red color grapes?"
  },
  {
    "query" : "query { wine ( where : { _and : { grapeByGrape : { color : { _eq : \"Red\" } } , price : { _gt : 50 } } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the names of wines made from red grapes and with prices above 50?"
  },
  {
    "query" : "query { wine ( where : { _and : { appellation : { county : { _eq : \"Monterey\" } } , price : { _lt : 50 } } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the wines that have prices lower than 50 and have appelations in Monterey county?"
  },
  {
    "query" : "query { wine ( where : { _and : { appellation : { county : { _eq : \"Monterey\" } } , price : { _lt : 50 } } } ) { name } }",
    "schemaId" : "wine_1",
    "question" : "Give the neames of wines with prices below 50 and with appelations in Monterey county."
  },
  {
    "query" : "query { wine ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "List the names of all distinct wines in alphabetical order."
  },
  {
    "query" : "query { wine ( order_by : { name : asc } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the names of wines, sorted in alphabetical order?"
  },
  {
    "query" : "query { wine ( order_by : { price : asc } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "List the names of all distinct wines ordered by price."
  },
  {
    "query" : "query { wine ( order_by : { price : asc } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "What are the names of wines, sorted by price ascending?"
  },
  {
    "query" : "query { wine ( where : { _or : [ { year : { _lt : 2000 } } , { year : { _gt : 2010 } } ] } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "Find the distinct names of wines produced before the year of 2000 or after the year of 2010."
  },
  {
    "query" : "query { wine ( where : { _or : [ { year : { _lt : 2000 } } , { year : { _gt : 2010 } } ] } , distinct_on : name ) { name } }",
    "schemaId" : "wine_1",
    "question" : "Give the distinct names of wines made before 2000 or after 2010."
  },
  {
    "query" : "query { wine ( where : { price : { _gte : 50 , _lte : 100 } } , distinct_on : winery ) { winery } }",
    "schemaId" : "wine_1",
    "question" : "Find the distinct winery of wines having price between 50 and 100."
  },
  {
    "query" : "query { wine ( where : { price : { _gte : 50 , _lte : 100 } } , distinct_on : winery ) { winery } }",
    "schemaId" : "wine_1",
    "question" : "What are the distinct wineries which produce wines costing between 50 and 100?"
  },
  {
    "query" : "query { wine_aggregate ( where : { _and : { year : { _eq : 2009 } , grape : { _eq : \"Zinfandel\" } } } ) { aggregate { avg { price } avg { cases } } } }",
    "schemaId" : "wine_1",
    "question" : "What are the average prices and cases of wines produced in the year of 2009 and made of Zinfandel grape?"
  },
  {
    "query" : "query { wine_aggregate ( where : { _and : { grape : { _eq : \"Zinfandel\" } , year : { _eq : 2009 } } } ) { aggregate { avg { price } avg { cases } } } }",
    "schemaId" : "wine_1",
    "question" : "Give the average price and case of wines made from Zinfandel grapes in the year 2009."
  },
  {
    "query" : "query { wine_aggregate ( where : { appelation : { _eq : \"St. Helena\" } } ) { aggregate { max { price } max { score } } } }",
    "schemaId" : "wine_1",
    "question" : "What are the maximum price and score of wines produced by St. Helena appelation?"
  },
  {
    "query" : "query { wine_aggregate ( where : { appelation : { _eq : \"St. Helena\" } } ) { aggregate { max { price } max { score } } } }",
    "schemaId" : "wine_1",
    "question" : "Give the maximum price and score for wines produced in the appelation St. Helena."
  },
  {
    "query" : "query { wine ( order_by : { year : asc } , where : { price : { _gt : 100 } } ) { grape winery year } }",
    "schemaId" : "wine_1",
    "question" : "List the grape, winery and year of the wines whose price is bigger than 100 ordered by year."
  },
  {
    "query" : "query { wine ( order_by : { year : asc } , where : { price : { _gt : 100 } } ) { grape winery year } }",
    "schemaId" : "wine_1",
    "question" : "What are the grapes, wineries and years for wines with price higher than 100, sorted by year?"
  },
  {
    "query" : "query { wine ( order_by : { name : asc } , where : { score : { _gt : 93 } } ) { grape appelation name } }",
    "schemaId" : "wine_1",
    "question" : "List the grape, appelation and name of wines whose score is higher than 93 ordered by Name."
  },
  {
    "query" : "query { wine ( order_by : { name : asc } , where : { score : { _gt : 93 } } ) { grape appelation name } }",
    "schemaId" : "wine_1",
    "question" : "What are the grapes, appelations, and wines with scores above 93, sorted by Name?"
  },
  {
    "query" : "query { submission_aggregate { aggregate { count } } }",
    "schemaId" : "workshop_paper",
    "question" : "How many submissions are there?"
  },
  {
    "query" : "query { submission_aggregate { aggregate { count } } }",
    "schemaId" : "workshop_paper",
    "question" : "Count the number of submissions."
  },
  {
    "query" : "query { submission ( order_by : { scores : asc } ) { author } }",
    "schemaId" : "workshop_paper",
    "question" : "List the authors of submissions in ascending order of scores."
  },
  {
    "query" : "query { submission ( order_by : { scores : asc } ) { author } }",
    "schemaId" : "workshop_paper",
    "question" : "Find the author for each submission and list them in ascending order of submission score."
  },
  {
    "query" : "query { submission { author college } }",
    "schemaId" : "workshop_paper",
    "question" : "What are the authors of submissions and their colleges?"
  },
  {
    "query" : "query { submission { author college } }",
    "schemaId" : "workshop_paper",
    "question" : "For each submission, show the author and their affiliated college."
  },
  {
    "query" : "query { submission ( where : { _or : [ { college : { _eq : \"Florida\" } } , { college : { _eq : \"Temple\" } } ] } ) { author } }",
    "schemaId" : "workshop_paper",
    "question" : "Show the names of authors from college \"Florida\" or \"Temple\""
  },
  {
    "query" : "query { submission ( where : { _or : [ { college : { _eq : \"Florida\" } } , { college : { _eq : \"Temple\" } } ] } ) { author } }",
    "schemaId" : "workshop_paper",
    "question" : "Which authors with submissions are from college \"Florida\" or \"Temple\"?"
  },
  {
    "query" : "query { submission_aggregate { aggregate { avg { scores } } } }",
    "schemaId" : "workshop_paper",
    "question" : "What is the average score of submissions?"
  },
  {
    "query" : "query { submission_aggregate { aggregate { avg { scores } } } }",
    "schemaId" : "workshop_paper",
    "question" : "Compute the average score of submissions."
  },
  {
    "query" : "query { submission ( limit : 1 , order_by : { scores : desc } ) { author } }",
    "schemaId" : "workshop_paper",
    "question" : "What is the author of the submission with the highest score?"
  },
  {
    "query" : "query { submission ( limit : 1 , order_by : { scores : desc } ) { author } }",
    "schemaId" : "workshop_paper",
    "question" : "Find the author who achieved the highest score in a submission."
  },
  {
    "query" : "query { submission { author acceptances { result } } }",
    "schemaId" : "workshop_paper",
    "question" : "Show the authors of submissions and the acceptance results of their submissions."
  },
  {
    "query" : "query { submission { author acceptances { result } } }",
    "schemaId" : "workshop_paper",
    "question" : "For each submission, find its author and acceptance result."
  },
  {
    "query" : "query { acceptance ( limit : 1 , order_by : { submission : { scores : desc } } ) { result } }",
    "schemaId" : "workshop_paper",
    "question" : "Show the result of the submission with the highest score."
  },
  {
    "query" : "query { acceptance ( limit : 1 , order_by : { submission : { scores : desc } } ) { result } }",
    "schemaId" : "workshop_paper",
    "question" : "Which submission received the highest score in acceptance result. Show me the result."
  },
  {
    "query" : "query { workshop ( order_by : { venue : asc } ) { date venue } }",
    "schemaId" : "workshop_paper",
    "question" : "Show the date and venue of each workshop in ascending alphabetical order of the venue."
  },
  {
    "query" : "query { workshop ( order_by : { venue : asc } ) { date venue } }",
    "schemaId" : "workshop_paper",
    "question" : "Sort the each workshop in alphabetical order of the venue. Return the date and venue of each workshop."
  },
  {
    "query" : "query { wrestler_aggregate { aggregate { count } } }",
    "schemaId" : "wrestler",
    "question" : "How many wrestlers are there?"
  },
  {
    "query" : "query { wrestler_aggregate { aggregate { count } } }",
    "schemaId" : "wrestler",
    "question" : "Count the number of wrestlers."
  },
  {
    "query" : "query { wrestler ( order_by : { days_held : desc } ) { name } }",
    "schemaId" : "wrestler",
    "question" : "List the names of wrestlers in descending order of days held."
  },
  {
    "query" : "query { wrestler ( order_by : { days_held : desc } ) { name } }",
    "schemaId" : "wrestler",
    "question" : "What are the names of the wrestlers, ordered descending by days held?"
  },
  {
    "query" : "query { wrestler ( limit : 1 , order_by : { days_held : asc } ) { name } }",
    "schemaId" : "wrestler",
    "question" : "What is the name of the wrestler with the fewest days held?"
  },
  {
    "query" : "query { wrestler ( limit : 1 , order_by : { days_held : asc } ) { name } }",
    "schemaId" : "wrestler",
    "question" : "Return the name of the wrestler who had the lowest number of days held."
  },
  {
    "query" : "query { wrestler ( where : { location : { _neq : \"Tokyo , Japan\" } } , distinct_on : reign ) { reign } }",
    "schemaId" : "wrestler",
    "question" : "What are the distinct reigns of wrestlers whose location is not \"Tokyo,Japan\" ?"
  },
  {
    "query" : "query { wrestler ( where : { location : { _neq : \"Tokyo , Japan\" } } , distinct_on : reign ) { reign } }",
    "schemaId" : "wrestler",
    "question" : "Give the different reigns of wrestlers who are not located in Tokyo, Japan."
  },
  {
    "query" : "query { wrestler { name location } }",
    "schemaId" : "wrestler",
    "question" : "What are the names and location of the wrestlers?"
  },
  {
    "query" : "query { wrestler { name location } }",
    "schemaId" : "wrestler",
    "question" : "Give the names and locations of all wrestlers."
  },
  {
    "query" : "query { elimination ( where : { team : { _eq : \"Team Orton\" } } ) { elimination_move } }",
    "schemaId" : "wrestler",
    "question" : "What are the elimination moves of wrestlers whose team is \"Team Orton\"?"
  },
  {
    "query" : "query { elimination ( where : { team : { _eq : \"Team Orton\" } } ) { elimination_move } }",
    "schemaId" : "wrestler",
    "question" : "Return the elimination movies of wrestlers on Team Orton."
  },
  {
    "query" : "query { wrestler { name eliminations { elimination_move } } }",
    "schemaId" : "wrestler",
    "question" : "What are the names of wrestlers and the elimination moves?"
  },
  {
    "query" : "query { wrestler { name eliminations { elimination_move } } }",
    "schemaId" : "wrestler",
    "question" : "Give the names of wrestlers and their elimination moves."
  },
  {
    "query" : "query { wrestler ( order_by : { days_held : desc } ) { name eliminations { team } } }",
    "schemaId" : "wrestler",
    "question" : "List the names of wrestlers and the teams in elimination in descending order of days held."
  },
  {
    "query" : "query { wrestler ( order_by : { days_held : desc } ) { name eliminations { team } } }",
    "schemaId" : "wrestler",
    "question" : "What are the names of wrestlers and their teams in elimination, ordered descending by days held?"
  },
  {
    "query" : "query { elimination ( limit : 1 , order_by : { wrestler : { days_held : desc } } ) { time } }",
    "schemaId" : "wrestler",
    "question" : "List the time of elimination of the wrestlers with largest days held."
  },
  {
    "query" : "query { elimination ( limit : 1 , order_by : { wrestler : { days_held : desc } } ) { time } }",
    "schemaId" : "wrestler",
    "question" : "What is the time of elimination for the wrestler with the most days held?"
  },
  {
    "query" : "query { elimination ( where : { wrestler : { days_held : { _gt : \"50\" } } } ) { time } }",
    "schemaId" : "wrestler",
    "question" : "Show times of elimination of wrestlers with days held more than 50."
  },
  {
    "query" : "query { elimination ( where : { wrestler : { days_held : { _gt : \"50\" } } } ) { time } }",
    "schemaId" : "wrestler",
    "question" : "What are the times of elimination for wrestlers with over 50 days held?"
  },
  {
    "query" : "query { wrestler { reign days_held } }",
    "schemaId" : "wrestler",
    "question" : "Show the reign and days held of wrestlers."
  },
  {
    "query" : "query { wrestler { reign days_held } }",
    "schemaId" : "wrestler",
    "question" : "What are the reigns and days held of all wrestlers?"
  },
  {
    "query" : "query { wrestler ( where : { days_held : { _lt : \"100\" } } ) { name } }",
    "schemaId" : "wrestler",
    "question" : "What are the names of wrestlers days held less than 100?"
  },
  {
    "query" : "query { wrestler ( where : { days_held : { _lt : \"100\" } } ) { name } }",
    "schemaId" : "wrestler",
    "question" : "Return the names of wrestlers with fewer than 100 days held."
  },
  {
    "query" : "query { elimination_aggregate { aggregate { count } } }",
    "schemaId" : "wrestler",
    "question" : "What is the number of distinct teams that suffer elimination?"
  },
  {
    "query" : "query { elimination_aggregate { aggregate { count } } }",
    "schemaId" : "wrestler",
    "question" : "How many different teams have had eliminated wrestlers?"
  },
  {
    "query" : "query { elimination ( where : { _or : [ { eliminated_by : { _eq : \"Punk\" } } , { eliminated_by : { _eq : \"Orton\" } } ] } ) { time } }",
    "schemaId" : "wrestler",
    "question" : "Show the times of elimination by \"Punk\" or \"Orton\"."
  },
  {
    "query" : "query { elimination ( where : { _or : [ { eliminated_by : { _eq : \"Punk\" } } , { eliminated_by : { _eq : \"Orton\" } } ] } ) { time } }",
    "schemaId" : "wrestler",
    "question" : "What are the times of elimination for any instances in which the elimination was done by Punk or Orton?"
  }
]
