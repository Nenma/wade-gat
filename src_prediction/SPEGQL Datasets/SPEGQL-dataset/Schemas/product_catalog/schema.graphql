schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

"""
columns and relationships of "attribute_definitions"
"""
type attribute_definitions {
  attribute_data_type: String
  attribute_id: bigint!
  attribute_name: String

  """An array relationship"""
  catalog_contents_additional_attributes(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): [catalog_contents_additional_attributes!]!

  """An aggregated array relationship"""
  catalog_contents_additional_attributes_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): catalog_contents_additional_attributes_aggregate!
}

"""
aggregated selection of "attribute_definitions"
"""
type attribute_definitions_aggregate {
  aggregate: attribute_definitions_aggregate_fields
  nodes: [attribute_definitions!]!
}

"""
aggregate fields of "attribute_definitions"
"""
type attribute_definitions_aggregate_fields {
  avg: attribute_definitions_avg_fields
  count(columns: [attribute_definitions_select_column!], distinct: Boolean): Int
  max: attribute_definitions_max_fields
  min: attribute_definitions_min_fields
  stddev: attribute_definitions_stddev_fields
  stddev_pop: attribute_definitions_stddev_pop_fields
  stddev_samp: attribute_definitions_stddev_samp_fields
  sum: attribute_definitions_sum_fields
  var_pop: attribute_definitions_var_pop_fields
  var_samp: attribute_definitions_var_samp_fields
  variance: attribute_definitions_variance_fields
}

"""
order by aggregate values of table "attribute_definitions"
"""
input attribute_definitions_aggregate_order_by {
  avg: attribute_definitions_avg_order_by
  count: order_by
  max: attribute_definitions_max_order_by
  min: attribute_definitions_min_order_by
  stddev: attribute_definitions_stddev_order_by
  stddev_pop: attribute_definitions_stddev_pop_order_by
  stddev_samp: attribute_definitions_stddev_samp_order_by
  sum: attribute_definitions_sum_order_by
  var_pop: attribute_definitions_var_pop_order_by
  var_samp: attribute_definitions_var_samp_order_by
  variance: attribute_definitions_variance_order_by
}

"""
input type for inserting array relation for remote table "attribute_definitions"
"""
input attribute_definitions_arr_rel_insert_input {
  data: [attribute_definitions_insert_input!]!
  on_conflict: attribute_definitions_on_conflict
}

"""aggregate avg on columns"""
type attribute_definitions_avg_fields {
  attribute_id: Float
}

"""
order by avg() on columns of table "attribute_definitions"
"""
input attribute_definitions_avg_order_by {
  attribute_id: order_by
}

"""
Boolean expression to filter rows from the table "attribute_definitions". All fields are combined with a logical 'AND'.
"""
input attribute_definitions_bool_exp {
  _and: [attribute_definitions_bool_exp]
  _not: attribute_definitions_bool_exp
  _or: [attribute_definitions_bool_exp]
  attribute_data_type: String_comparison_exp
  attribute_id: bigint_comparison_exp
  attribute_name: String_comparison_exp
  catalog_contents_additional_attributes: catalog_contents_additional_attributes_bool_exp
}

"""
unique or primary key constraints on table "attribute_definitions"
"""
enum attribute_definitions_constraint {
  """unique or primary key constraint"""
  idx_26132_attribute_definitions_pkey
}

"""
input type for incrementing integer column in table "attribute_definitions"
"""
input attribute_definitions_inc_input {
  attribute_id: bigint
}

"""
input type for inserting data into table "attribute_definitions"
"""
input attribute_definitions_insert_input {
  attribute_data_type: String
  attribute_id: bigint
  attribute_name: String
  catalog_contents_additional_attributes: catalog_contents_additional_attributes_arr_rel_insert_input
}

"""aggregate max on columns"""
type attribute_definitions_max_fields {
  attribute_data_type: String
  attribute_id: bigint
  attribute_name: String
}

"""
order by max() on columns of table "attribute_definitions"
"""
input attribute_definitions_max_order_by {
  attribute_data_type: order_by
  attribute_id: order_by
  attribute_name: order_by
}

"""aggregate min on columns"""
type attribute_definitions_min_fields {
  attribute_data_type: String
  attribute_id: bigint
  attribute_name: String
}

"""
order by min() on columns of table "attribute_definitions"
"""
input attribute_definitions_min_order_by {
  attribute_data_type: order_by
  attribute_id: order_by
  attribute_name: order_by
}

"""
response of any mutation on the table "attribute_definitions"
"""
type attribute_definitions_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [attribute_definitions!]!
}

"""
input type for inserting object relation for remote table "attribute_definitions"
"""
input attribute_definitions_obj_rel_insert_input {
  data: attribute_definitions_insert_input!
  on_conflict: attribute_definitions_on_conflict
}

"""
on conflict condition type for table "attribute_definitions"
"""
input attribute_definitions_on_conflict {
  constraint: attribute_definitions_constraint!
  update_columns: [attribute_definitions_update_column!]!
  where: attribute_definitions_bool_exp
}

"""
ordering options when selecting data from "attribute_definitions"
"""
input attribute_definitions_order_by {
  attribute_data_type: order_by
  attribute_id: order_by
  attribute_name: order_by
  catalog_contents_additional_attributes_aggregate: catalog_contents_additional_attributes_aggregate_order_by
}

"""
primary key columns input for table: "attribute_definitions"
"""
input attribute_definitions_pk_columns_input {
  attribute_id: bigint!
}

"""
select columns of table "attribute_definitions"
"""
enum attribute_definitions_select_column {
  """column name"""
  attribute_data_type

  """column name"""
  attribute_id

  """column name"""
  attribute_name
}

"""
input type for updating data in table "attribute_definitions"
"""
input attribute_definitions_set_input {
  attribute_data_type: String
  attribute_id: bigint
  attribute_name: String
}

"""aggregate stddev on columns"""
type attribute_definitions_stddev_fields {
  attribute_id: Float
}

"""
order by stddev() on columns of table "attribute_definitions"
"""
input attribute_definitions_stddev_order_by {
  attribute_id: order_by
}

"""aggregate stddev_pop on columns"""
type attribute_definitions_stddev_pop_fields {
  attribute_id: Float
}

"""
order by stddev_pop() on columns of table "attribute_definitions"
"""
input attribute_definitions_stddev_pop_order_by {
  attribute_id: order_by
}

"""aggregate stddev_samp on columns"""
type attribute_definitions_stddev_samp_fields {
  attribute_id: Float
}

"""
order by stddev_samp() on columns of table "attribute_definitions"
"""
input attribute_definitions_stddev_samp_order_by {
  attribute_id: order_by
}

"""aggregate sum on columns"""
type attribute_definitions_sum_fields {
  attribute_id: bigint
}

"""
order by sum() on columns of table "attribute_definitions"
"""
input attribute_definitions_sum_order_by {
  attribute_id: order_by
}

"""
update columns of table "attribute_definitions"
"""
enum attribute_definitions_update_column {
  """column name"""
  attribute_data_type

  """column name"""
  attribute_id

  """column name"""
  attribute_name
}

"""aggregate var_pop on columns"""
type attribute_definitions_var_pop_fields {
  attribute_id: Float
}

"""
order by var_pop() on columns of table "attribute_definitions"
"""
input attribute_definitions_var_pop_order_by {
  attribute_id: order_by
}

"""aggregate var_samp on columns"""
type attribute_definitions_var_samp_fields {
  attribute_id: Float
}

"""
order by var_samp() on columns of table "attribute_definitions"
"""
input attribute_definitions_var_samp_order_by {
  attribute_id: order_by
}

"""aggregate variance on columns"""
type attribute_definitions_variance_fields {
  attribute_id: Float
}

"""
order by variance() on columns of table "attribute_definitions"
"""
input attribute_definitions_variance_order_by {
  attribute_id: order_by
}

scalar bigint

"""
expression to compare columns of type bigint. All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""
columns and relationships of "catalog_contents"
"""
type catalog_contents {
  capacity: String

  """An array relationship"""
  catalog_contents_additional_attributes(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): [catalog_contents_additional_attributes!]!

  """An aggregated array relationship"""
  catalog_contents_additional_attributes_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): catalog_contents_additional_attributes_aggregate!
  catalog_entry_id: bigint!
  catalog_entry_name: String
  catalog_level_number: bigint

  """An object relationship"""
  catalog_structure: catalog_structure
  height: String
  length: String
  next_entry_id: bigint
  parent_entry_id: bigint
  previous_entry_id: bigint
  price_in_dollars: float8
  price_in_euros: float8
  price_in_pounds: float8
  product_stock_number: String
  width: String
}

"""
columns and relationships of "catalog_contents_additional_attributes"
"""
type catalog_contents_additional_attributes {
  """An object relationship"""
  attribute_definition: attribute_definitions
  attribute_id: bigint
  attribute_value: String

  """An object relationship"""
  catalog_content: catalog_contents
  catalog_entry_id: bigint
  catalog_level_number: bigint

  """An object relationship"""
  catalog_structure: catalog_structure
}

"""
aggregated selection of "catalog_contents_additional_attributes"
"""
type catalog_contents_additional_attributes_aggregate {
  aggregate: catalog_contents_additional_attributes_aggregate_fields
  nodes: [catalog_contents_additional_attributes!]!
}

"""
aggregate fields of "catalog_contents_additional_attributes"
"""
type catalog_contents_additional_attributes_aggregate_fields {
  avg: catalog_contents_additional_attributes_avg_fields
  count(columns: [catalog_contents_additional_attributes_select_column!], distinct: Boolean): Int
  max: catalog_contents_additional_attributes_max_fields
  min: catalog_contents_additional_attributes_min_fields
  stddev: catalog_contents_additional_attributes_stddev_fields
  stddev_pop: catalog_contents_additional_attributes_stddev_pop_fields
  stddev_samp: catalog_contents_additional_attributes_stddev_samp_fields
  sum: catalog_contents_additional_attributes_sum_fields
  var_pop: catalog_contents_additional_attributes_var_pop_fields
  var_samp: catalog_contents_additional_attributes_var_samp_fields
  variance: catalog_contents_additional_attributes_variance_fields
}

"""
order by aggregate values of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_aggregate_order_by {
  avg: catalog_contents_additional_attributes_avg_order_by
  count: order_by
  max: catalog_contents_additional_attributes_max_order_by
  min: catalog_contents_additional_attributes_min_order_by
  stddev: catalog_contents_additional_attributes_stddev_order_by
  stddev_pop: catalog_contents_additional_attributes_stddev_pop_order_by
  stddev_samp: catalog_contents_additional_attributes_stddev_samp_order_by
  sum: catalog_contents_additional_attributes_sum_order_by
  var_pop: catalog_contents_additional_attributes_var_pop_order_by
  var_samp: catalog_contents_additional_attributes_var_samp_order_by
  variance: catalog_contents_additional_attributes_variance_order_by
}

"""
input type for inserting array relation for remote table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_arr_rel_insert_input {
  data: [catalog_contents_additional_attributes_insert_input!]!
}

"""aggregate avg on columns"""
type catalog_contents_additional_attributes_avg_fields {
  attribute_id: Float
  catalog_entry_id: Float
  catalog_level_number: Float
}

"""
order by avg() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_avg_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""
Boolean expression to filter rows from the table
"catalog_contents_additional_attributes". All fields are combined with a logical 'AND'.
"""
input catalog_contents_additional_attributes_bool_exp {
  _and: [catalog_contents_additional_attributes_bool_exp]
  _not: catalog_contents_additional_attributes_bool_exp
  _or: [catalog_contents_additional_attributes_bool_exp]
  attribute_definition: attribute_definitions_bool_exp
  attribute_id: bigint_comparison_exp
  attribute_value: String_comparison_exp
  catalog_content: catalog_contents_bool_exp
  catalog_entry_id: bigint_comparison_exp
  catalog_level_number: bigint_comparison_exp
  catalog_structure: catalog_structure_bool_exp
}

"""
input type for incrementing integer column in table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_inc_input {
  attribute_id: bigint
  catalog_entry_id: bigint
  catalog_level_number: bigint
}

"""
input type for inserting data into table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_insert_input {
  attribute_definition: attribute_definitions_obj_rel_insert_input
  attribute_id: bigint
  attribute_value: String
  catalog_content: catalog_contents_obj_rel_insert_input
  catalog_entry_id: bigint
  catalog_level_number: bigint
  catalog_structure: catalog_structure_obj_rel_insert_input
}

"""aggregate max on columns"""
type catalog_contents_additional_attributes_max_fields {
  attribute_id: bigint
  attribute_value: String
  catalog_entry_id: bigint
  catalog_level_number: bigint
}

"""
order by max() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_max_order_by {
  attribute_id: order_by
  attribute_value: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""aggregate min on columns"""
type catalog_contents_additional_attributes_min_fields {
  attribute_id: bigint
  attribute_value: String
  catalog_entry_id: bigint
  catalog_level_number: bigint
}

"""
order by min() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_min_order_by {
  attribute_id: order_by
  attribute_value: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""
response of any mutation on the table "catalog_contents_additional_attributes"
"""
type catalog_contents_additional_attributes_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [catalog_contents_additional_attributes!]!
}

"""
input type for inserting object relation for remote table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_obj_rel_insert_input {
  data: catalog_contents_additional_attributes_insert_input!
}

"""
ordering options when selecting data from "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_order_by {
  attribute_definition: attribute_definitions_order_by
  attribute_id: order_by
  attribute_value: order_by
  catalog_content: catalog_contents_order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
  catalog_structure: catalog_structure_order_by
}

"""
select columns of table "catalog_contents_additional_attributes"
"""
enum catalog_contents_additional_attributes_select_column {
  """column name"""
  attribute_id

  """column name"""
  attribute_value

  """column name"""
  catalog_entry_id

  """column name"""
  catalog_level_number
}

"""
input type for updating data in table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_set_input {
  attribute_id: bigint
  attribute_value: String
  catalog_entry_id: bigint
  catalog_level_number: bigint
}

"""aggregate stddev on columns"""
type catalog_contents_additional_attributes_stddev_fields {
  attribute_id: Float
  catalog_entry_id: Float
  catalog_level_number: Float
}

"""
order by stddev() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_stddev_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""aggregate stddev_pop on columns"""
type catalog_contents_additional_attributes_stddev_pop_fields {
  attribute_id: Float
  catalog_entry_id: Float
  catalog_level_number: Float
}

"""
order by stddev_pop() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_stddev_pop_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""aggregate stddev_samp on columns"""
type catalog_contents_additional_attributes_stddev_samp_fields {
  attribute_id: Float
  catalog_entry_id: Float
  catalog_level_number: Float
}

"""
order by stddev_samp() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_stddev_samp_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""aggregate sum on columns"""
type catalog_contents_additional_attributes_sum_fields {
  attribute_id: bigint
  catalog_entry_id: bigint
  catalog_level_number: bigint
}

"""
order by sum() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_sum_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""aggregate var_pop on columns"""
type catalog_contents_additional_attributes_var_pop_fields {
  attribute_id: Float
  catalog_entry_id: Float
  catalog_level_number: Float
}

"""
order by var_pop() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_var_pop_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""aggregate var_samp on columns"""
type catalog_contents_additional_attributes_var_samp_fields {
  attribute_id: Float
  catalog_entry_id: Float
  catalog_level_number: Float
}

"""
order by var_samp() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_var_samp_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""aggregate variance on columns"""
type catalog_contents_additional_attributes_variance_fields {
  attribute_id: Float
  catalog_entry_id: Float
  catalog_level_number: Float
}

"""
order by variance() on columns of table "catalog_contents_additional_attributes"
"""
input catalog_contents_additional_attributes_variance_order_by {
  attribute_id: order_by
  catalog_entry_id: order_by
  catalog_level_number: order_by
}

"""
aggregated selection of "catalog_contents"
"""
type catalog_contents_aggregate {
  aggregate: catalog_contents_aggregate_fields
  nodes: [catalog_contents!]!
}

"""
aggregate fields of "catalog_contents"
"""
type catalog_contents_aggregate_fields {
  avg: catalog_contents_avg_fields
  count(columns: [catalog_contents_select_column!], distinct: Boolean): Int
  max: catalog_contents_max_fields
  min: catalog_contents_min_fields
  stddev: catalog_contents_stddev_fields
  stddev_pop: catalog_contents_stddev_pop_fields
  stddev_samp: catalog_contents_stddev_samp_fields
  sum: catalog_contents_sum_fields
  var_pop: catalog_contents_var_pop_fields
  var_samp: catalog_contents_var_samp_fields
  variance: catalog_contents_variance_fields
}

"""
order by aggregate values of table "catalog_contents"
"""
input catalog_contents_aggregate_order_by {
  avg: catalog_contents_avg_order_by
  count: order_by
  max: catalog_contents_max_order_by
  min: catalog_contents_min_order_by
  stddev: catalog_contents_stddev_order_by
  stddev_pop: catalog_contents_stddev_pop_order_by
  stddev_samp: catalog_contents_stddev_samp_order_by
  sum: catalog_contents_sum_order_by
  var_pop: catalog_contents_var_pop_order_by
  var_samp: catalog_contents_var_samp_order_by
  variance: catalog_contents_variance_order_by
}

"""
input type for inserting array relation for remote table "catalog_contents"
"""
input catalog_contents_arr_rel_insert_input {
  data: [catalog_contents_insert_input!]!
  on_conflict: catalog_contents_on_conflict
}

"""aggregate avg on columns"""
type catalog_contents_avg_fields {
  catalog_entry_id: Float
  catalog_level_number: Float
  next_entry_id: Float
  parent_entry_id: Float
  previous_entry_id: Float
  price_in_dollars: Float
  price_in_euros: Float
  price_in_pounds: Float
}

"""
order by avg() on columns of table "catalog_contents"
"""
input catalog_contents_avg_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""
Boolean expression to filter rows from the table "catalog_contents". All fields are combined with a logical 'AND'.
"""
input catalog_contents_bool_exp {
  _and: [catalog_contents_bool_exp]
  _not: catalog_contents_bool_exp
  _or: [catalog_contents_bool_exp]
  capacity: String_comparison_exp
  catalog_contents_additional_attributes: catalog_contents_additional_attributes_bool_exp
  catalog_entry_id: bigint_comparison_exp
  catalog_entry_name: String_comparison_exp
  catalog_level_number: bigint_comparison_exp
  catalog_structure: catalog_structure_bool_exp
  height: String_comparison_exp
  length: String_comparison_exp
  next_entry_id: bigint_comparison_exp
  parent_entry_id: bigint_comparison_exp
  previous_entry_id: bigint_comparison_exp
  price_in_dollars: float8_comparison_exp
  price_in_euros: float8_comparison_exp
  price_in_pounds: float8_comparison_exp
  product_stock_number: String_comparison_exp
  width: String_comparison_exp
}

"""
unique or primary key constraints on table "catalog_contents"
"""
enum catalog_contents_constraint {
  """unique or primary key constraint"""
  idx_26150_catalog_contents_pkey
}

"""
input type for incrementing integer column in table "catalog_contents"
"""
input catalog_contents_inc_input {
  catalog_entry_id: bigint
  catalog_level_number: bigint
  next_entry_id: bigint
  parent_entry_id: bigint
  previous_entry_id: bigint
  price_in_dollars: float8
  price_in_euros: float8
  price_in_pounds: float8
}

"""
input type for inserting data into table "catalog_contents"
"""
input catalog_contents_insert_input {
  capacity: String
  catalog_contents_additional_attributes: catalog_contents_additional_attributes_arr_rel_insert_input
  catalog_entry_id: bigint
  catalog_entry_name: String
  catalog_level_number: bigint
  catalog_structure: catalog_structure_obj_rel_insert_input
  height: String
  length: String
  next_entry_id: bigint
  parent_entry_id: bigint
  previous_entry_id: bigint
  price_in_dollars: float8
  price_in_euros: float8
  price_in_pounds: float8
  product_stock_number: String
  width: String
}

"""aggregate max on columns"""
type catalog_contents_max_fields {
  capacity: String
  catalog_entry_id: bigint
  catalog_entry_name: String
  catalog_level_number: bigint
  height: String
  length: String
  next_entry_id: bigint
  parent_entry_id: bigint
  previous_entry_id: bigint
  price_in_dollars: float8
  price_in_euros: float8
  price_in_pounds: float8
  product_stock_number: String
  width: String
}

"""
order by max() on columns of table "catalog_contents"
"""
input catalog_contents_max_order_by {
  capacity: order_by
  catalog_entry_id: order_by
  catalog_entry_name: order_by
  catalog_level_number: order_by
  height: order_by
  length: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
  product_stock_number: order_by
  width: order_by
}

"""aggregate min on columns"""
type catalog_contents_min_fields {
  capacity: String
  catalog_entry_id: bigint
  catalog_entry_name: String
  catalog_level_number: bigint
  height: String
  length: String
  next_entry_id: bigint
  parent_entry_id: bigint
  previous_entry_id: bigint
  price_in_dollars: float8
  price_in_euros: float8
  price_in_pounds: float8
  product_stock_number: String
  width: String
}

"""
order by min() on columns of table "catalog_contents"
"""
input catalog_contents_min_order_by {
  capacity: order_by
  catalog_entry_id: order_by
  catalog_entry_name: order_by
  catalog_level_number: order_by
  height: order_by
  length: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
  product_stock_number: order_by
  width: order_by
}

"""
response of any mutation on the table "catalog_contents"
"""
type catalog_contents_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [catalog_contents!]!
}

"""
input type for inserting object relation for remote table "catalog_contents"
"""
input catalog_contents_obj_rel_insert_input {
  data: catalog_contents_insert_input!
  on_conflict: catalog_contents_on_conflict
}

"""
on conflict condition type for table "catalog_contents"
"""
input catalog_contents_on_conflict {
  constraint: catalog_contents_constraint!
  update_columns: [catalog_contents_update_column!]!
  where: catalog_contents_bool_exp
}

"""
ordering options when selecting data from "catalog_contents"
"""
input catalog_contents_order_by {
  capacity: order_by
  catalog_contents_additional_attributes_aggregate: catalog_contents_additional_attributes_aggregate_order_by
  catalog_entry_id: order_by
  catalog_entry_name: order_by
  catalog_level_number: order_by
  catalog_structure: catalog_structure_order_by
  height: order_by
  length: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
  product_stock_number: order_by
  width: order_by
}

"""
primary key columns input for table: "catalog_contents"
"""
input catalog_contents_pk_columns_input {
  catalog_entry_id: bigint!
}

"""
select columns of table "catalog_contents"
"""
enum catalog_contents_select_column {
  """column name"""
  capacity

  """column name"""
  catalog_entry_id

  """column name"""
  catalog_entry_name

  """column name"""
  catalog_level_number

  """column name"""
  height

  """column name"""
  length

  """column name"""
  next_entry_id

  """column name"""
  parent_entry_id

  """column name"""
  previous_entry_id

  """column name"""
  price_in_dollars

  """column name"""
  price_in_euros

  """column name"""
  price_in_pounds

  """column name"""
  product_stock_number

  """column name"""
  width
}

"""
input type for updating data in table "catalog_contents"
"""
input catalog_contents_set_input {
  capacity: String
  catalog_entry_id: bigint
  catalog_entry_name: String
  catalog_level_number: bigint
  height: String
  length: String
  next_entry_id: bigint
  parent_entry_id: bigint
  previous_entry_id: bigint
  price_in_dollars: float8
  price_in_euros: float8
  price_in_pounds: float8
  product_stock_number: String
  width: String
}

"""aggregate stddev on columns"""
type catalog_contents_stddev_fields {
  catalog_entry_id: Float
  catalog_level_number: Float
  next_entry_id: Float
  parent_entry_id: Float
  previous_entry_id: Float
  price_in_dollars: Float
  price_in_euros: Float
  price_in_pounds: Float
}

"""
order by stddev() on columns of table "catalog_contents"
"""
input catalog_contents_stddev_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""aggregate stddev_pop on columns"""
type catalog_contents_stddev_pop_fields {
  catalog_entry_id: Float
  catalog_level_number: Float
  next_entry_id: Float
  parent_entry_id: Float
  previous_entry_id: Float
  price_in_dollars: Float
  price_in_euros: Float
  price_in_pounds: Float
}

"""
order by stddev_pop() on columns of table "catalog_contents"
"""
input catalog_contents_stddev_pop_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""aggregate stddev_samp on columns"""
type catalog_contents_stddev_samp_fields {
  catalog_entry_id: Float
  catalog_level_number: Float
  next_entry_id: Float
  parent_entry_id: Float
  previous_entry_id: Float
  price_in_dollars: Float
  price_in_euros: Float
  price_in_pounds: Float
}

"""
order by stddev_samp() on columns of table "catalog_contents"
"""
input catalog_contents_stddev_samp_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""aggregate sum on columns"""
type catalog_contents_sum_fields {
  catalog_entry_id: bigint
  catalog_level_number: bigint
  next_entry_id: bigint
  parent_entry_id: bigint
  previous_entry_id: bigint
  price_in_dollars: float8
  price_in_euros: float8
  price_in_pounds: float8
}

"""
order by sum() on columns of table "catalog_contents"
"""
input catalog_contents_sum_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""
update columns of table "catalog_contents"
"""
enum catalog_contents_update_column {
  """column name"""
  capacity

  """column name"""
  catalog_entry_id

  """column name"""
  catalog_entry_name

  """column name"""
  catalog_level_number

  """column name"""
  height

  """column name"""
  length

  """column name"""
  next_entry_id

  """column name"""
  parent_entry_id

  """column name"""
  previous_entry_id

  """column name"""
  price_in_dollars

  """column name"""
  price_in_euros

  """column name"""
  price_in_pounds

  """column name"""
  product_stock_number

  """column name"""
  width
}

"""aggregate var_pop on columns"""
type catalog_contents_var_pop_fields {
  catalog_entry_id: Float
  catalog_level_number: Float
  next_entry_id: Float
  parent_entry_id: Float
  previous_entry_id: Float
  price_in_dollars: Float
  price_in_euros: Float
  price_in_pounds: Float
}

"""
order by var_pop() on columns of table "catalog_contents"
"""
input catalog_contents_var_pop_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""aggregate var_samp on columns"""
type catalog_contents_var_samp_fields {
  catalog_entry_id: Float
  catalog_level_number: Float
  next_entry_id: Float
  parent_entry_id: Float
  previous_entry_id: Float
  price_in_dollars: Float
  price_in_euros: Float
  price_in_pounds: Float
}

"""
order by var_samp() on columns of table "catalog_contents"
"""
input catalog_contents_var_samp_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""aggregate variance on columns"""
type catalog_contents_variance_fields {
  catalog_entry_id: Float
  catalog_level_number: Float
  next_entry_id: Float
  parent_entry_id: Float
  previous_entry_id: Float
  price_in_dollars: Float
  price_in_euros: Float
  price_in_pounds: Float
}

"""
order by variance() on columns of table "catalog_contents"
"""
input catalog_contents_variance_order_by {
  catalog_entry_id: order_by
  catalog_level_number: order_by
  next_entry_id: order_by
  parent_entry_id: order_by
  previous_entry_id: order_by
  price_in_dollars: order_by
  price_in_euros: order_by
  price_in_pounds: order_by
}

"""
columns and relationships of "catalog_structure"
"""
type catalog_structure {
  """An object relationship"""
  catalog: catalogs

  """An array relationship"""
  catalog_contents(
    """distinct select on columns"""
    distinct_on: [catalog_contents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_order_by!]

    """filter the rows returned"""
    where: catalog_contents_bool_exp
  ): [catalog_contents!]!

  """An array relationship"""
  catalog_contents_additional_attributes(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): [catalog_contents_additional_attributes!]!

  """An aggregated array relationship"""
  catalog_contents_additional_attributes_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): catalog_contents_additional_attributes_aggregate!

  """An aggregated array relationship"""
  catalog_contents_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_order_by!]

    """filter the rows returned"""
    where: catalog_contents_bool_exp
  ): catalog_contents_aggregate!
  catalog_id: bigint
  catalog_level_name: String
  catalog_level_number: bigint!
}

"""
aggregated selection of "catalog_structure"
"""
type catalog_structure_aggregate {
  aggregate: catalog_structure_aggregate_fields
  nodes: [catalog_structure!]!
}

"""
aggregate fields of "catalog_structure"
"""
type catalog_structure_aggregate_fields {
  avg: catalog_structure_avg_fields
  count(columns: [catalog_structure_select_column!], distinct: Boolean): Int
  max: catalog_structure_max_fields
  min: catalog_structure_min_fields
  stddev: catalog_structure_stddev_fields
  stddev_pop: catalog_structure_stddev_pop_fields
  stddev_samp: catalog_structure_stddev_samp_fields
  sum: catalog_structure_sum_fields
  var_pop: catalog_structure_var_pop_fields
  var_samp: catalog_structure_var_samp_fields
  variance: catalog_structure_variance_fields
}

"""
order by aggregate values of table "catalog_structure"
"""
input catalog_structure_aggregate_order_by {
  avg: catalog_structure_avg_order_by
  count: order_by
  max: catalog_structure_max_order_by
  min: catalog_structure_min_order_by
  stddev: catalog_structure_stddev_order_by
  stddev_pop: catalog_structure_stddev_pop_order_by
  stddev_samp: catalog_structure_stddev_samp_order_by
  sum: catalog_structure_sum_order_by
  var_pop: catalog_structure_var_pop_order_by
  var_samp: catalog_structure_var_samp_order_by
  variance: catalog_structure_variance_order_by
}

"""
input type for inserting array relation for remote table "catalog_structure"
"""
input catalog_structure_arr_rel_insert_input {
  data: [catalog_structure_insert_input!]!
  on_conflict: catalog_structure_on_conflict
}

"""aggregate avg on columns"""
type catalog_structure_avg_fields {
  catalog_id: Float
  catalog_level_number: Float
}

"""
order by avg() on columns of table "catalog_structure"
"""
input catalog_structure_avg_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""
Boolean expression to filter rows from the table "catalog_structure". All fields are combined with a logical 'AND'.
"""
input catalog_structure_bool_exp {
  _and: [catalog_structure_bool_exp]
  _not: catalog_structure_bool_exp
  _or: [catalog_structure_bool_exp]
  catalog: catalogs_bool_exp
  catalog_contents: catalog_contents_bool_exp
  catalog_contents_additional_attributes: catalog_contents_additional_attributes_bool_exp
  catalog_id: bigint_comparison_exp
  catalog_level_name: String_comparison_exp
  catalog_level_number: bigint_comparison_exp
}

"""
unique or primary key constraints on table "catalog_structure"
"""
enum catalog_structure_constraint {
  """unique or primary key constraint"""
  idx_26144_catalog_structure_pkey
}

"""
input type for incrementing integer column in table "catalog_structure"
"""
input catalog_structure_inc_input {
  catalog_id: bigint
  catalog_level_number: bigint
}

"""
input type for inserting data into table "catalog_structure"
"""
input catalog_structure_insert_input {
  catalog: catalogs_obj_rel_insert_input
  catalog_contents: catalog_contents_arr_rel_insert_input
  catalog_contents_additional_attributes: catalog_contents_additional_attributes_arr_rel_insert_input
  catalog_id: bigint
  catalog_level_name: String
  catalog_level_number: bigint
}

"""aggregate max on columns"""
type catalog_structure_max_fields {
  catalog_id: bigint
  catalog_level_name: String
  catalog_level_number: bigint
}

"""
order by max() on columns of table "catalog_structure"
"""
input catalog_structure_max_order_by {
  catalog_id: order_by
  catalog_level_name: order_by
  catalog_level_number: order_by
}

"""aggregate min on columns"""
type catalog_structure_min_fields {
  catalog_id: bigint
  catalog_level_name: String
  catalog_level_number: bigint
}

"""
order by min() on columns of table "catalog_structure"
"""
input catalog_structure_min_order_by {
  catalog_id: order_by
  catalog_level_name: order_by
  catalog_level_number: order_by
}

"""
response of any mutation on the table "catalog_structure"
"""
type catalog_structure_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [catalog_structure!]!
}

"""
input type for inserting object relation for remote table "catalog_structure"
"""
input catalog_structure_obj_rel_insert_input {
  data: catalog_structure_insert_input!
  on_conflict: catalog_structure_on_conflict
}

"""
on conflict condition type for table "catalog_structure"
"""
input catalog_structure_on_conflict {
  constraint: catalog_structure_constraint!
  update_columns: [catalog_structure_update_column!]!
  where: catalog_structure_bool_exp
}

"""
ordering options when selecting data from "catalog_structure"
"""
input catalog_structure_order_by {
  catalog: catalogs_order_by
  catalog_contents_additional_attributes_aggregate: catalog_contents_additional_attributes_aggregate_order_by
  catalog_contents_aggregate: catalog_contents_aggregate_order_by
  catalog_id: order_by
  catalog_level_name: order_by
  catalog_level_number: order_by
}

"""
primary key columns input for table: "catalog_structure"
"""
input catalog_structure_pk_columns_input {
  catalog_level_number: bigint!
}

"""
select columns of table "catalog_structure"
"""
enum catalog_structure_select_column {
  """column name"""
  catalog_id

  """column name"""
  catalog_level_name

  """column name"""
  catalog_level_number
}

"""
input type for updating data in table "catalog_structure"
"""
input catalog_structure_set_input {
  catalog_id: bigint
  catalog_level_name: String
  catalog_level_number: bigint
}

"""aggregate stddev on columns"""
type catalog_structure_stddev_fields {
  catalog_id: Float
  catalog_level_number: Float
}

"""
order by stddev() on columns of table "catalog_structure"
"""
input catalog_structure_stddev_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""aggregate stddev_pop on columns"""
type catalog_structure_stddev_pop_fields {
  catalog_id: Float
  catalog_level_number: Float
}

"""
order by stddev_pop() on columns of table "catalog_structure"
"""
input catalog_structure_stddev_pop_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""aggregate stddev_samp on columns"""
type catalog_structure_stddev_samp_fields {
  catalog_id: Float
  catalog_level_number: Float
}

"""
order by stddev_samp() on columns of table "catalog_structure"
"""
input catalog_structure_stddev_samp_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""aggregate sum on columns"""
type catalog_structure_sum_fields {
  catalog_id: bigint
  catalog_level_number: bigint
}

"""
order by sum() on columns of table "catalog_structure"
"""
input catalog_structure_sum_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""
update columns of table "catalog_structure"
"""
enum catalog_structure_update_column {
  """column name"""
  catalog_id

  """column name"""
  catalog_level_name

  """column name"""
  catalog_level_number
}

"""aggregate var_pop on columns"""
type catalog_structure_var_pop_fields {
  catalog_id: Float
  catalog_level_number: Float
}

"""
order by var_pop() on columns of table "catalog_structure"
"""
input catalog_structure_var_pop_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""aggregate var_samp on columns"""
type catalog_structure_var_samp_fields {
  catalog_id: Float
  catalog_level_number: Float
}

"""
order by var_samp() on columns of table "catalog_structure"
"""
input catalog_structure_var_samp_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""aggregate variance on columns"""
type catalog_structure_variance_fields {
  catalog_id: Float
  catalog_level_number: Float
}

"""
order by variance() on columns of table "catalog_structure"
"""
input catalog_structure_variance_order_by {
  catalog_id: order_by
  catalog_level_number: order_by
}

"""
columns and relationships of "catalogs"
"""
type catalogs {
  catalog_id: bigint!
  catalog_name: String
  catalog_publisher: String

  """An array relationship"""
  catalog_structures(
    """distinct select on columns"""
    distinct_on: [catalog_structure_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_structure_order_by!]

    """filter the rows returned"""
    where: catalog_structure_bool_exp
  ): [catalog_structure!]!

  """An aggregated array relationship"""
  catalog_structures_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_structure_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_structure_order_by!]

    """filter the rows returned"""
    where: catalog_structure_bool_exp
  ): catalog_structure_aggregate!
  date_of_latest_revision: timestamptz
  date_of_publication: timestamptz
}

"""
aggregated selection of "catalogs"
"""
type catalogs_aggregate {
  aggregate: catalogs_aggregate_fields
  nodes: [catalogs!]!
}

"""
aggregate fields of "catalogs"
"""
type catalogs_aggregate_fields {
  avg: catalogs_avg_fields
  count(columns: [catalogs_select_column!], distinct: Boolean): Int
  max: catalogs_max_fields
  min: catalogs_min_fields
  stddev: catalogs_stddev_fields
  stddev_pop: catalogs_stddev_pop_fields
  stddev_samp: catalogs_stddev_samp_fields
  sum: catalogs_sum_fields
  var_pop: catalogs_var_pop_fields
  var_samp: catalogs_var_samp_fields
  variance: catalogs_variance_fields
}

"""
order by aggregate values of table "catalogs"
"""
input catalogs_aggregate_order_by {
  avg: catalogs_avg_order_by
  count: order_by
  max: catalogs_max_order_by
  min: catalogs_min_order_by
  stddev: catalogs_stddev_order_by
  stddev_pop: catalogs_stddev_pop_order_by
  stddev_samp: catalogs_stddev_samp_order_by
  sum: catalogs_sum_order_by
  var_pop: catalogs_var_pop_order_by
  var_samp: catalogs_var_samp_order_by
  variance: catalogs_variance_order_by
}

"""
input type for inserting array relation for remote table "catalogs"
"""
input catalogs_arr_rel_insert_input {
  data: [catalogs_insert_input!]!
  on_conflict: catalogs_on_conflict
}

"""aggregate avg on columns"""
type catalogs_avg_fields {
  catalog_id: Float
}

"""
order by avg() on columns of table "catalogs"
"""
input catalogs_avg_order_by {
  catalog_id: order_by
}

"""
Boolean expression to filter rows from the table "catalogs". All fields are combined with a logical 'AND'.
"""
input catalogs_bool_exp {
  _and: [catalogs_bool_exp]
  _not: catalogs_bool_exp
  _or: [catalogs_bool_exp]
  catalog_id: bigint_comparison_exp
  catalog_name: String_comparison_exp
  catalog_publisher: String_comparison_exp
  catalog_structures: catalog_structure_bool_exp
  date_of_latest_revision: timestamptz_comparison_exp
  date_of_publication: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "catalogs"
"""
enum catalogs_constraint {
  """unique or primary key constraint"""
  idx_26138_catalogs_pkey
}

"""
input type for incrementing integer column in table "catalogs"
"""
input catalogs_inc_input {
  catalog_id: bigint
}

"""
input type for inserting data into table "catalogs"
"""
input catalogs_insert_input {
  catalog_id: bigint
  catalog_name: String
  catalog_publisher: String
  catalog_structures: catalog_structure_arr_rel_insert_input
  date_of_latest_revision: timestamptz
  date_of_publication: timestamptz
}

"""aggregate max on columns"""
type catalogs_max_fields {
  catalog_id: bigint
  catalog_name: String
  catalog_publisher: String
  date_of_latest_revision: timestamptz
  date_of_publication: timestamptz
}

"""
order by max() on columns of table "catalogs"
"""
input catalogs_max_order_by {
  catalog_id: order_by
  catalog_name: order_by
  catalog_publisher: order_by
  date_of_latest_revision: order_by
  date_of_publication: order_by
}

"""aggregate min on columns"""
type catalogs_min_fields {
  catalog_id: bigint
  catalog_name: String
  catalog_publisher: String
  date_of_latest_revision: timestamptz
  date_of_publication: timestamptz
}

"""
order by min() on columns of table "catalogs"
"""
input catalogs_min_order_by {
  catalog_id: order_by
  catalog_name: order_by
  catalog_publisher: order_by
  date_of_latest_revision: order_by
  date_of_publication: order_by
}

"""
response of any mutation on the table "catalogs"
"""
type catalogs_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [catalogs!]!
}

"""
input type for inserting object relation for remote table "catalogs"
"""
input catalogs_obj_rel_insert_input {
  data: catalogs_insert_input!
  on_conflict: catalogs_on_conflict
}

"""
on conflict condition type for table "catalogs"
"""
input catalogs_on_conflict {
  constraint: catalogs_constraint!
  update_columns: [catalogs_update_column!]!
  where: catalogs_bool_exp
}

"""
ordering options when selecting data from "catalogs"
"""
input catalogs_order_by {
  catalog_id: order_by
  catalog_name: order_by
  catalog_publisher: order_by
  catalog_structures_aggregate: catalog_structure_aggregate_order_by
  date_of_latest_revision: order_by
  date_of_publication: order_by
}

"""
primary key columns input for table: "catalogs"
"""
input catalogs_pk_columns_input {
  catalog_id: bigint!
}

"""
select columns of table "catalogs"
"""
enum catalogs_select_column {
  """column name"""
  catalog_id

  """column name"""
  catalog_name

  """column name"""
  catalog_publisher

  """column name"""
  date_of_latest_revision

  """column name"""
  date_of_publication
}

"""
input type for updating data in table "catalogs"
"""
input catalogs_set_input {
  catalog_id: bigint
  catalog_name: String
  catalog_publisher: String
  date_of_latest_revision: timestamptz
  date_of_publication: timestamptz
}

"""aggregate stddev on columns"""
type catalogs_stddev_fields {
  catalog_id: Float
}

"""
order by stddev() on columns of table "catalogs"
"""
input catalogs_stddev_order_by {
  catalog_id: order_by
}

"""aggregate stddev_pop on columns"""
type catalogs_stddev_pop_fields {
  catalog_id: Float
}

"""
order by stddev_pop() on columns of table "catalogs"
"""
input catalogs_stddev_pop_order_by {
  catalog_id: order_by
}

"""aggregate stddev_samp on columns"""
type catalogs_stddev_samp_fields {
  catalog_id: Float
}

"""
order by stddev_samp() on columns of table "catalogs"
"""
input catalogs_stddev_samp_order_by {
  catalog_id: order_by
}

"""aggregate sum on columns"""
type catalogs_sum_fields {
  catalog_id: bigint
}

"""
order by sum() on columns of table "catalogs"
"""
input catalogs_sum_order_by {
  catalog_id: order_by
}

"""
update columns of table "catalogs"
"""
enum catalogs_update_column {
  """column name"""
  catalog_id

  """column name"""
  catalog_name

  """column name"""
  catalog_publisher

  """column name"""
  date_of_latest_revision

  """column name"""
  date_of_publication
}

"""aggregate var_pop on columns"""
type catalogs_var_pop_fields {
  catalog_id: Float
}

"""
order by var_pop() on columns of table "catalogs"
"""
input catalogs_var_pop_order_by {
  catalog_id: order_by
}

"""aggregate var_samp on columns"""
type catalogs_var_samp_fields {
  catalog_id: Float
}

"""
order by var_samp() on columns of table "catalogs"
"""
input catalogs_var_samp_order_by {
  catalog_id: order_by
}

"""aggregate variance on columns"""
type catalogs_variance_fields {
  catalog_id: Float
}

"""
order by variance() on columns of table "catalogs"
"""
input catalogs_variance_order_by {
  catalog_id: order_by
}

scalar float8

"""
expression to compare columns of type float8. All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "attribute_definitions"
  """
  delete_attribute_definitions(
    """filter the rows which have to be deleted"""
    where: attribute_definitions_bool_exp!
  ): attribute_definitions_mutation_response

  """
  delete single row from the table: "attribute_definitions"
  """
  delete_attribute_definitions_by_pk(attribute_id: bigint!): attribute_definitions

  """
  delete data from the table: "catalog_contents"
  """
  delete_catalog_contents(
    """filter the rows which have to be deleted"""
    where: catalog_contents_bool_exp!
  ): catalog_contents_mutation_response

  """
  delete data from the table: "catalog_contents_additional_attributes"
  """
  delete_catalog_contents_additional_attributes(
    """filter the rows which have to be deleted"""
    where: catalog_contents_additional_attributes_bool_exp!
  ): catalog_contents_additional_attributes_mutation_response

  """
  delete single row from the table: "catalog_contents"
  """
  delete_catalog_contents_by_pk(catalog_entry_id: bigint!): catalog_contents

  """
  delete data from the table: "catalog_structure"
  """
  delete_catalog_structure(
    """filter the rows which have to be deleted"""
    where: catalog_structure_bool_exp!
  ): catalog_structure_mutation_response

  """
  delete single row from the table: "catalog_structure"
  """
  delete_catalog_structure_by_pk(catalog_level_number: bigint!): catalog_structure

  """
  delete data from the table: "catalogs"
  """
  delete_catalogs(
    """filter the rows which have to be deleted"""
    where: catalogs_bool_exp!
  ): catalogs_mutation_response

  """
  delete single row from the table: "catalogs"
  """
  delete_catalogs_by_pk(catalog_id: bigint!): catalogs

  """
  insert data into the table: "attribute_definitions"
  """
  insert_attribute_definitions(
    """the rows to be inserted"""
    objects: [attribute_definitions_insert_input!]!

    """on conflict condition"""
    on_conflict: attribute_definitions_on_conflict
  ): attribute_definitions_mutation_response

  """
  insert a single row into the table: "attribute_definitions"
  """
  insert_attribute_definitions_one(
    """the row to be inserted"""
    object: attribute_definitions_insert_input!

    """on conflict condition"""
    on_conflict: attribute_definitions_on_conflict
  ): attribute_definitions

  """
  insert data into the table: "catalog_contents"
  """
  insert_catalog_contents(
    """the rows to be inserted"""
    objects: [catalog_contents_insert_input!]!

    """on conflict condition"""
    on_conflict: catalog_contents_on_conflict
  ): catalog_contents_mutation_response

  """
  insert data into the table: "catalog_contents_additional_attributes"
  """
  insert_catalog_contents_additional_attributes(
    """the rows to be inserted"""
    objects: [catalog_contents_additional_attributes_insert_input!]!
  ): catalog_contents_additional_attributes_mutation_response

  """
  insert a single row into the table: "catalog_contents_additional_attributes"
  """
  insert_catalog_contents_additional_attributes_one(
    """the row to be inserted"""
    object: catalog_contents_additional_attributes_insert_input!
  ): catalog_contents_additional_attributes

  """
  insert a single row into the table: "catalog_contents"
  """
  insert_catalog_contents_one(
    """the row to be inserted"""
    object: catalog_contents_insert_input!

    """on conflict condition"""
    on_conflict: catalog_contents_on_conflict
  ): catalog_contents

  """
  insert data into the table: "catalog_structure"
  """
  insert_catalog_structure(
    """the rows to be inserted"""
    objects: [catalog_structure_insert_input!]!

    """on conflict condition"""
    on_conflict: catalog_structure_on_conflict
  ): catalog_structure_mutation_response

  """
  insert a single row into the table: "catalog_structure"
  """
  insert_catalog_structure_one(
    """the row to be inserted"""
    object: catalog_structure_insert_input!

    """on conflict condition"""
    on_conflict: catalog_structure_on_conflict
  ): catalog_structure

  """
  insert data into the table: "catalogs"
  """
  insert_catalogs(
    """the rows to be inserted"""
    objects: [catalogs_insert_input!]!

    """on conflict condition"""
    on_conflict: catalogs_on_conflict
  ): catalogs_mutation_response

  """
  insert a single row into the table: "catalogs"
  """
  insert_catalogs_one(
    """the row to be inserted"""
    object: catalogs_insert_input!

    """on conflict condition"""
    on_conflict: catalogs_on_conflict
  ): catalogs

  """
  update data of the table: "attribute_definitions"
  """
  update_attribute_definitions(
    """increments the integer columns with given value of the filtered values"""
    _inc: attribute_definitions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attribute_definitions_set_input

    """filter the rows which have to be updated"""
    where: attribute_definitions_bool_exp!
  ): attribute_definitions_mutation_response

  """
  update single row of the table: "attribute_definitions"
  """
  update_attribute_definitions_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: attribute_definitions_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: attribute_definitions_set_input
    pk_columns: attribute_definitions_pk_columns_input!
  ): attribute_definitions

  """
  update data of the table: "catalog_contents"
  """
  update_catalog_contents(
    """increments the integer columns with given value of the filtered values"""
    _inc: catalog_contents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: catalog_contents_set_input

    """filter the rows which have to be updated"""
    where: catalog_contents_bool_exp!
  ): catalog_contents_mutation_response

  """
  update data of the table: "catalog_contents_additional_attributes"
  """
  update_catalog_contents_additional_attributes(
    """increments the integer columns with given value of the filtered values"""
    _inc: catalog_contents_additional_attributes_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: catalog_contents_additional_attributes_set_input

    """filter the rows which have to be updated"""
    where: catalog_contents_additional_attributes_bool_exp!
  ): catalog_contents_additional_attributes_mutation_response

  """
  update single row of the table: "catalog_contents"
  """
  update_catalog_contents_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: catalog_contents_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: catalog_contents_set_input
    pk_columns: catalog_contents_pk_columns_input!
  ): catalog_contents

  """
  update data of the table: "catalog_structure"
  """
  update_catalog_structure(
    """increments the integer columns with given value of the filtered values"""
    _inc: catalog_structure_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: catalog_structure_set_input

    """filter the rows which have to be updated"""
    where: catalog_structure_bool_exp!
  ): catalog_structure_mutation_response

  """
  update single row of the table: "catalog_structure"
  """
  update_catalog_structure_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: catalog_structure_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: catalog_structure_set_input
    pk_columns: catalog_structure_pk_columns_input!
  ): catalog_structure

  """
  update data of the table: "catalogs"
  """
  update_catalogs(
    """increments the integer columns with given value of the filtered values"""
    _inc: catalogs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: catalogs_set_input

    """filter the rows which have to be updated"""
    where: catalogs_bool_exp!
  ): catalogs_mutation_response

  """
  update single row of the table: "catalogs"
  """
  update_catalogs_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: catalogs_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: catalogs_set_input
    pk_columns: catalogs_pk_columns_input!
  ): catalogs
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""query root"""
type query_root {
  """
  fetch data from the table: "attribute_definitions"
  """
  attribute_definitions(
    """distinct select on columns"""
    distinct_on: [attribute_definitions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attribute_definitions_order_by!]

    """filter the rows returned"""
    where: attribute_definitions_bool_exp
  ): [attribute_definitions!]!

  """
  fetch aggregated fields from the table: "attribute_definitions"
  """
  attribute_definitions_aggregate(
    """distinct select on columns"""
    distinct_on: [attribute_definitions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attribute_definitions_order_by!]

    """filter the rows returned"""
    where: attribute_definitions_bool_exp
  ): attribute_definitions_aggregate!

  """
  fetch data from the table: "attribute_definitions" using primary key columns
  """
  attribute_definitions_by_pk(attribute_id: bigint!): attribute_definitions

  """
  fetch data from the table: "catalog_contents"
  """
  catalog_contents(
    """distinct select on columns"""
    distinct_on: [catalog_contents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_order_by!]

    """filter the rows returned"""
    where: catalog_contents_bool_exp
  ): [catalog_contents!]!

  """
  fetch data from the table: "catalog_contents_additional_attributes"
  """
  catalog_contents_additional_attributes(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): [catalog_contents_additional_attributes!]!

  """
  fetch aggregated fields from the table: "catalog_contents_additional_attributes"
  """
  catalog_contents_additional_attributes_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): catalog_contents_additional_attributes_aggregate!

  """
  fetch aggregated fields from the table: "catalog_contents"
  """
  catalog_contents_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_order_by!]

    """filter the rows returned"""
    where: catalog_contents_bool_exp
  ): catalog_contents_aggregate!

  """
  fetch data from the table: "catalog_contents" using primary key columns
  """
  catalog_contents_by_pk(catalog_entry_id: bigint!): catalog_contents

  """
  fetch data from the table: "catalog_structure"
  """
  catalog_structure(
    """distinct select on columns"""
    distinct_on: [catalog_structure_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_structure_order_by!]

    """filter the rows returned"""
    where: catalog_structure_bool_exp
  ): [catalog_structure!]!

  """
  fetch aggregated fields from the table: "catalog_structure"
  """
  catalog_structure_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_structure_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_structure_order_by!]

    """filter the rows returned"""
    where: catalog_structure_bool_exp
  ): catalog_structure_aggregate!

  """
  fetch data from the table: "catalog_structure" using primary key columns
  """
  catalog_structure_by_pk(catalog_level_number: bigint!): catalog_structure

  """
  fetch data from the table: "catalogs"
  """
  catalogs(
    """distinct select on columns"""
    distinct_on: [catalogs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalogs_order_by!]

    """filter the rows returned"""
    where: catalogs_bool_exp
  ): [catalogs!]!

  """
  fetch aggregated fields from the table: "catalogs"
  """
  catalogs_aggregate(
    """distinct select on columns"""
    distinct_on: [catalogs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalogs_order_by!]

    """filter the rows returned"""
    where: catalogs_bool_exp
  ): catalogs_aggregate!

  """fetch data from the table: "catalogs" using primary key columns"""
  catalogs_by_pk(catalog_id: bigint!): catalogs
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "attribute_definitions"
  """
  attribute_definitions(
    """distinct select on columns"""
    distinct_on: [attribute_definitions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attribute_definitions_order_by!]

    """filter the rows returned"""
    where: attribute_definitions_bool_exp
  ): [attribute_definitions!]!

  """
  fetch aggregated fields from the table: "attribute_definitions"
  """
  attribute_definitions_aggregate(
    """distinct select on columns"""
    distinct_on: [attribute_definitions_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [attribute_definitions_order_by!]

    """filter the rows returned"""
    where: attribute_definitions_bool_exp
  ): attribute_definitions_aggregate!

  """
  fetch data from the table: "attribute_definitions" using primary key columns
  """
  attribute_definitions_by_pk(attribute_id: bigint!): attribute_definitions

  """
  fetch data from the table: "catalog_contents"
  """
  catalog_contents(
    """distinct select on columns"""
    distinct_on: [catalog_contents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_order_by!]

    """filter the rows returned"""
    where: catalog_contents_bool_exp
  ): [catalog_contents!]!

  """
  fetch data from the table: "catalog_contents_additional_attributes"
  """
  catalog_contents_additional_attributes(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): [catalog_contents_additional_attributes!]!

  """
  fetch aggregated fields from the table: "catalog_contents_additional_attributes"
  """
  catalog_contents_additional_attributes_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_additional_attributes_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_additional_attributes_order_by!]

    """filter the rows returned"""
    where: catalog_contents_additional_attributes_bool_exp
  ): catalog_contents_additional_attributes_aggregate!

  """
  fetch aggregated fields from the table: "catalog_contents"
  """
  catalog_contents_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_contents_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_contents_order_by!]

    """filter the rows returned"""
    where: catalog_contents_bool_exp
  ): catalog_contents_aggregate!

  """
  fetch data from the table: "catalog_contents" using primary key columns
  """
  catalog_contents_by_pk(catalog_entry_id: bigint!): catalog_contents

  """
  fetch data from the table: "catalog_structure"
  """
  catalog_structure(
    """distinct select on columns"""
    distinct_on: [catalog_structure_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_structure_order_by!]

    """filter the rows returned"""
    where: catalog_structure_bool_exp
  ): [catalog_structure!]!

  """
  fetch aggregated fields from the table: "catalog_structure"
  """
  catalog_structure_aggregate(
    """distinct select on columns"""
    distinct_on: [catalog_structure_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalog_structure_order_by!]

    """filter the rows returned"""
    where: catalog_structure_bool_exp
  ): catalog_structure_aggregate!

  """
  fetch data from the table: "catalog_structure" using primary key columns
  """
  catalog_structure_by_pk(catalog_level_number: bigint!): catalog_structure

  """
  fetch data from the table: "catalogs"
  """
  catalogs(
    """distinct select on columns"""
    distinct_on: [catalogs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalogs_order_by!]

    """filter the rows returned"""
    where: catalogs_bool_exp
  ): [catalogs!]!

  """
  fetch aggregated fields from the table: "catalogs"
  """
  catalogs_aggregate(
    """distinct select on columns"""
    distinct_on: [catalogs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [catalogs_order_by!]

    """filter the rows returned"""
    where: catalogs_bool_exp
  ): catalogs_aggregate!

  """fetch data from the table: "catalogs" using primary key columns"""
  catalogs_by_pk(catalog_id: bigint!): catalogs
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}
