schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""
Direct the client to resolve this field locally, either from the cache or local resolvers.
"""
directive @client(
  """
  When true, the client will never use the cache for this value. See
  https://www.apollographql.com/docs/react/essentials/local-state/#forcing-resolvers-with-clientalways-true
  """
  always: Boolean
) on FIELD | FRAGMENT_DEFINITION | INLINE_FRAGMENT

"""
Export this locally resolved field as a variable to be used in the remainder of this query. See
https://www.apollographql.com/docs/react/essentials/local-state/#using-client-fields-as-variables
"""
directive @export(
  """The variable name to export this field as."""
  as: String!
) on FIELD

"""
Specify a custom store key for this result. See
https://www.apollographql.com/docs/react/advanced/caching/#the-connection-directive
"""
directive @connection(
  """Specify the store key."""
  key: String!

  """
  An array of query argument names to include in the generated custom store key.
  """
  filter: [String!]
) on FIELD

"""
columns and relationships of "editor"
"""
type editor {
  age: Float
  editor_id: Int

  """An array relationship"""
  journal_committees(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): [journal_committee!]!

  """An aggregated array relationship"""
  journal_committees_aggregate(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): journal_committee_aggregate!
  name: String
}

"""
aggregated selection of "editor"
"""
type editor_aggregate {
  aggregate: editor_aggregate_fields
  nodes: [editor!]!
}

"""
aggregate fields of "editor"
"""
type editor_aggregate_fields {
  avg: editor_avg_fields
  count(columns: [editor_select_column!], distinct: Boolean): Int
  max: editor_max_fields
  min: editor_min_fields
  stddev: editor_stddev_fields
  stddev_pop: editor_stddev_pop_fields
  stddev_samp: editor_stddev_samp_fields
  sum: editor_sum_fields
  var_pop: editor_var_pop_fields
  var_samp: editor_var_samp_fields
  variance: editor_variance_fields
}

"""
order by aggregate values of table "editor"
"""
input editor_aggregate_order_by {
  avg: editor_avg_order_by
  count: order_by
  max: editor_max_order_by
  min: editor_min_order_by
  stddev: editor_stddev_order_by
  stddev_pop: editor_stddev_pop_order_by
  stddev_samp: editor_stddev_samp_order_by
  sum: editor_sum_order_by
  var_pop: editor_var_pop_order_by
  var_samp: editor_var_samp_order_by
  variance: editor_variance_order_by
}

"""
input type for inserting array relation for remote table "editor"
"""
input editor_arr_rel_insert_input {
  data: [editor_insert_input!]!
  on_conflict: editor_on_conflict
}

"""aggregate avg on columns"""
type editor_avg_fields {
  age: Float
  editor_id: Float
}

"""
order by avg() on columns of table "editor"
"""
input editor_avg_order_by {
  age: order_by
  editor_id: order_by
}

"""
Boolean expression to filter rows from the table "editor". All fields are combined with a logical 'AND'.
"""
input editor_bool_exp {
  _and: [editor_bool_exp]
  _not: editor_bool_exp
  _or: [editor_bool_exp]
  age: Float_comparison_exp
  editor_id: Int_comparison_exp
  journal_committees: journal_committee_bool_exp
  name: String_comparison_exp
}

"""
unique or primary key constraints on table "editor"
"""
enum editor_constraint {
  """unique or primary key constraint"""
  idx_22240_sqlite_autoindex_editor_1
}

"""
input type for incrementing integer column in table "editor"
"""
input editor_inc_input {
  age: Float
  editor_id: Int
}

"""
input type for inserting data into table "editor"
"""
input editor_insert_input {
  age: Float
  editor_id: Int
  journal_committees: journal_committee_arr_rel_insert_input
  name: String
}

"""aggregate max on columns"""
type editor_max_fields {
  age: Float
  editor_id: Int
  name: String
}

"""
order by max() on columns of table "editor"
"""
input editor_max_order_by {
  age: order_by
  editor_id: order_by
  name: order_by
}

"""aggregate min on columns"""
type editor_min_fields {
  age: Float
  editor_id: Int
  name: String
}

"""
order by min() on columns of table "editor"
"""
input editor_min_order_by {
  age: order_by
  editor_id: order_by
  name: order_by
}

"""
response of any mutation on the table "editor"
"""
type editor_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [editor!]!
}

"""
input type for inserting object relation for remote table "editor"
"""
input editor_obj_rel_insert_input {
  data: editor_insert_input!
  on_conflict: editor_on_conflict
}

"""
on conflict condition type for table "editor"
"""
input editor_on_conflict {
  constraint: editor_constraint!
  update_columns: [editor_update_column!]!
  where: editor_bool_exp
}

"""
ordering options when selecting data from "editor"
"""
input editor_order_by {
  age: order_by
  editor_id: order_by
  journal_committees_aggregate: journal_committee_aggregate_order_by
  name: order_by
}

"""
select columns of table "editor"
"""
enum editor_select_column {
  """column name"""
  age

  """column name"""
  editor_id

  """column name"""
  name
}

"""
input type for updating data in table "editor"
"""
input editor_set_input {
  age: Float
  editor_id: Int
  name: String
}

"""aggregate stddev on columns"""
type editor_stddev_fields {
  age: Float
  editor_id: Float
}

"""
order by stddev() on columns of table "editor"
"""
input editor_stddev_order_by {
  age: order_by
  editor_id: order_by
}

"""aggregate stddev_pop on columns"""
type editor_stddev_pop_fields {
  age: Float
  editor_id: Float
}

"""
order by stddev_pop() on columns of table "editor"
"""
input editor_stddev_pop_order_by {
  age: order_by
  editor_id: order_by
}

"""aggregate stddev_samp on columns"""
type editor_stddev_samp_fields {
  age: Float
  editor_id: Float
}

"""
order by stddev_samp() on columns of table "editor"
"""
input editor_stddev_samp_order_by {
  age: order_by
  editor_id: order_by
}

"""aggregate sum on columns"""
type editor_sum_fields {
  age: Float
  editor_id: Int
}

"""
order by sum() on columns of table "editor"
"""
input editor_sum_order_by {
  age: order_by
  editor_id: order_by
}

"""
update columns of table "editor"
"""
enum editor_update_column {
  """column name"""
  age

  """column name"""
  editor_id

  """column name"""
  name
}

"""aggregate var_pop on columns"""
type editor_var_pop_fields {
  age: Float
  editor_id: Float
}

"""
order by var_pop() on columns of table "editor"
"""
input editor_var_pop_order_by {
  age: order_by
  editor_id: order_by
}

"""aggregate var_samp on columns"""
type editor_var_samp_fields {
  age: Float
  editor_id: Float
}

"""
order by var_samp() on columns of table "editor"
"""
input editor_var_samp_order_by {
  age: order_by
  editor_id: order_by
}

"""aggregate variance on columns"""
type editor_variance_fields {
  age: Float
  editor_id: Float
}

"""
order by variance() on columns of table "editor"
"""
input editor_variance_order_by {
  age: order_by
  editor_id: order_by
}

"""
expression to compare columns of type Float. All fields are combined with logical 'AND'.
"""
input Float_comparison_exp {
  _eq: Float
  _gt: Float
  _gte: Float
  _in: [Float!]
  _is_null: Boolean
  _lt: Float
  _lte: Float
  _neq: Float
  _nin: [Float!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
columns and relationships of "journal"
"""
type journal {
  date: String

  """An array relationship"""
  journal_committees(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): [journal_committee!]!

  """An aggregated array relationship"""
  journal_committees_aggregate(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): journal_committee_aggregate!
  journal_id: Int
  sales: Int
  theme: String
}

"""
aggregated selection of "journal"
"""
type journal_aggregate {
  aggregate: journal_aggregate_fields
  nodes: [journal!]!
}

"""
aggregate fields of "journal"
"""
type journal_aggregate_fields {
  avg: journal_avg_fields
  count(columns: [journal_select_column!], distinct: Boolean): Int
  max: journal_max_fields
  min: journal_min_fields
  stddev: journal_stddev_fields
  stddev_pop: journal_stddev_pop_fields
  stddev_samp: journal_stddev_samp_fields
  sum: journal_sum_fields
  var_pop: journal_var_pop_fields
  var_samp: journal_var_samp_fields
  variance: journal_variance_fields
}

"""
order by aggregate values of table "journal"
"""
input journal_aggregate_order_by {
  avg: journal_avg_order_by
  count: order_by
  max: journal_max_order_by
  min: journal_min_order_by
  stddev: journal_stddev_order_by
  stddev_pop: journal_stddev_pop_order_by
  stddev_samp: journal_stddev_samp_order_by
  sum: journal_sum_order_by
  var_pop: journal_var_pop_order_by
  var_samp: journal_var_samp_order_by
  variance: journal_variance_order_by
}

"""
input type for inserting array relation for remote table "journal"
"""
input journal_arr_rel_insert_input {
  data: [journal_insert_input!]!
  on_conflict: journal_on_conflict
}

"""aggregate avg on columns"""
type journal_avg_fields {
  journal_id: Float
  sales: Float
}

"""
order by avg() on columns of table "journal"
"""
input journal_avg_order_by {
  journal_id: order_by
  sales: order_by
}

"""
Boolean expression to filter rows from the table "journal". All fields are combined with a logical 'AND'.
"""
input journal_bool_exp {
  _and: [journal_bool_exp]
  _not: journal_bool_exp
  _or: [journal_bool_exp]
  date: String_comparison_exp
  journal_committees: journal_committee_bool_exp
  journal_id: Int_comparison_exp
  sales: Int_comparison_exp
  theme: String_comparison_exp
}

"""
columns and relationships of "journal_committee"
"""
type journal_committee {
  """An object relationship"""
  editor: editor
  editor_id: Int

  """An object relationship"""
  journal: journal
  journal_id: Int
  work_type: String
}

"""
aggregated selection of "journal_committee"
"""
type journal_committee_aggregate {
  aggregate: journal_committee_aggregate_fields
  nodes: [journal_committee!]!
}

"""
aggregate fields of "journal_committee"
"""
type journal_committee_aggregate_fields {
  avg: journal_committee_avg_fields
  count(columns: [journal_committee_select_column!], distinct: Boolean): Int
  max: journal_committee_max_fields
  min: journal_committee_min_fields
  stddev: journal_committee_stddev_fields
  stddev_pop: journal_committee_stddev_pop_fields
  stddev_samp: journal_committee_stddev_samp_fields
  sum: journal_committee_sum_fields
  var_pop: journal_committee_var_pop_fields
  var_samp: journal_committee_var_samp_fields
  variance: journal_committee_variance_fields
}

"""
order by aggregate values of table "journal_committee"
"""
input journal_committee_aggregate_order_by {
  avg: journal_committee_avg_order_by
  count: order_by
  max: journal_committee_max_order_by
  min: journal_committee_min_order_by
  stddev: journal_committee_stddev_order_by
  stddev_pop: journal_committee_stddev_pop_order_by
  stddev_samp: journal_committee_stddev_samp_order_by
  sum: journal_committee_sum_order_by
  var_pop: journal_committee_var_pop_order_by
  var_samp: journal_committee_var_samp_order_by
  variance: journal_committee_variance_order_by
}

"""
input type for inserting array relation for remote table "journal_committee"
"""
input journal_committee_arr_rel_insert_input {
  data: [journal_committee_insert_input!]!
  on_conflict: journal_committee_on_conflict
}

"""aggregate avg on columns"""
type journal_committee_avg_fields {
  editor_id: Float
  journal_id: Float
}

"""
order by avg() on columns of table "journal_committee"
"""
input journal_committee_avg_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""
Boolean expression to filter rows from the table "journal_committee". All fields are combined with a logical 'AND'.
"""
input journal_committee_bool_exp {
  _and: [journal_committee_bool_exp]
  _not: journal_committee_bool_exp
  _or: [journal_committee_bool_exp]
  editor: editor_bool_exp
  editor_id: Int_comparison_exp
  journal: journal_bool_exp
  journal_id: Int_comparison_exp
  work_type: String_comparison_exp
}

"""
unique or primary key constraints on table "journal_committee"
"""
enum journal_committee_constraint {
  """unique or primary key constraint"""
  idx_22246_sqlite_autoindex_journal_committee_1
}

"""
input type for incrementing integer column in table "journal_committee"
"""
input journal_committee_inc_input {
  editor_id: Int
  journal_id: Int
}

"""
input type for inserting data into table "journal_committee"
"""
input journal_committee_insert_input {
  editor: editor_obj_rel_insert_input
  editor_id: Int
  journal: journal_obj_rel_insert_input
  journal_id: Int
  work_type: String
}

"""aggregate max on columns"""
type journal_committee_max_fields {
  editor_id: Int
  journal_id: Int
  work_type: String
}

"""
order by max() on columns of table "journal_committee"
"""
input journal_committee_max_order_by {
  editor_id: order_by
  journal_id: order_by
  work_type: order_by
}

"""aggregate min on columns"""
type journal_committee_min_fields {
  editor_id: Int
  journal_id: Int
  work_type: String
}

"""
order by min() on columns of table "journal_committee"
"""
input journal_committee_min_order_by {
  editor_id: order_by
  journal_id: order_by
  work_type: order_by
}

"""
response of any mutation on the table "journal_committee"
"""
type journal_committee_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [journal_committee!]!
}

"""
input type for inserting object relation for remote table "journal_committee"
"""
input journal_committee_obj_rel_insert_input {
  data: journal_committee_insert_input!
  on_conflict: journal_committee_on_conflict
}

"""
on conflict condition type for table "journal_committee"
"""
input journal_committee_on_conflict {
  constraint: journal_committee_constraint!
  update_columns: [journal_committee_update_column!]!
  where: journal_committee_bool_exp
}

"""
ordering options when selecting data from "journal_committee"
"""
input journal_committee_order_by {
  editor: editor_order_by
  editor_id: order_by
  journal: journal_order_by
  journal_id: order_by
  work_type: order_by
}

"""
select columns of table "journal_committee"
"""
enum journal_committee_select_column {
  """column name"""
  editor_id

  """column name"""
  journal_id

  """column name"""
  work_type
}

"""
input type for updating data in table "journal_committee"
"""
input journal_committee_set_input {
  editor_id: Int
  journal_id: Int
  work_type: String
}

"""aggregate stddev on columns"""
type journal_committee_stddev_fields {
  editor_id: Float
  journal_id: Float
}

"""
order by stddev() on columns of table "journal_committee"
"""
input journal_committee_stddev_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""aggregate stddev_pop on columns"""
type journal_committee_stddev_pop_fields {
  editor_id: Float
  journal_id: Float
}

"""
order by stddev_pop() on columns of table "journal_committee"
"""
input journal_committee_stddev_pop_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""aggregate stddev_samp on columns"""
type journal_committee_stddev_samp_fields {
  editor_id: Float
  journal_id: Float
}

"""
order by stddev_samp() on columns of table "journal_committee"
"""
input journal_committee_stddev_samp_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""aggregate sum on columns"""
type journal_committee_sum_fields {
  editor_id: Int
  journal_id: Int
}

"""
order by sum() on columns of table "journal_committee"
"""
input journal_committee_sum_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""
update columns of table "journal_committee"
"""
enum journal_committee_update_column {
  """column name"""
  editor_id

  """column name"""
  journal_id

  """column name"""
  work_type
}

"""aggregate var_pop on columns"""
type journal_committee_var_pop_fields {
  editor_id: Float
  journal_id: Float
}

"""
order by var_pop() on columns of table "journal_committee"
"""
input journal_committee_var_pop_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""aggregate var_samp on columns"""
type journal_committee_var_samp_fields {
  editor_id: Float
  journal_id: Float
}

"""
order by var_samp() on columns of table "journal_committee"
"""
input journal_committee_var_samp_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""aggregate variance on columns"""
type journal_committee_variance_fields {
  editor_id: Float
  journal_id: Float
}

"""
order by variance() on columns of table "journal_committee"
"""
input journal_committee_variance_order_by {
  editor_id: order_by
  journal_id: order_by
}

"""
unique or primary key constraints on table "journal"
"""
enum journal_constraint {
  """unique or primary key constraint"""
  idx_22234_sqlite_autoindex_journal_1
}

"""
input type for incrementing integer column in table "journal"
"""
input journal_inc_input {
  journal_id: Int
  sales: Int
}

"""
input type for inserting data into table "journal"
"""
input journal_insert_input {
  date: String
  journal_committees: journal_committee_arr_rel_insert_input
  journal_id: Int
  sales: Int
  theme: String
}

"""aggregate max on columns"""
type journal_max_fields {
  date: String
  journal_id: Int
  sales: Int
  theme: String
}

"""
order by max() on columns of table "journal"
"""
input journal_max_order_by {
  date: order_by
  journal_id: order_by
  sales: order_by
  theme: order_by
}

"""aggregate min on columns"""
type journal_min_fields {
  date: String
  journal_id: Int
  sales: Int
  theme: String
}

"""
order by min() on columns of table "journal"
"""
input journal_min_order_by {
  date: order_by
  journal_id: order_by
  sales: order_by
  theme: order_by
}

"""
response of any mutation on the table "journal"
"""
type journal_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [journal!]!
}

"""
input type for inserting object relation for remote table "journal"
"""
input journal_obj_rel_insert_input {
  data: journal_insert_input!
  on_conflict: journal_on_conflict
}

"""
on conflict condition type for table "journal"
"""
input journal_on_conflict {
  constraint: journal_constraint!
  update_columns: [journal_update_column!]!
  where: journal_bool_exp
}

"""
ordering options when selecting data from "journal"
"""
input journal_order_by {
  date: order_by
  journal_committees_aggregate: journal_committee_aggregate_order_by
  journal_id: order_by
  sales: order_by
  theme: order_by
}

"""
select columns of table "journal"
"""
enum journal_select_column {
  """column name"""
  date

  """column name"""
  journal_id

  """column name"""
  sales

  """column name"""
  theme
}

"""
input type for updating data in table "journal"
"""
input journal_set_input {
  date: String
  journal_id: Int
  sales: Int
  theme: String
}

"""aggregate stddev on columns"""
type journal_stddev_fields {
  journal_id: Float
  sales: Float
}

"""
order by stddev() on columns of table "journal"
"""
input journal_stddev_order_by {
  journal_id: order_by
  sales: order_by
}

"""aggregate stddev_pop on columns"""
type journal_stddev_pop_fields {
  journal_id: Float
  sales: Float
}

"""
order by stddev_pop() on columns of table "journal"
"""
input journal_stddev_pop_order_by {
  journal_id: order_by
  sales: order_by
}

"""aggregate stddev_samp on columns"""
type journal_stddev_samp_fields {
  journal_id: Float
  sales: Float
}

"""
order by stddev_samp() on columns of table "journal"
"""
input journal_stddev_samp_order_by {
  journal_id: order_by
  sales: order_by
}

"""aggregate sum on columns"""
type journal_sum_fields {
  journal_id: Int
  sales: Int
}

"""
order by sum() on columns of table "journal"
"""
input journal_sum_order_by {
  journal_id: order_by
  sales: order_by
}

"""
update columns of table "journal"
"""
enum journal_update_column {
  """column name"""
  date

  """column name"""
  journal_id

  """column name"""
  sales

  """column name"""
  theme
}

"""aggregate var_pop on columns"""
type journal_var_pop_fields {
  journal_id: Float
  sales: Float
}

"""
order by var_pop() on columns of table "journal"
"""
input journal_var_pop_order_by {
  journal_id: order_by
  sales: order_by
}

"""aggregate var_samp on columns"""
type journal_var_samp_fields {
  journal_id: Float
  sales: Float
}

"""
order by var_samp() on columns of table "journal"
"""
input journal_var_samp_order_by {
  journal_id: order_by
  sales: order_by
}

"""aggregate variance on columns"""
type journal_variance_fields {
  journal_id: Float
  sales: Float
}

"""
order by variance() on columns of table "journal"
"""
input journal_variance_order_by {
  journal_id: order_by
  sales: order_by
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "editor"
  """
  delete_editor(
    """filter the rows which have to be deleted"""
    where: editor_bool_exp!
  ): editor_mutation_response

  """
  delete data from the table: "journal"
  """
  delete_journal(
    """filter the rows which have to be deleted"""
    where: journal_bool_exp!
  ): journal_mutation_response

  """
  delete data from the table: "journal_committee"
  """
  delete_journal_committee(
    """filter the rows which have to be deleted"""
    where: journal_committee_bool_exp!
  ): journal_committee_mutation_response

  """
  insert data into the table: "editor"
  """
  insert_editor(
    """the rows to be inserted"""
    objects: [editor_insert_input!]!

    """on conflict condition"""
    on_conflict: editor_on_conflict
  ): editor_mutation_response

  """
  insert a single row into the table: "editor"
  """
  insert_editor_one(
    """the row to be inserted"""
    object: editor_insert_input!

    """on conflict condition"""
    on_conflict: editor_on_conflict
  ): editor

  """
  insert data into the table: "journal"
  """
  insert_journal(
    """the rows to be inserted"""
    objects: [journal_insert_input!]!

    """on conflict condition"""
    on_conflict: journal_on_conflict
  ): journal_mutation_response

  """
  insert data into the table: "journal_committee"
  """
  insert_journal_committee(
    """the rows to be inserted"""
    objects: [journal_committee_insert_input!]!

    """on conflict condition"""
    on_conflict: journal_committee_on_conflict
  ): journal_committee_mutation_response

  """
  insert a single row into the table: "journal_committee"
  """
  insert_journal_committee_one(
    """the row to be inserted"""
    object: journal_committee_insert_input!

    """on conflict condition"""
    on_conflict: journal_committee_on_conflict
  ): journal_committee

  """
  insert a single row into the table: "journal"
  """
  insert_journal_one(
    """the row to be inserted"""
    object: journal_insert_input!

    """on conflict condition"""
    on_conflict: journal_on_conflict
  ): journal

  """
  update data of the table: "editor"
  """
  update_editor(
    """increments the integer columns with given value of the filtered values"""
    _inc: editor_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: editor_set_input

    """filter the rows which have to be updated"""
    where: editor_bool_exp!
  ): editor_mutation_response

  """
  update data of the table: "journal"
  """
  update_journal(
    """increments the integer columns with given value of the filtered values"""
    _inc: journal_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: journal_set_input

    """filter the rows which have to be updated"""
    where: journal_bool_exp!
  ): journal_mutation_response

  """
  update data of the table: "journal_committee"
  """
  update_journal_committee(
    """increments the integer columns with given value of the filtered values"""
    _inc: journal_committee_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: journal_committee_set_input

    """filter the rows which have to be updated"""
    where: journal_committee_bool_exp!
  ): journal_committee_mutation_response
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""query root"""
type query_root {
  """
  fetch data from the table: "editor"
  """
  editor(
    """distinct select on columns"""
    distinct_on: [editor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [editor_order_by!]

    """filter the rows returned"""
    where: editor_bool_exp
  ): [editor!]!

  """
  fetch aggregated fields from the table: "editor"
  """
  editor_aggregate(
    """distinct select on columns"""
    distinct_on: [editor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [editor_order_by!]

    """filter the rows returned"""
    where: editor_bool_exp
  ): editor_aggregate!

  """
  fetch data from the table: "journal"
  """
  journal(
    """distinct select on columns"""
    distinct_on: [journal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_order_by!]

    """filter the rows returned"""
    where: journal_bool_exp
  ): [journal!]!

  """
  fetch aggregated fields from the table: "journal"
  """
  journal_aggregate(
    """distinct select on columns"""
    distinct_on: [journal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_order_by!]

    """filter the rows returned"""
    where: journal_bool_exp
  ): journal_aggregate!

  """
  fetch data from the table: "journal_committee"
  """
  journal_committee(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): [journal_committee!]!

  """
  fetch aggregated fields from the table: "journal_committee"
  """
  journal_committee_aggregate(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): journal_committee_aggregate!
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "editor"
  """
  editor(
    """distinct select on columns"""
    distinct_on: [editor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [editor_order_by!]

    """filter the rows returned"""
    where: editor_bool_exp
  ): [editor!]!

  """
  fetch aggregated fields from the table: "editor"
  """
  editor_aggregate(
    """distinct select on columns"""
    distinct_on: [editor_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [editor_order_by!]

    """filter the rows returned"""
    where: editor_bool_exp
  ): editor_aggregate!

  """
  fetch data from the table: "journal"
  """
  journal(
    """distinct select on columns"""
    distinct_on: [journal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_order_by!]

    """filter the rows returned"""
    where: journal_bool_exp
  ): [journal!]!

  """
  fetch aggregated fields from the table: "journal"
  """
  journal_aggregate(
    """distinct select on columns"""
    distinct_on: [journal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_order_by!]

    """filter the rows returned"""
    where: journal_bool_exp
  ): journal_aggregate!

  """
  fetch data from the table: "journal_committee"
  """
  journal_committee(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): [journal_committee!]!

  """
  fetch aggregated fields from the table: "journal_committee"
  """
  journal_committee_aggregate(
    """distinct select on columns"""
    distinct_on: [journal_committee_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [journal_committee_order_by!]

    """filter the rows returned"""
    where: journal_committee_bool_exp
  ): journal_committee_aggregate!
}
